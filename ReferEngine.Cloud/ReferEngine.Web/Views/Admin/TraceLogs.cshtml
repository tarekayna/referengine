@using ReferEngine.Common.Tracing
@model ReferEngine.Web.Models.Admin.TraceLogsViewModel

@*@section scripts {
    <script data-main="/typescript/admin/windowsAppInvites.js" type="text/javascript" src="~/typescript/lib/require.js"></script> 
}*@

@{
    var roles = Tracer.GetRoles();
}

<div id="content">
    <div class="container">
        <div class="row">
            <div class="span12">                                
                <div class="btn-group">
                    <button class="btn dropdown-toggle" data-toggle="dropdown">
                        <span>@Model.Role</span>
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (string role in roles)
                        {
                            string link = "/admin/tracelogs?role=" + role;
                            <li><a href="@link">@role</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <hr style="margin: 12px"/>
        <div class="row">
            <div class="span3">@DateTime.UtcNow.ToString()</div>
            <div class="span2 offset7">
                <div class="btn-group pull-right">
                @if (Model.CurrentPage > 1)
                {
                    var prevPage = Model.CurrentPage - 1;
                    var link = "tracelogs?role=" + Model.Role + "&page=" + prevPage;
                    <a class="btn" href="@link"><i class="icon-arrow-left"></i></a>
                }
                    <a class="btn disabled">@Model.CurrentPage</a>
                @{
                    var nextPage = Model.CurrentPage + 1;
                    var nextLink = "tracelogs?role=" + Model.Role + "&page=" + nextPage;
                }
                    <a class="btn" href="@nextLink"><i class="icon-arrow-right"></i></a>
                </div>
            </div>
        </div>
            @if (Model.TraceMessages != null)
            {
                for (int i = 0; i < Model.TraceMessages.Count(); i++)
                {
                    const string idFormat = "collapse{0}";
                    string id = string.Format(idFormat, i);
                    var traceMessage = Model.TraceMessages.ElementAt(i);
                    string className = string.IsNullOrEmpty(traceMessage.CategoryString) ? "" :
                                           "text-" + traceMessage.CategoryString.ToLower();
                    className = className == "text-info" ? "" : className;
                    <hr style="margin: 12px"/>
                    <div class="row @className">
                        <div class="span3">@traceMessage.Time.ToString()</div>
                        <div class="span7">
                            <p>@traceMessage.Message</p>
                        </div>
                        <div class="span2">
                            @if (traceMessage.Properties != null && traceMessage.Properties.Any())
                            {
                                <button type="button" class="btn" data-toggle="collapse" data-target="#@id">
                                    View Properties
                                </button>
                            }
                        </div>
                    </div>
                    if (traceMessage.Properties != null && traceMessage.Properties.Any())
                    {
                        <div class="row">
                            <div class="span12 collapse" id="@id">
                                <table class="table table-hover table-condensed">
                                    @for (var j = 0; j < traceMessage.Properties.Count(); j++)
                                    {
                                        bool noTopBorder = j == 0;
                                        var keyValuePair = traceMessage.Properties.ElementAt(j);
                                        <tr>
                                            <td @if(noTopBorder){<text>style="border-top: none"</text>}>@keyValuePair.Key</td>
                                            <td @if(noTopBorder){<text>style="border-top: none"</text>}>@keyValuePair.Value</td>
                                        </tr>
                                    }
                                </table>                                
                            </div>
                        </div>
                    }                
                }
            } 
    </div>
</div>
