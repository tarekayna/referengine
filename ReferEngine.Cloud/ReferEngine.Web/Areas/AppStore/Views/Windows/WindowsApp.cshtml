@using ReferEngine.Common.Models
@using ReferEngine.Web.Areas.AppStore.ViewModels
@using U = ReferEngine.Common.Utilities
@model ReferEngine.Common.ViewModels.AppStore.Windows.WindowsAppViewModel

@{
    WindowsAppStoreInfo appInfo = Model.WindowsAppStoreInfo;
    WindowsAppStoreCategory category = appInfo.Category;
    IHtmlString appName = @Html.Raw(appInfo.Name);
    ViewBag.Title = appName + ViewResources.TitleSeparator + category.Name;
    ViewBag.Title += category.HasParent ? ViewResources.TitleSeparator + category.ParentCategoryName : "";
    ViewBag.PageDescription = appInfo.DescriptionHtml;

    string colorHtml = appInfo.GetBackgroundColor();
    System.Drawing.Color color = System.Drawing.ColorTranslator.FromHtml(colorHtml);
    U.HsbColor hsbColor = U.HsbColor.FromColor(color);
    U.HsbColor darkerHsbColor = new U.HsbColor(hsbColor.H, hsbColor.S, hsbColor.B * 0.8);
    string darkerColorHtml = System.Drawing.ColorTranslator.ToHtml(darkerHsbColor.Color);
    U.HsbColor brighterHsbColor = new U.HsbColor(hsbColor.H, hsbColor.S, hsbColor.B * 1.2);
    string brighterColorHtml = System.Drawing.ColorTranslator.ToHtml(brighterHsbColor.Color);

    bool isWindows8 = Model.UserAgentProperties.IsWindows8;
}

<style type="text/css">
    a{color:@colorHtml}a:hover{color:#77b201}.btn-link:hover{color:#77b201}.color{background:@colorHtml;color:#fff}textarea:focus,input[type="text"]:focus,input[type="password"]:focus,input[type="datetime"]:focus,input[type="datetime-local"]:focus,input[type="date"]:focus,input[type="month"]:focus,input[type="time"]:focus,input[type="week"]:focus,input[type="number"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="search"]:focus,input[type="tel"]:focus,input[type="color"]:focus,.uneditable-input:focus{border-color:@colorHtml;outline:0;outline:thin dotted \9}header .navbar .navbar-inner li.active{border-top:5px solid #fff;background:@colorHtml;margin-top:-5px}header .navbar .navbar-inner nav li.blob{border-top:5px solid @colorHtml;margin-top:-5px}.dropdown-menu li>a:hover,.dropdown-menu li>a:focus,.dropdown-submenu:hover>a{background:@colorHtml}.dropdown-menu li>a:hover,.dropdown-menu li>a:focus,.dropdown-submenu:hover>a{background-color:@colorHtml}.dropdown-menu .active>a,.dropdown-menu .active>a:hover{background-color:@colorHtml}.breadcrumb{border-left:5px solid @colorHtml}.accordion-group{border:1px solid @colorHtml}.accordion-inner{border-top:1px solid @colorHtml}.accordion-heading{background-color:@colorHtml}.flex-direction-nav li a:hover{background:@colorHtml}.carousel-control{background:@colorHtml}.btn-link{color:@colorHtml}.nav .dropdown-toggle .caret{margin-top:6px;border-top-color:@colorHtml;border-bottom-color:@colorHtml}.pagination ul>li>a,.pagination ul>li>span{background-color:@colorHtml;border:1px solid @colorHtml;color:#fff;border-left-width:0}.nav-pills>.active>a,.nav-pills>.active>a:hover{color:#fff;background-color:@colorHtml}.nav-tabs>.active>a,.nav-tabs>.active>a:hover{background-color:@colorHtml;color:#fff;border:none;border-bottom-color:transparent;cursor:default}.label-orange,.badge-orange{background-color:@colorHtml}.nav-list>.active>a,.nav-list>.active>a:hover{background:@colorHtml}.nav-pills>.active>a,.nav-pills>.active>a:hover{background:@colorHtml}.nav .dropdown-toggle .caret{border-top-color:@colorHtml;border-bottom-color:@colorHtml}.progress-orange .bar,.progress .bar-orange{background:@colorHtml}.progress-orange.progress-striped .bar,.progress-striped .bar-orange{background:@colorHtml}.contact-form input:focus{border-color:@colorHtml}article .headline h4 a{color:@colorHtml}article.last-post{background:@colorHtml}ul.time-post li.year{border-bottom:1px solid @colorHtml}section#subintro{background:@brighterColorHtml}footer.footer{background:@colorHtml}.error-body{background:@colorHtml;padding:20px;text-align:center}a.thumbnail:hover{border-color:@colorHtml}ul.filter li.active a:hover,a.zoom:hover,a.link_post:hover,.flex-control-nav li a:hover,.flex-control-nav li a.active{background:@colorHtml}.thumbnail h4 a:hover,.thumbnail .meta span a:hover,ul.recent li h6 a:hover,ul.post-meta li a:hover,.media-body span,.media-body .media-heading a:hover,form label span,article.last-post h5 a:hover{color:@colorHtml;text-decoration:none}.nivo-directionNav a,.nivo-controlNav a.active,.nivo-controlNav a:hover{background-color:@colorHtml}.widget .heading{border-bottom:1px solid @darkerColorHtml}.widget .heading .btn{background-color:@darkerColorHtml;background-image:-moz-linear-gradient(top,@brighterColorHtml,@darkerColorHtml);background-image:-webkit-gradient(linear,0 0,0 100%,from(@brighterColorHtml),to(@darkerColorHtml));background-image:-webkit-linear-gradient(top,@brighterColorHtml,@darkerColorHtml);background-image:-o-linear-gradient(top,@brighterColorHtml,@darkerColorHtml);background-image:linear-gradient(to bottom,@brighterColorHtml,@darkerColorHtml)}.app-details .more-info h4 {border-bottom: 1px solid @darkerColorHtml;}
</style>

@section styles
{
    @Styles.Render("~/less/appstore/windows/app")
}

@section MetaTags
{
    @{
        string url = U.Util.BaseUrl + "app-store/windows/" + Model.WindowsAppStoreInfo.LinkPart;
    }

    <meta name="msApplication-ID"               content="microsoft.build.App"/>
    <meta name="msApplication-PackageFamilyName" content="@Model.WindowsAppStoreInfo.PackageFamilyName"/>
    <meta property="fb:app_id"             content="368842109866922" /> 
    <meta property="og:type"               content="referengine:app" /> 
    <meta property="og:url"                content="@url" />
    <meta property="og:title"              content="@Model.WindowsAppStoreInfo.Name" />
    <meta property="og:description"        content="@HttpUtility.HtmlDecode(Model.WindowsAppStoreInfo.DescriptionHtml)" /> 
    <meta property="referengine:platform"  content="Windows 8" />
    @if (Model.App != null)
    {
        if (Model.App.VimeoLink != null)
        {
            <meta property="og:video" content="@Model.App.VimeoLink" />
        }
        if (Model.App.HighQualityLogoImage != null)
        {
            <meta property="og:image" content="@Model.App.HighQualityLogoImage.GetLink()" />
        }
    }
    @foreach (var appScreenshot in Model.WindowsAppStoreInfo.AppScreenshots)
    {
        <meta property="og:image" content="@appScreenshot.CloudinaryImage.GetLink()" />
    }
}

@section Navigation
{
    @{
        var navigationViewModel = new WindowsStoreNavigationViewModel
        {
            WindowsAppStoreCategory = category,
            WindowsAppStoreInfo = appInfo
        };
    }
    @Html.Partial("_WindowsStoreNavigation", navigationViewModel)
}

@section SearchForm
{
    @Html.Partial("_WindowsSearchForm")
}

@section Scripts
{
    @{
        double appId = Model.App != null ? Model.App.Id : -1;
    }
    <script>
        window.re = {};
        window.re["appId"] = "@appId";
        window.re["rating"] = "@appInfo.Rating";
    </script>

    <script data-main="/typescript/appstore/windows/windowsApp.js" type="text/javascript" src="~/typescript/lib/require.js"></script> 
}

<div class="row" itemscope itemtype="http://schema.org/SoftwareApplication">
    @if (appInfo.Category.HasParent)
    {
        <meta itemprop="applicationSubCategory" content="@appInfo.Category.Name" />        
    }
    <meta itemprop="operatingSystem" content="Windows 8" />
    <link itemprop="SoftwareApplicationCategory" href="@appInfo.Category.Schema"/>
    <div class="span4">
        <aside>
            @if (isWindows8)
            {
                string storeLink = "ms-windows-store:PDP?PFN=" + appInfo.PackageFamilyName;
                <a id="open-win8-store" data-store-link="@storeLink">
                    @Html.Partial("_WindowsStoreDownloadTile", new List<string> { brighterColorHtml, colorHtml })
                </a>
                <iframe class="hidden" id="open-store-frame"></iframe>                
            }
            else
            {
                <a class="not-win8-link" href="#notWin8" role = "button" data-toggle = "modal">
                    @Html.Partial("_WindowsStoreDownloadTile", new List<string> { brighterColorHtml, colorHtml })
                </a>
            }

            <div class="widget" id="recommendations">
                <h4 class="heading">
                    <span class="btn">
                        @(new ImageTag("thumbs_up_icon_30_puu2vr", "png").ToHtmlString())
                    </span>&nbsp;&nbsp;Verified Recommendations
                    <span class="pull-right popover-button" data-title="What are verified recommendations?"
                          data-content="Verified recommendations can only be submitted from within the app. Unlike
                        a 'like' action which can happen anywhere on Facebook or Refer Engine, a recommend
                        is more trusted as it verifies that the recommender has actually used the app.">
                        ?
                    </span>
                </h4>
                <div data-bind="visible: !RecommendersLoaded">
                    Loading recommendations...
                </div>
                <div data-bind="visible: RecommendersLoaded() && Recommenders().length == 0">
                    <p>No recommendations yet.</p>
                    <p class="hey-dev">
                        Are you the developer of @appName?
                        @Links.Developer("Enable recommendations for your app today!")
                    </p>
                </div>
                <div data-bind="visible: RecommendersLoaded() && Recommenders().length > 0">
                    <p class="text-center text-success">@Model.NumberOfRecommendations recommendations to date</p>
                    <ul class="recommenders-list">
                        <!-- ko foreach: Recommenders -->
                        <li>
                            <a class="pull-left" href="#">
                                <img data-bind="attr: { src: PictureUrl }" alt="" />
                            </a>
                            <div class="rcmd-text">
                                <h5>
                                    <span data-bind="text: Name" class="fb-name"></span>
                                    recommended @appName.
                                </h5>                         
                                <p class="rcmd-time muted">
                                    <span data-bind="text: Time"></span>
                                </p>
                            </div>
                        </li>
                        <!-- /ko -->
                    </ul>
                </div>
            </div>
            <div class="widget">        
                <h4 class="heading">
                    <span class="btn">
                        @(new ImageTag("icon_magnifier_30_vxjslt", "png").ToHtmlString())
                    </span>&nbsp;&nbsp;App Details
                </h4>
                <ul class="project-detal">
                    <li itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
                        <label>Windows Store Rating: </label>
                        <meta itemprop="ratingValue" content="@appInfo.Rating" />
                        <div id="star-rating"></div> (<span itemprop="ratingCount">@appInfo.NumberOfRatings</span> ratings)
                    </li>
                    <li itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <label>Price: </label>
                        <span>@appInfo.GetPriceString()</span>
                        <meta itemprop="price" content="@appInfo.Price" />
                        <meta itemprop="priceCurrency" content="USD" />
                        <link itemprop="availability" href="http://schema.org/InStock" />
                    </li>
                    @if (!string.IsNullOrEmpty(appInfo.AgeRating))
                    {
                        <li>
                            <label>Age Rating:</label> 
                            <span itemprop="contentRating">@appInfo.AgeRating</span>
                        </li>
                    }
                    <li><label>Languages:</label> @appInfo.Languages</li>
                    
                    <li><label><a href="@appInfo.SupportLink">Support Link</a></label></li>
                    <li itemprop="author" itemscope itemtype="http://schema.org/Organization">
                        <label>Publisher:</label> 
                        <a href="@appInfo.WebsiteLink" itemprop="url" target="_blank">
                            <span itemprop="name">@appInfo.Developer</span>
                        </a>
                    </li>
                    
                    <li><label>Copyright:</label> @Html.Raw(appInfo.Copyright)</li>
                </ul>
            </div>
            @if (Model.App == null)
            {
                <div class="widget">
                    <h4 class="heading">
                        <span class="btn">
                            @(new ImageTag("icon_laptop_30_mhra4d", "png").ToHtmlString())
                        </span>&nbsp;&nbsp;App Developer?
                    </h4>
                    <p>
                        Are you the developer of @appName?
                    </p>
                    <p>
                        Register to modify the content of this page. You can add high resolution
                        videos and screenshots.
                    </p>
                </div>
            }
        </aside>
    </div>
    <div class="span8">
        <article class="app-details">
            <header>
                <img src="@Model.WindowsAppStoreInfo.LogoImage.GetLink()" class="pull-left" itemprop="image" />
                <h4 itemprop="name">@appName</h4>
            </header>
            <div class="clearfix">
            </div>
            <div class="well more-info">
                <div id="imageCarousel" class="carousel slide">
                    <div class="carousel-inner">
                        @if (Model.App == null)
                        {
                            for (int i = 0; i < appInfo.AppScreenshots.Count(); i++)
                            {
                                var image = appInfo.AppScreenshots.ElementAt(i).CloudinaryImage;
                                <div class="@MvcHtmlString.Create(i == 0 ? "active" : "") item" itemprop="screenshot" itemscope itemtype="http://schema.org/ImageObject">
                                    <img alt="@image.Description" src="@image.GetLink()" itemprop="contentURL" />
                                    <p itemprop="description">@Html.Raw(image.Description)</p>
                                </div>
                            }
                        }
                        else
                        {
                            bool renderedActive = false;
                            if (Model.App.VimeoLink != null)
                            {
                                renderedActive = true;
                                <div class="js-video item active">
                                    @* ReSharper disable Html.Obsolete *@
                                    <iframe src="@Model.App.VimeoLink" width="732" height="412" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
                                    @* ReSharper restore Html.Obsolete *@
                                </div>
                            }
                            for (int i = 0; i < Model.App.AppScreenshots.Count(); i++)
                            {
                                var image = Model.App.AppScreenshots.ElementAt(i).CloudinaryImage;
                                <div class="@MvcHtmlString.Create(i == 0 && !renderedActive ? "active" : "") item" itemprop="screenshot" itemscope itemtype="http://schema.org/ImageObject">
                                    <img alt="@image.Description" src="@image.GetLink()" itemprop="contentURL" />
                                    <p itemprop="description">@Html.Raw(image.Description)</p>
                                </div>
                            }
                        }
                        <a class="carousel-control left" href="#imageCarousel" data-slide="prev">&lsaquo;</a>
                        <a class="carousel-control right" href="#imageCarousel" data-slide="next">&rsaquo;</a>
                    </div>
                </div>
                <h4>Description</h4>
                <p itemprop="description">@Html.Raw(appInfo.DescriptionHtml)</p>
                <h4>Features</h4>
                <p>@Html.Raw(appInfo.FeaturesHtml)</p>
            </div>
        </article>
    </div>
</div>

@if (!isWindows8)
{
    <div id="notWin8" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3>Oops! Not a Windows 8 PC</h3>
        </div>
        <div class="modal-body">
            <p>
                @appName is a Windows 8 application.
                You need to be on a Windows 8 PC to open the Windows Store and view @appName.
            </p>
        </div>
    </div>      
}
