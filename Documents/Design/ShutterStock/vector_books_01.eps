%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Den) ()%%Title: (Dr-Obj-Books-001-2.eps)%%CreationDate: 25.01.11 17:17%%Canvassize: 16383%%BoundingBox: 25 53 825 797%%HiResBoundingBox: 25.5117 53.8584 824.8818 796.5356%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0 1 0 0.4 (C=0 M=100 Y=0 K=40)%%+ 0 1 1 0.4 (C=0 M=100 Y=100 K=40)%%+ 0 1 0.8 0 (C=0 M=100 Y=80 K=0)%%+ 0 1 0.8 0.3 (C=0 M=100 Y=80 K=30)%%+ 0 0.3 0.85 0 (C=0 M=30 Y=85 K=0)%%+ 0 0.3 0.85 0.3 (C=0 M=30 Y=85 K=30)%%+ 0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40)%%+ 0 0.8 0 0 (C=0 M=80 Y=0 K=0)%%+ 0 0.8 0 0.3 (C=0 M=80 Y=0 K=30)%%+ 1 0 0.3 0.4 (C=100 M=0 Y=30 K=40)%%+ 0.3 0 1 0 (C=30 M=0 Y=100 K=0)%%+ 0.3 0 1 0.3 (C=30 M=0 Y=100 K=30)%%+ 0.5 0 1 0.4 (C=50 M=0 Y=100 K=40)%%+ 0.6 0 1 0 (C=60 M=0 Y=100 K=0)%%+ 0.6 0 1 0.3 (C=60 M=0 Y=100 K=30)%%+ 0.8 0 1 0.4 (C=80 M=0 Y=100 K=40)%%+ 0.8 0.7 0 0 (C=80 M=70 Y=0 K=0)%%+ 0.8 0.7 0 0.3 (C=80 M=70 Y=0 K=30)%%+ 0.9 0 0.2 0 (C=90 M=0 Y=20 K=0)%%+ 0.9 0 0.2 0.3 (C=90 M=0 Y=20 K=30)%%+ 0.9 0.8 0 0.4 (C=90 M=80 Y=0 K=40)%%+ 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 65537 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 425.5 424.8887 425.5 424.8887%AI3_TileBox: 145.6948 45.1934 704.6953 828.1938%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 850.3896 850.3896%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -888 1252.3887 0.5 1357 826 26 1 0 66 189 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 1 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MO%AI7_Thumbnail: 128 120 8%%BeginData: 28232 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD15FF8357575D5757575D5757575D575757815781578257825782%578257825782578257827B827C827B827C827B827C827B827C8282A78282%82A7828282A7828282A7828282A783A782A783A782A783A782A783A77C82%A8FD16FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8A757573257%575732575757325733573257335732573357325733573257335732573357%325733573257335732573357325733573257335732573357325733573257%3357325733573257335732573357325733573257A8FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9%FFFFFF8357517C527C587C527C587C587C587C587C587C527C587C517C58%7C577C58585158575851585758515751572D5757572D5757572D57575751%575757515757572D5757572D5757572D5757572D575757335751575783FF%FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FF2C517DA87DA87D847DA87DA87DA87DA87DA8%7DA87DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA8FD1A7D7C7D7D7D7C7D7D%7D527D587D527D587D512D0A5756FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%FFA9FFA8FD17FF822D7CA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AF%A8FFA8AFA8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FF%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A9A8A9A8A9A8A9A87C2D2D%335DA7FD14FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF8351%2DFD26A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8%A8A8A9A8A8A8A9A8A8A8A9A8A8512D2C2D3282A9FFA8FFA9FFA8FFA9FFA8%FFA9FFA8FFA9FFA8FD04FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FF515783A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8580B2D2D577BFFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9A8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA97C2C83FD4CA8512D2C2D327BA8FFA9FFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FD18FF835783A9A8FFA8A9A8FFA8A9A8FFA8A9A8%FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8%A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8%FFA87C2D572D577BFD14FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FF2DFD4CA8A9572D2C575782A8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%A7A8AFA8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A87C2D2D2D5782FFA9FFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFFD4EA8512D2C5732A8A9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FD19FFA9A8A9A8A9A8A9A8A9A8A9A8A9A8AFA8A9A8AFA8A9%A8AFA8A9A8AFA8A9A8AFA8A9845A5A8484AFA8A9A8AFA8A9A8AFA8A9A8AF%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A87C2D57%5781AFFD14FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9A77CA7%7C837C837C837C837C837C837D837DA783837DA783837DA783837DA77DA7%7CA7592F0C36133635605A847DA883A77DA783A77DA883A77DA883A77DA8%83A883A8A7A883A8A7A883A8A7A883A8A7A8572D56577CFFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FD04FFA9FFFFFFA9FFFFFFA9FFFFFFA9FF%FFFFA9FF7BFD0557335757573357575733FD1257582E352F350D36131413%36143635593458FD0D575D5757575D5757575D5757575D5757575D575757%5D57AEA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9A8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA87C2C572C572C572C572C572C572C57%2C572C572C572C572C572C572C572C572D350D2F0C0D0C597D592F350D35%0D141336143635353458335732572C5756572C5732572C5732572C573257%2C5732572C5756572C7CA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FD16FF83572D572D572D572D572D572D572D572D572D572D572D572D57%2D572D572E352F350D3559A87DA8A8A87EA87D7D595A133613361436363C%355934582D572D5751572D572D572D572D572D572D572D572D332D57A7FD%16FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF512D2C572C51%2C572C512C572C512C572C512C572C512C572C512C582F350C0D0C597DA8%7D7E7DFFA8A9A8A9A8A87D7E7D592F590D350D141436133635342D342D51%2C572C512C572C512C572C512C572D2D51FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9832D572C572D572C572D572C572D572C572D572C572D572C572D352F%350D0D2F847EA87DA87DA8A8FFA8FFA8FFA8FFA8FFA8A87D847D59535A0D%36133614360C350C342D582D572C572D572C572D572D2D2DA7A9FFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8572C512C572C512C572C512C572C512C572C51%2C572C2D2E352F2F0C2F597E7DA87D7E7DA87DA8A8A9A8A8A8A9A8A9A8AF%A8A9FD04A87D7D59592F590D350C0D0C0D0C2F0C2E2D342D512C572C2D2C%57A8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD18FF57572D%572D572D572D572D572D572D572D572D572D582F352F130D7E7EA87DA87E%A87DA87EA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8A87E7E7D%7D59590C350D0D0C350D350C342E582D577CFD18FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8A72C512C572C512C572C512C572C512C%572C512D352F350C0D2F7E7DA87D847DA87D847DA87DA8A8AFA8A9A8AFA8%A9A8AFA8A9A8AFA8A9A8FFA8A9A8FFA8A8FD047D595953350C350C0D0C0D%0C0D0C8484AFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD04FF%A9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA8572D572C572D572C57%2D572C572D572C582E352F350D597DA87EA87DA87EA87DA87EA87DA8A8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D7D7E%7D7D7D5959350C350D36133636605A8584FFA9FFFFFFA9FFFFFFA9FFFFFF%A9FFFFFFA9A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF58%2D2C512C572C512C572C512C572D340C350C0D0C7D7D7E7DA87D7E7DA87D%7E7DA87D7E7DFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9%A8A9A8A87D7D537D7D7D597D7D7D59592F350D3613140D36355A5A8484AF%A8FFA9FFA8FFA9FFA8FFA9FD19FFAE2D572D572D572D572D572D572E352F%350D3559A87EA87DA87EA87DA87EA87DA87EA87DA8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D7D847D7EA8%FFA8A87D847D595936133613361436366060A9A8FD08FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8582C512C572C512C572C332E%352F0D0C597D847DA87D847DA87D847DA87D847DA87D7D7DFFA8A9A8AFA8%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A87D7D59%7DA8A9A8FFA8A9A8A87EA87D7D595959350D140D14133635605A8484AFA9%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFF7D572D57%2C572D572D592F350C1335847DA87EA87DA87EA87DA87EA87DA87DA87D84%7EA8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A9A8A87D7E59595936%13361336143613AFFFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9AF2C512C512C572D350C350C3559A87D7E7DA87D7E7DA87D7E7D%A87D7E7DA859350C36353635847EA884A9A8A8A8A9A8A8A8A9A8A8A8A9A8%A8A8A9A8A8A8A9A8A8A8A9A8A8A8FFA8A9A8A9A8A8A8A9A8A8A8A9A8A9A8%FFFD04A87D7E7D7D59592F130D3635FD1BFF822D572D582F350D132F7E7D%A87EA87DA87EA87DA87EA87DA87EA87D8435352F35133613361436363C36%8484A9A8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87EA80C0C133CA8%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA7572D34%0D350C0D53A87D847DA87D847DA87D847DA87D7E7DA859350C350D0D0C0D%0C0D0C130D13133613361336365A5A8484A8A8AFA8A8A8AFA8A9A8AFA8A9%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FF%A8AF7E0C060D1384FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9FFFFFF2E352F130C597DA87DA87DA87DA87DA87DA87DA87DA87E7E2F%352F35FD040D0C0D0D0D0C0D0D0D0C130D36133636361336365A5A8484A9%A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A80C0D0C3636A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8842F2F0C0D2F7D777E7D7E7D7E7D7E7D7E7D7E7D%A87D7E59350C2F0C0D0C0D0C0D0C0D0C0D0C0D0C0D0C0D0C0D0C0D0C0D0D%130D3613361336133635605A8484A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A97E0C060C1336FD17FF845A2F35%0D357DA87D5353532FFD04535453535354535453542F532F53282F282F2E%2F0C2F0D2F0C2F0D2F0D2F0D2F0C130D0D0CFD040D35133613361436133C%36605A8584A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8A80C0D0C3636A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%AF592F0C0D0D597DA87D7D28532853285329532853295328532929285329%53FD17282F2853FD092F362F362F360D36355A59847E8484A9A8A8A8A9A8%A9A8AFA8A8A8A9A8A9A8AFA8A9A8FF840C060D1336FFA9FFFFFFA9FFFFFF%A9FFFFFFA9FFFFFFA9FFFF842F350D3559A87EA87DA87D2852A87D7E7D7E%7D7D537D535352FD0B53525352282853282F285328532853285328532953%2953295329534D5329534D5329535353295353532F532F5353545354537E%537E537E7E7E7D7E537EA8FFA8FFA8A80C0D0C3636A9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FF7E350C0D0C597D7E7DA87D7E7D7D06537EA8A8A87E%A8A8A87EA87EA87DA87DA87DA87D7D59FD077D537D7D7D537D537D537D53%7D5353525352535253525353532853535328532853285329532853295328%53292F282F2829282F2853295329A8A8A9A8A97E0D0C0D135AFD10FFAF59%350D132F847EA87DA87EA87DA87D2853A8A8A9A8FFA8A9A8FFA8AFA8FFA8%AFA8FFA8A87D847D7E7D7E7D7D7D7E7D7D7DA87EFD09A87EA8A8A87DA87E%A87DA87DA87D7E7D7E7D7E7D7E7D7E7D7E537D537D537D5353537D537D28%2F285353FFA8FFA8A90C0D0D3660A9FFA8FFA9FFA8FFA9FFA8FFA9FFA884%2E2F0C35597E7DA87D847DA87D847D7D28537DFD10A8A9FD097D7E7DFD04%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9FD0AA87EA8A8A87D%A87EA87DA87DA87DA87D530028295335605A847E0D0C3613A9FFFFFFA9FF%FFFFA9FFFFFFA9FF84350C350D597DA87EA87DA87EA87DA87EA87D28537D%A8AFA8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A87D7D7DA87EA8A8A9A8A9A8FF%A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8AFA8A9A8AFA8A9%A8AFA8A9A8AFA8A9A8FFA8A9A8FFA8A9A8FF28280653535A133614363636%1460A9A8FFA9FFA8FFA9FFA8FFA9FFA82F0C0D2F847D7E7DA87D7E7DA87D%7E7DA87D7D06537DFD11A87DFD04A8A9FD37A853012828532F0D0D130D13%0D36A8FD0EFF595A7DA87EA87DA87EA87DA87EA87DA87E842F28537DA8FF%A8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9%A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FF%A8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FF2928282953530C0D0C0D2F84A9FF%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9A87DA87D847DA87D847DA87DA859%590C2F06537DFD4EA853062806532F0D2F84A8FFA8FFA9FFFFA9FFFFFFA9%FFFFFFA9FFFFFFA9FFA8A87DA87EA87DA87EA87D8459350C350D28527EA8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A928292829295AA9FFA9FFFFFFA9%FFFFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF7D7E7DA87D7E7DA87D590C35%0C0D0C0D06537DFD4EA8530628285353FFA9FFA8FFA9FFA8FD11FFA87DA8%7EA87D8459352F350D0D0C130D2852A8A8A9A8FFA8A9A8FFA8A9A8FFA8A9%A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FF%A8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9%A8FFA8A9532928532F7EFD09FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF7D%7E7DA87D590C350D0D0C0D0C0D0C0D2853FD4FA853062928537EFFA9FFA8%FFA9FFA8FD04FFA9FFFFFFA9FFFFFFA9FFFFFFA8A87D8459352F350C0D0D%0D0CFD040DFD0453545354537E537E537E537E537E7E7E537E7E7E7DFD04%7EA87EA87EA87EA87EFD04A8A9A8A8A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9A8A95329285353A9A9%FFFFFFA9FFFFFFA9A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9A859590C2F0C0D%0C0D0C0D0C0D0C0D0C0D2853295329532953295329532853295328532953%2853295328532953295329532953295329532953295329532FFD04535A53%53537E537E537D7C7D537E7D7E7D7E7D7E7DA87E7E7EA87EA87EFD04A853%282F297EA9FFA8FFA9FFA8FFA9FD0FFFAF59352F350D130D0D0C130D0D0C%130D0D0C292828282F2828282F2829282F282F2853282F2853282F285328%2F285329532853295329FD05535277527D5276767C767C757C757C759F75%7B755329532FFD045354535353545353535453545354FD0453A8FD0AFFA8%FFA9FFA8FFA9FFA8FFA9FFA85A0C2F0C0D0C0D0C0D0C0D0C0D0C0D0C0D0C%0DFD0428062806280628062806FD0728274C284C275227524B524B525176%7575757B7575757B757B747B7475747B7475747B74757475757B75532829%2853282F285328532853285328532953295329537EFFA9FFA8FFA9FFA8FF%A9FFFFA9FFFFFFA9FFFFFFA9FFFFA90C350D0D0C0D0D0D0C0D0D0D0C0D0D%0D0C130C28285228524C524C524B5251765176FD05757B759F759F759F75%9F749F747B749F747B759F757B757B7575757C757C757C767C767C767C74%75759F75FD132805287EFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FF%A9FFA8FFA8590C2F0CFD042E522D585152517C5175517575757475747574%7574757475747574757475747B757574FD04757C757C757C757C517C767C%767D7CFD067D7E7D7E7DA87DA87DA87D754A75759F752828280628282806%28282806FD052800287DFFA9FFA8FFA9FFA8FFA9FFA8FD0AFFA8A07BA075%9F759F759F759F759F759F749F7575757B757B757B757B757B757C75A07C%7C767C767C7CFD047DA17D7D7DA87DA87DA87DA87DA87EA87EFD08A8A9A8%A8A8A9A8A8A8A9A8A77575759F7BC77628282F2828282F2828282FFD0428%0629A8FD0EFFA9FFA8FFA9FFA8FFA9A77475757B757B7575757B757B757C%767C757C767C76FD107DA87DA87DA87EA87EA8A8A87EA8A8A884FD07A884%A8A8A87EA8A8A87EA8A8A87EA8A8A87EA87D757475757B9FC7522806FD0B%280053A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD04FFA9FFFFFFA9FFCAA775%FD087DA87D847DA87DA87D7E7D7D7D7E7D7D7D7EFD077DFD04A8A9FD27A8%A77575759F75C19FC752FD0B280653A9FFFFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9A8FFA9FFA8FFA9FFA8FFA9FF84A87DA87DA87EA87EA884A87EA8FD0A%7D59FD047DA87EA87EA884A87EA884A87EA884A87EA884A87EA884A87EA8%84A87EA884A87EA884A87EA884A87EA884A87EA884A87C757475747B9FC1%9F9F4B280628282806282828007EA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FD0EFFA8A8A8A9A8A8A8A9A8A8A8A9A87E7D847D7E7D7E7D7D7DA87EA8%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A7757B759F75C79FC89F9F%4C292828282F282828A8FD13FFA8FFA9FFA8FFA9FFA8FFA9FFFD04A87EA8%A8A87EA8A8A87E7EFD077DA87EA884A8A8A87EA8A8A87EA8A8A87EA8A8A8%7EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8%A8A87EA8A8A87DFD04759F9FC19FC1747527282828062828A9A8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9FFFFFFFD0C%A87D7D7D7E7DFD3AA8A7757B757B75C79FC79F9F759FFD0528FFFFFFA9FF%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FFA9FFA8FFA9%A97DA884A87EA884A87EA87E7D7DA87EA87EA884A87EA884A87EA884A87E%A884A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884%A87EA884A87EA884A87EA884A87EA87D75747B759F9FC19FC19F9F749F27%2853FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0EFFFD05A8%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8%A9A8A8A8A9A8A8A8A9A8A7759F759F9FC89FC79FC89F9F759F7DFD18FFA9%FFA8FFA9FFA8FFA9FFA8FFA9A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87E%A8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8%A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA87D7574%7B75C19FC19FC19F9F759F749FA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FD04FFA9FFFFFFA9FFFFFFA9FFFD3EA87DA8A1A77DA7A1A1%7CA17CA07CA0757B75C79FC79FC79FC7FD059FC8FFFFA9FFFFFFA9FFFFFF%A9FFFFFFA9FFFFFFA9FFFFFFA9A8FFA9FFA8FFA9FFA8FFA9FFA8A87EA87E%A884A87EA884A87EA884A87EA884A87EA8A8A87EA8A8A87EA8A8A87EA884%A87EA87DA87DA87DA77DA77CA17CA07C7C75A0757C759F757B757B757B75%7B7575747B7475747B7475747B759F9FC19FC19FC19F9F749F999F9EC8A8%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD0EFFA8A8A8A9A8A8A8%A9A8A8A8A9FD06A8A1A8A1A7A1A7A1A77CA77CA07CA07CA075A07B9F759F%759F759F757B7A7B7A9F759F757B759F759F759F759F759F757B759F757B%757B7575757B759F9FC89FC79FC89FC79F9F9FC19FC89FC8FD15FFA8FFA9%FFA8FFA9FFA8FFA8A87DA77CA17CA17CA07CA07B7C75A0757B759F757B75%9F757B747B7575747B7475747B7575747B757B747B747B507B567B50817A%A57A9F7A7B747550754A7574754A7574754A7550754A7574754A75749F9F%C79FC19FC1FD059FC19FC19FC8A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%FFA9FFFFA9FFFFFFA9FFFFFFA19F759F759F759F759F757B759F757B759F%757B759F7575757B7575757B7575757B757B747B7B7B567B567B507B577B%507B517B56A580A57AA580A57A7B51757475757574757575747575757475%75757475759F9FC79FC79FC79F9F9FC79FC79FC79FC9A9FFFFFFA9FFFFFF%A9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FFA9A7747574757475747574%757475507574754A7550754A7550755075507B507B507B507B5057507B50%575057517C517C7C7D7C51507B56A57AA57AA57A817A572C51507550754A%754A754A7550754A7550754A754A759FC19FC19FC19FC19FC19FC19FC19E%C9A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0BFFCFA07574FD0B75517B%517B517B517B567B577B567B577B517B57FD047C7D7DA87DA87DA8A8A884%A85157567B80A580A580A580A5808151575157507B7B7B757BFD0C759FC7%9FC89FC79FC89FC79FC89FC79FCFFD11FFA9FFA8FFA9FFA8FFA9FFA8FFA8%A775755075507B5151505751512C572C51507B5057517C577C52FD047DA8%7DA87DA87EA87DA87EA87DA87EA87D572C5750817AA57AA57AA57AA58081%5057505750575657507B747B747574754A7574754A7599C19FC19FC19FC1%9FC19FC19FC19FCFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD04FFA9FFFFFF%A8A87D837C7C5757515751572C57515751575158587C7C7D7DA87DA87DA8%7EA87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A75057517B7AA580A5%80A580A580A580A5567B577B567B577B567B577B7A7B7B7B747575755075%75C79FC79FC79FC79FC79FC79FC1A7FFFFFFA9FFFFFFA9FFFFFFA9FFFFFF%A9A7A77C7C7B7B567B50512C512C512D575057517C527C7CFD067DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D512C57%507B7AA57AA57AA57AA57AA57A81567B567B567B567B567B567B567B7A7B%7A7B74755075749F9FC19FC19FC19FC19FC19EC8A8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FF7B577B507B577B577B577C587C7C7D7DA87DA87DA87DA87D%A87DA87DA8A8A884A8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8%A87EA8A8A85157517B7AA580A580A580A580A580A580A57B7B56817B817A%817B817A817B817AA57BA57AA57B9F75C79FC79FC89FC79FC89FC7A0FD10%FF7B7B517C52FD047D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7DA87DA87DA8%7EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87D57%5057507B7AA57AA57AA57AA57AA57AA57AA5567B567B7A7B7A817A7B7A81%7A817AA57AA57AA57A817AA59EA59FC79FC19FC19FC8A8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFFFA8AF7EA87EA87D847DA87D847DA87D847DA87D847D%A87EA87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8%A87EA8A8A87EA85157507B7AA580A580A580A580A580A580A580A57B817A%817A817AA580A57AA580A580A580A580A580A57AA580A57AA5A5A59FC7A6%FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8A87DA87D7E7D7D7D7E7D7D%7D7E7D7D7D7E7D847DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87D575057507B7AA57AA57AA57AA57AA5%7AA57AA57A817A7B7A817AA57AA57AA57AA57AA57AA57AA57AA57AA57AA5%7A817AA57AA57AA5A6A8A8FFA9FFA8FFA9FFA8FFA9FFA8FD04FFA8A884A8%7DA87DA87DA87DA87DA87DA87EA884A8A8A87EA8A8A87EA8A8A87EA8A8A8%7EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A884A8577B567B80A580A5%80A580A580A580A580A580A580A580A580A580A580A580A580A580A580A5%80A580A580A580A580A580A580A580A580A5A5A6A7CFFD09FFA9FFA8A87D%A87D7E7D7D7D7E7D7D7D7E7DA87DA87EA87DA87EA87DA87EA87DA87EA87D%A87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87D7B507B56A57A%A57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57A%A57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57A817AA5A5FFA8FFA9%FFA8FD04FFA8A87E7E7DA87D847DA87DA87DA8A8A87EA8A8A87EA8A8A87E%A8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8%A8507B568180A580A580A580A580A580A580A580A580A580A580A580A580%A580A580A580A580A580A580A580A580A580A580A580A580A580A580A580%A57AA5A6FFA9FFFFFFA9A8FFA9A87D7E7D7D7D7E7D7D7DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87D7B507B7AA57AA57AA57AA57AA57AA57AA57AA57AA5%7AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA5%7AA57AA57AA57AA57AA57AA5A7FFA8FFA9FD04FFA8A87DA87DA87DA87DA8%A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A884A8A8A884A8A8A8%7EA884A87DA77C837C827B7CFD047B567B80A580A580A580A580A580A580%A580A580A580A580A580A580A580A580A580A580A580A580A580A580A580%A580A580A580A580A580A580A580A580A580A6FD05FFA8FFA97E7D7E7D7D%7DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87DA77D83%7C7C7B7C7B7B507B567B507B567B507B507B507B507B7AA57AA57AA57AA5%7AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57A817AA57A817AA5%7A817AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57AA57ACFA8FFA9FF%FFA9FF7D7E7DA87EA87EA8A8A87EA8A8A87EA8A8A87DA87DA77DA77C7C7B%7C7B7B567B567B567B577B507B577B507B5157505751572C572D512C5757%7B56817BA57AA581A57AA580A57AA581A57AA581A57BA581A57BA67BA57B%A67BA07BA07BA07BA07CA0709A81A580A580A580A580A580A580A580A580%A580A5A7FFA9FFFFA9FF7E7D7DA87DA87DA87DA87D7D7C7D7C7C7B7C577B%507B507B507B507B507B517B507B51755176515151524B524B524B514B52%4B514B524B524B704B4C4B764B704B706F70707670707076FD0A706F7070%706F707070457070704570697045767AA57AA57AA57AA57AA57AA57AA57A%A57AA57AA7A9FFA8FFFFA8A87DA77C827C7CFD047B567B7B7B7076707670%7670707076FD0A7069706A706970696A6970696A696A696A696A696A6970%696A6970696A69706A706A706A706A706A7069706A7069706A7069707070%6A706AFD0970697070A080A580A580A580A580A580A580A580A580A5A7FD%04FF567B507B567B507B507B507B50575057517069706A7069706A706970%69706970697069706970456A456A45704570457045704570457045704570%4570457045704C704C7670707077707670777677707776764C777676767D%777D767D77FD067DA87069457070A57AA57AA57AA57AA57AA57AA57AA57A%A57AADA9FFA8FF7B577B50575157505751512C5751512C51707070777076%707776777677767776777677767776777677767D777D777D77FD107D7E7D%A87DA87EA87DA8A8A87EA8A8A87EFD14A877456A70707CA580A580A580A5%80A580A580A580A580A5A8FFFFFFA9A8A883837C7C575751572C512C512C%2D2C5127767D7E7D7E7DA87D847DA87DA87DA87DA87DA87D7D53FD167D7E%7DA8A8A87EA8A8A87EA8A8A87EA8A8A87EA884A87EA884A87EA884A87EA8%84A87EA884A8706A4570459A7AA57AA57AA57AA57AA57AA57AA57AA581FF%A8FFA9FD0CFFA7A883837C7C575751FD04A8A9A8A8A8A9A8A8A8A9A8A8A8%A9FD04A87D7D7D847D7E7D847D7E7D847D7E7D847D7E7D7E7DA8A8A9A8A8%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9%A8A8A89B696A697070A67AA580A580A580A580A580A580A580CEFD05FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8AEFD04A87EA8A8A87EA8A8A8%7EA8A8A87EA8A8A87EA8FD137DA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8%A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A8706A456A70947651%2C57507B56817A817AA57AA57AA6A9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9%FFFFFFA9FFFFFFA9FFFFFFFD16A87D7D7D7E7D7D7D7E7D7D7D7E7D7D7DFD%2AA87745706A70709B51512C512D512C5751577B827BA6A8FFFFFFA9FFFF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8A87EA884A87EA884A8%7EA884A87EA884A87EA884A87EA87D7D59FD077D537D7DA87EA884A87EA8%84A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884A8%7EA884A87EA8706A457070706AA17C837DA783A8A8FFA8AFA8FFA8FFA8FF%A9FFA8FD16FFFD05A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9FD04A87D%7D7D847D7D7DFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A89B69FD04709595FD14%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8A87EA8A8A87EA8A8%A87EA8A8A87EA8A8A87EA8A8A87EFD05A8FD057DFD05A87EA8A8A87EA8A8%A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87E%A8A8A87EA8766A457070949495A1FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FD04FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFD1EA87EFD30A8%9B6A7070709495949BCBFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9A8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8A884A87EA884A87EA884A8%7EA884A87EA884A87EA884A87EA884A87EA8A8A87EA884A87EA884A87EA8%84A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884A87EA884A8%7EA884A87EA884A870706970699594956AC4A9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FD15FFA9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A89B6A%707095959594959BFD12FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FF7EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87E%A8A8A884A8A8A884A8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8%A87EA8A8A87EA8A8A87EA8A8A87EA8A2A87EA8A2A876FD04709594959495%A8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFFFA9FFFFFFA9FFFFFFA9FFFF%FFA9FFFFFFA8CBA2A87DA8A2A87DA8A2A27DA2A1A27DA2A1A27DA27DA177%A27DA177A27DA177A177A177A177A177A177A1769B779B779B779B77A177%77769B7677769B7677769B70777077707770777077FD057076FD05709594%9B949594CBFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FF77706FFD0B70697070706970707069706A7045706A70%69706A704570697045706970457069704570697045706970457069704570%4570457069704570697045706970457069704570697045FD047095949594%959495A2FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD11FFA26A706AFD0D70%6A7070706A7070706A706A7069706A706970707069706A7069706F706970%6F7069706F7069706F938D94699469946970457069706970696A4570696A%4570696A457069704594959594BD959594FD12FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9A877764569456A456945694569456F4569456F4569456F%456F456F696F456F696F456F696F696F696F696F696F686F696F686F696F%696F698D8C8D8D8D8C8D6969446F6869456F456945694569456A4569456A%4569457094959495949BA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD04FF%A9CA9AA19AA19A9A769A759AFD046F6E6F456F446F456F446F456F446F45%6F446F696F686F696F696F6F6F69FD106F766F766F766F6F696F6FFD088D%93446F696F686F696F686F696F696F696F6970696A459494959495A2FFA9%FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9A8FFA9FF756F6869446F6869446F%6969446F446F446F446F446F446F446F4A6F4B6F4B754B7676764B7675FD%06767D767D767D7D7D77FD0D7D4469446F698D688D8D8D688D8D8D446F68%69686F68696869686968696869688D688D698D8D8D699AA1C3A1CAA8FFA8%FFA9FFA8FFA9FFA8FFA9FD05FFCA6F76767C767D767D767D767D76FD0A7D%7E7D7E7D847D7D7DA87D847DA87DA87DA87DA87DA87DA87DA87EA87DA87E%A87DA87EA87DA87EA87DA87C6F446F6F93FD098D93696F69936993699369%93699369936993FD0D8D9393BC9AC29AC3A1CAFD05FFA8FFA9FFA8FFA87E%7D7E7D7E7D84FD157D7E7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87D847DA87D847DA87D847D7D446F446F69FD0B8D6969686F69696893%6969688D698D69FD0F8D8C8D8D8D8C8D8D94A8FFA9FFFFA9FFFFFFA9FFA8%A87DA87EA87D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7DA87DA87EA87D%A87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87E%A8766F696F696FFD0C8D6993699369936993698D69FD1A8D9AA9FFFFA9FF%A8FFA9FFA8A87D7E7DA8FD137DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA8%7D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7C446F446F68938D8D%688D8D8D688D8D8D688D6869688D688D688D698D688D8D8D688D8D8D688D%8D8D688D8D8D688D8D8D688D8D8D688D8CA1A8FD08FFA8A87DA87EA87D7E%7D7E7D847D7E7D7E7D7E7DA87DA87DA87EA87DA87EA87DA87EA87DA87EA8%7DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA8766F696F696F%69FD0D8D69938D936993FD1E8D93FFFFA9FFA8FFA9FFA8FF7D7E7DA8FD0B%7D7E7DA87DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA8%7D847DA87D847DA87D847DA87D847DA87D7D446F446F6993FD0E8D688D69%8D69FD1E8D93A8FD04FFA9FFFFFFA8A87EA87D7E7D7D7D7E7D7D7DA87DA8%7DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA8%7EA87DA87EA87DA87EA87DA87EA87DA87C6F446F6F6F69FD328DCAA9A8FF%A9FFA8FFA9A97DA8FD097D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA8%7D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E%7D7D4469446F698D688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D%8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688DA8FD%08FFA8A87D7D7D7E7D7E7DA87EA87DA87EA87DA87EA87DA87EA87DA87EA8%7DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA8%7EA87DA87C6F696F6F6FFD338DFFFFA8FFA9FFA8FFA9A8FD057D847DA87D%A87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA87D%847DA87D847DA87D847DA87D847DA87D847DA87D847D7D6869446F69FD32%8D93A8FFFFA9FFFFFFA9FFA87E7DA87DA87DA87EA87DA87EA87DA87EA87D%A87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87EA87DA87E%A87DA87EA87DA87EA87DA87EA8766F696F6F93FD328D93FFFFA9FFA8FFA9%FFA8A87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7D%A87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D%7E7DA87D7D446F696F688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D68%8D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D8D8D688D8C%A1A8FD05FFA19AA1769A76A0769A76A0769A76A0769A76A0769A76A0769A%76A0769A76A0769A76A0769A76A0769A76A0769A76A0769A76A0769A76A0%769A76A0769A76A076A0756F6F6F69FD338DA8FFFFA9FFA8FF6F69686F69%69686F6969686F6969686F6969686F6969686F6969686F6969686F696968%6F6969686F6969686F6969686F6969686F6969686F6969686F6969686F69%69696F69FD338D9AFFA8FD04FFA99AFD436F938D938D938D938D938D938D%938D938D938D938D938D938D938D938D938D938D938D938D938D938D938D%938D938D938D938D8D99FFFFFFA9A8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(FILTERiT4 Trail  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Trail ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Tiling  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Tiling ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 DropShadow  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Shadow ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Reflections  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Reflections ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Neon  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Neon ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Generation  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Generation ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Galaxy  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Galaxy ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Frame  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Frame ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Explosion  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Explosion ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Emboss  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Emboss ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Cutout  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Cutout ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Circle  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Circle ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Border  ver4.2 for PowerPC Mac AICS4) (FILTERiT4 Live Border ver4.2 for PowerPC Mac AICS4) (FILTERiT4.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--10 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B7C7C7D7D7E7E7F80>01<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[0.5 0 1 0.4 1 50 100 %_BS%_0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0 0 5 50 100 Bs0.3 0 1 0 1 50 0 %_BS%_0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 10)(Unnamed gradient 10) 0 2 Bd[<E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0<333435363738393A3B3C3D3E3F404142434445464748494A4B4D><4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[1 0 0.3 0.4 1 50 100 %_BS%_1 0 0.3 0.4 (C=100 M=0 Y=30 K=40) 0 0 5 50 100 Bs0.9 0 0.2 0.3 1 50 0 %_BS%_0.9 0 0.2 0.3 (C=90 M=0 Y=20 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 13)(Unnamed gradient 13) 0 2 Bd[<CCCCCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDCDCDCDCDDDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E6><B3B3B3B3B4B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCC>0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[0.9 0.8 0 0.4 1 50 100 %_BS%_0.9 0.8 0 0.4 (C=90 M=80 Y=0 K=40) 0 0 5 50 100 Bs0.8 0.7 0 0 1 50 0 %_BS%_0.8 0.7 0 0 (C=80 M=70 Y=0 K=0) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 2 Bd[<4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E80>01<4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566>1 %_Br[0.5 0 1 0.4 1 50 100 %_BS%_0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0 0 5 50 100 Bs0.3 0 1 0.3 1 50 0 %_BS%_0.3 0 1 0.3 (C=30 M=0 Y=100 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 19)(Unnamed gradient 19) 0 2 Bd[0<CCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0<4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566>1 %_Br[0 1 0 0.4 1 50 100 %_BS%_0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 5 50 100 Bs0 0.8 0 0.3 1 50 0 %_BS%_0 0.8 0 0.3 (C=0 M=80 Y=0 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 2 Bd[0<4D4D4D4D4E4E4E4E4F4F4F4F505050505151515152525252535353535454545455555555565656565757575758585858595959595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F6060606061616161626262626363636364646464656565656666><D9D9D9DADADADADBDBDBDBDCDCDCDCDDDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[0 0.4 0.95 0.4 1 50 100 %_BS%_0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0 0 5 50 100 Bs0 0.3 0.85 0 1 50 0 %_BS%_0 0.3 0.85 0 (C=0 M=30 Y=85 K=0) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 2 Bd[01<CCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566>1 %_Br[0 1 1 0.4 1 50 100 %_BS%_0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 5 50 100 Bs0 1 0.8 0.3 1 50 0 %_BS%_0 1 0.8 0.3 (C=0 M=100 Y=80 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 23)(Unnamed gradient 23) 0 2 Bd[0<4D4E4F505152535455565758595A5B5C5D5E5F60616263646566><D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2><4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[0 0.4 0.95 0.4 1 50 100 %_BS%_0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0 0 5 50 100 Bs0 0.3 0.85 0.3 1 50 0 %_BS%_0 0.3 0.85 0.3 (C=0 M=30 Y=85 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 6)(Unnamed gradient 6) 0 2 Bd[01<CCCDCDCECECFCFD0D0D1D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D9D9DADADBDBDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7E7E8E8E9E9EAEAEBEBECECEDEDEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F7F7F8F8F9F9FAFAFBFBFCFCFDFDFEFEFF><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566>1 %_Br[0 1 1 0.4 1 50 100 %_BS%_0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 5 50 100 Bs0 1 0.8 0 1 50 0 %_BS%_0 1 0.8 0 (C=0 M=100 Y=80 K=0) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 8)(Unnamed gradient 8) 0 2 Bd[<999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC>01<4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566>1 %_Br[0.8 0 1 0.4 1 50 100 %_BS%_0.8 0 1 0.4 (C=80 M=0 Y=100 K=40) 0 0 5 50 100 Bs0.6 0 1 0.3 1 50 0 %_BS%_0.6 0 1 0.3 (C=60 M=0 Y=100 K=30) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0.6 0 1 0 (C=60 M=0 Y=100 K=0) 0 0 Xk(C=60 M=0 Y=100 K=0)Pc0.6 0 1 0.3 (C=60 M=0 Y=100 K=30) 0 0 Xk(C=60 M=0 Y=100 K=30)Pc0.8 0 1 0.4 (C=80 M=0 Y=100 K=40) 0 0 Xk(C=80 M=0 Y=100 K=40)Pc0.9 0 0.2 0 (C=90 M=0 Y=20 K=0) 0 0 Xk(C=90 M=0 Y=20 K=0)Pc0.9 0 0.2 0.3 (C=90 M=0 Y=20 K=30) 0 0 Xk(C=90 M=0 Y=20 K=30)Pc1 0 0.3 0.4 (C=100 M=0 Y=30 K=40) 0 0 Xk(C=100 M=0 Y=30 K=40)Pc0.8 0.7 0 0 (C=80 M=70 Y=0 K=0) 0 0 Xk(C=80 M=70 Y=0 K=0)Pc0.8 0.7 0 0.3 (C=80 M=70 Y=0 K=30) 0 0 Xk(C=80 M=70 Y=0 K=30)Pc0.9 0.8 0 0.4 (C=90 M=80 Y=0 K=40) 0 0 Xk(C=90 M=80 Y=0 K=40)Pc0 0.3 0.85 0 (C=0 M=30 Y=85 K=0) 0 0 Xk(C=0 M=30 Y=85 K=0)Pc0 0.3 0.85 0.3 (C=0 M=30 Y=85 K=30) 0 0 Xk(C=0 M=30 Y=85 K=30)Pc0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0 0 Xk(C=0 M=40 Y=95 K=40)Pc0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 Xk(C=30 M=0 Y=100 K=0)Pc0.3 0 1 0.3 (C=30 M=0 Y=100 K=30) 0 0 Xk(C=30 M=0 Y=100 K=30)Pc0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0 0 Xk(C=50 M=0 Y=100 K=40)Pc0 0.8 0 0 (C=0 M=80 Y=0 K=0) 0 0 Xk(C=0 M=80 Y=0 K=0)Pc0 0.8 0 0.3 (C=0 M=80 Y=0 K=30) 0 0 Xk(C=0 M=80 Y=0 K=30)Pc0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 Xk(C=0 M=100 Y=0 K=40)Pc0 1 0.8 0 (C=0 M=100 Y=80 K=0) 0 0 Xk(C=0 M=100 Y=80 K=0)Pc0 1 0.8 0.3 (C=0 M=100 Y=80 K=30) 0 0 Xk(C=0 M=100 Y=80 K=30)Pc0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 Xk(C=0 M=100 Y=100 K=40)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Books) Ln0 Auu0 O0.6 0 1 0.3 (C=60 M=0 Y=100 K=30) 0 0 Xk0 J 0 j 1 w 4 M []0 d0 XR158.7305 700.7446 m204.6855 583.3643 l645.7715 609.479 l692.2549 716.4014 l158.7305 700.7446 lfu662.6338 787.6157 m662.6338 703.8184 l685.8828 698.2319 690.9961 729.4229 v696.1094 760.6138 689.5996 790.4092 662.6338 787.6157 cBb1 (Unnamed gradient 8) 677.6172 703.4297 90 84.3682 1 0 0 1 0 0 Bg-0.000004 84.3682 37.4756 0.000002 660.6338 703.4297 Xm-0.000369 8451.8145 37.4756 0.000002 660.6338 -7748.3848 Bc-0.000004 84.3682 37.4756 0.000002 660.6338 703.4297 Bm-0.000369 8451.8145 37.4756 0.000002 660.6338 787.7979 Bcf0 BBU0.6 0 1 0.3 (C=60 M=0 Y=100 K=30) 0 0 Xk675.752 783.373 m659.5488 745.6138 l182.2979 719.4995 l160.3076 785.3628 l675.752 783.373 lfuu0 0 0 0.15 k174.4658 780.6724 m181.0186 771.0298 184.5215 758.4053 183.5234 744.5757 c182.5215 730.687 177.1563 718.0166 169.1172 708.3687 c664.7197 702.415 l664.7197 774.7847 L174.4658 780.6724 lfUu0.6 g174.4658 780.6724 m175.5498 779.0781 176.54 777.395 177.4512 775.645 C664.7197 771.9258 L664.7197 774.7847 L174.4658 780.6724 LfU0.8 0 1 0.4 (C=80 M=0 Y=100 K=40) 0.1 0 Xk666.4717 698.1104 m632.8848 609.479 l640.5498 609.9331 l674.0645 696.4834 l666.4717 698.1104 lf0.6 0 1 0 (C=60 M=0 Y=100 K=0) 0 0 Xk680.917 794.1226 m679.2051 795.7515 676.6484 796.1196 674.5479 795.0488 c672.3262 793.9214 668.9492 792.6631 667.6963 792.6631 C160.5156 796.5356 L160.3076 785.3628 L667.6533 781.4902 L670.2744 781.4902 673.3496 782.436 675.752 783.373 C683.1455 774.771 687.3281 762.0386 687.3281 747.7988 c687.3281 731.3037 681.7158 715.5898 673.125 707.3926 C669.8896 708.8105 L669.1934 709.1143 668.4414 709.2744 667.6826 709.2783 C158.9385 711.9175 L158.7305 700.7446 L666.4717 698.1104 L671.8281 695.7646 L672.5459 695.4512 673.3076 695.2974 674.0645 695.2974 c675.2461 695.2974 676.417 695.6719 677.3965 696.4033 c690.208 705.9546 698.4863 726.1279 698.4863 747.7988 c698.4863 766.6313 692.082 783.5161 680.917 794.1226 cfUUu788.6289 633.521 m788.6289 555.7754 l810.4805 546.9321 815.1299 563.2256 v819.7783 579.5181 826.7529 633.521 788.6289 633.521 cBb1 (Unnamed gradient 10) 803.7363 553.3794 90 80.1416 1 0 0 1 0 0 Bg-0.000004 80.1416 42.124 0.000002 786.6289 553.3794 Xm-0.000375 8579.1836 42.124 0.000002 786.6289 -8025.8047 Bc-0.000004 80.1416 42.124 0.000002 786.6289 553.3794 Bm-0.000375 8579.1836 42.124 0.000002 786.6289 633.521 Bcf0 BB0.9 0 0.2 0.3 (C=90 M=0 Y=20 K=30) 0 0 Xk804.4014 624.9888 m781.0723 618.1582 l403.6289 684.7295 l118.2148 543.2319 l107.0176 542.7393 l393.5088 710.4521 l804.4014 624.9888 lfuu0 0 0 0.3 k118.2148 543.2319 m121.3545 537.6367 125.8252 529.2905 125.8252 518.6641 c125.8252 508.0366 123.3379 496.9102 118.2148 488.1201 c398.6445 626.5322 l419.8271 635.9653 419.8271 662.8501 v419.8271 689.7354 400.1641 701.8042 Y118.2148 543.2319 lfUu0 0 0 0.1 k400.1641 701.8042 m406.6211 690.4688 410.4014 676.5693 410.1211 662.2036 c409.8379 647.8164 405.5313 635.3979 398.6445 626.5322 c792.1094 556.7065 l792.1094 622.2993 L400.1641 701.8042 lfU0.9 0 0.2 0.3 (C=90 M=0 Y=20 K=30) 0 0 Xk807.3838 545.1904 m749.5732 528.7734 l137.7363 465.9253 l106.4053 476.167 l392.9268 621.4165 l792.1094 553.3804 l807.3838 545.1904 lf1 0 0.3 0.4 (C=100 M=0 Y=30 K=40) 0 0 Xk796.9414 547.978 m762.2363 538.1797 l762.2363 534.9204 l803.1094 546.3071 l796.9414 547.978 lf0.9 0 0.2 0 (C=90 M=0 Y=20 K=0) 0.2 0 Xk811.0654 634.8813 m809.5625 636.8179 806.9629 637.5435 804.6719 636.6777 c803.0781 636.0742 800.8877 635.6094 800.2129 635.6909 C394.5605 719.3818 L393.2168 719.6631 391.8076 719.4365 390.6133 718.7427 C107.1367 552.9072 L107.0176 542.7393 L394.375 708.0068 L797.9756 624.7456 L800.0781 624.3232 802.416 624.5703 804.4014 624.9888 C810.3594 615.77 813.7236 603.3232 813.7236 590.1973 c813.7236 576.25 809.7695 563.27 803.8203 556.8125 C802.1807 557.9141 L801.5352 558.3467 800.8076 558.6401 800.043 558.7749 C394.0322 629.9478 L392.8535 630.1597 391.6328 629.9805 390.5635 629.4419 C106.5215 485.7495 L106.4053 476.167 L393.9082 618.6235 L796.9414 547.978 L801.1309 545.1646 L803.0254 543.8936 805.5 543.9033 807.3838 545.1904 c818.0127 552.4561 824.8818 570.1226 824.8818 590.1973 c824.8818 607.2607 819.8467 623.5483 811.0654 634.8813 cf1 0 0.3 0.4 (C=100 M=0 Y=30 K=40) 0.3 0 Xk390.5635 629.4419 m106.5215 485.7495 L106.4053 476.167 L393.9082 618.6235 L393.9082 629.96 L392.7676 630.1377 391.5977 629.9614 390.5635 629.4419 Cf1 D390.6133 718.7427 m107.1367 552.9072 L107.0176 542.7393 L394.375 708.0068 L394.375 719.4033 L393.0869 719.6274 391.7529 719.4048 390.6133 718.7427 Cfuu0 D0.6 g400.1641 701.8042 m400.8545 700.5933 401.5078 699.3467 402.1348 698.0781 C792.1094 617.6279 L792.1094 622.2993 L400.1641 701.8042 LfU651.4004 650.8408 m651.4004 650.8408 L548.8125 671.6519 L628.6934 629.2549 L651.4004 650.8408 Lf1 0 0.3 0.4 (C=100 M=0 Y=30 K=40) 0.2 0 Xk666.5039 663.2769 m543.2969 688.6958 L565.8359 672.6357 L565.832 672.6357 L657.1641 653.7939 L666.5039 663.2769 LfUUUu728.6543 576.2598 m728.6543 491.0659 l756.083 482.2212 761.1982 521.3262 v766.3125 560.4316 752.3652 581.3813 728.6543 576.2598 cBb1 (Unnamed gradient 13) 745.4531 490.208 90 86.814 1 0 0 1 0 0 Bg-0.000004 86.814 41.6582 0.000002 726.6543 490.208 Xm-0.000373 8522.4395 41.6582 0.000002 726.6543 -8032.2324 Bc-0.000004 86.814 41.6582 0.000002 726.6543 490.208 Bm-0.000373 8522.4395 41.6582 0.000002 726.6543 577.022 Bcf0 BB0.8 0.7 0 0.3 (C=80 M=70 Y=0 K=30) 0 0 Xk223.748 587.9063 m226.5381 504.8574 l726.082 553.3804 l745.582 571.6035 l262.8018 590.6924 l223.748 587.9063 lfu0 0 0 0.4 k233.9463 583.3643 m233.9463 504.8574 l251.584 516.5537 251.2354 545.709 v250.8857 574.8633 233.9463 583.3643 yfu0 0 0 0.15 k233.9463 583.3643 m241.5898 572.8853 246.2305 559.3301 246.2305 544.6396 c246.2305 529.9473 241.5898 516.6719 233.9463 506.6533 c732.5986 492.9971 l732.5986 566.9458 L233.9463 583.3643 lfU0.8 0.7 0 0.3 (C=80 M=70 Y=0 K=30) 0 0 Xk747.6387 482.9971 m660.3086 410.5273 l224.3809 471.0469 l223.748 498.2866 l737.834 490.208 l747.6387 482.9971 lf0.9 0.8 0 0.4 (C=90 M=80 Y=0 K=40) 0 0 Xk736.7354 484.8413 m660.0762 419.1396 l662.8438 415.7881 l745.582 484.5093 l736.7354 484.8413 lf0.8 0.7 0 0 (C=80 M=70 Y=0 K=0) 0.2 0 Xk751.1172 582.2544 m749.4063 584.0371 746.7207 584.48 744.5293 583.3467 c742.291 582.1914 739.2715 581.1631 738.2832 581.1523 C223.748 599.0869 L223.748 587.9063 L737.9404 569.9844 L740.4541 569.9556 743.2754 570.7275 745.582 571.6035 C752.6211 562.5811 756.5986 549.4487 756.5986 534.8892 c756.5986 518.1626 751.3506 502.3384 743.293 494.0703 C740.5322 495.4165 L739.8164 495.7656 739.0332 495.957 738.2363 495.9785 C223.748 509.4634 L223.748 498.2866 L736.7354 484.8413 L741.7725 482.3843 L742.5469 482.0063 743.3828 481.8213 744.2129 481.8213 c745.4307 481.8213 746.6406 482.2197 747.6387 482.9971 c759.8594 492.5093 767.7568 512.877 767.7568 534.8892 c767.7568 553.959 761.6914 571.2231 751.1172 582.2544 cfu0.8 0.7 0 0.3 (C=80 M=70 Y=0 K=30) 0.1 0 Xk513.9902 588.9697 m354.582 594.5264 L355.7852 583.3042 L472.125 579.2495 L513.9902 588.9697 Lfu0.6 g233.9463 583.3643 m234.8701 582.0981 235.7471 580.7852 236.5811 579.4321 C732.5986 562.1436 L732.5986 566.9458 L233.9463 583.3643 LfU483.0273 575.1631 m350.9355 579.5122 L353.5762 550.4224 L483.0273 575.1631 LfUUUu571.9746 490.6006 m571.9746 402.1484 l596.6172 394.6992 603.125 426.8213 v609.6328 458.9438 604.0537 500.8423 571.9746 490.6006 cBb1 (Unnamed gradient 23) 588.749 401.4004 90 90.7729 1 0 0 1 0 0 Bg-0.000004 90.7729 41.6582 0.000002 569.9746 401.4004 Xm-0.000366 8364.4502 41.6582 0.000002 569.9746 -7963.0488 Bc-0.000004 90.7729 41.6582 0.000002 569.9746 401.4004 Bm-0.000366 8364.4502 41.6582 0.000002 569.9746 492.1733 Bcf0 BB0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0 0 Xk86.5225 458.772 m115.7686 448.1196 l579.1738 481.2896 l605.5244 457.8965 l603.6055 495.7915 579.1738 492.7007 v554.7432 489.6108 86.5225 458.772 yfuu0 0 0 0.2 k100.1943 456.9058 m106.7646 447.0176 110.5859 433.7813 110.2139 419.0225 c109.8447 404.2451 105.3379 390.5469 98.2188 379.9287 c579.1738 401.5293 l579.1738 481.2896 L100.1943 456.9058 lfU0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0 0 Xk586.3867 395.8838 m702.8301 307.4111 l155.4209 346.1797 l85.7959 373.4092 l98.2188 379.9287 l565.9307 401.7998 l586.3867 395.8838 lf0 0.3 0.85 0 (C=0 M=30 Y=85 K=0) 0 0 Xk597.4424 495.0244 m709.2422 374.7979 717.2617 365.3701 v725.2813 355.9424 725.2813 322.7725 717.2617 308.458 C713.7744 302.5225 706.4531 301.4746 y585.5957 395.8838 l626.4766 412.4502 597.4424 495.0244 vfu645.4326 367.4648 m661.167 374.0107 669.749 392.9326 673.1611 413.415 C659.7168 427.9453 645.1621 443.6396 632.4346 457.353 C641.9199 435.6563 654.0869 398.9326 645.4326 367.4648 CBb1 (Unnamed gradient 2) 664.5352 373.3057 107 89.7607 1 0 0 1 0 0 Bg-26.2435 85.8386 42.0307 12.8501 643.5205 366.8809 Xm-2465.7275 8065.0298 42.0307 12.8501 3109.248 -7698.1484 Bc-26.2435 85.8386 42.0307 12.8501 643.5205 366.8809 Bm-2465.7275 8065.0298 42.0307 12.8501 617.2773 452.7197 Bcf0 BBU0 0.3 0.85 0.3 (C=0 M=30 Y=85 K=30) 0 0 Xk593.5693 498.9233 m591.7822 500.5161 589.1738 500.7861 587.0928 499.5981 c584.5977 498.1729 580.9297 496.5854 579.4844 496.4971 C86.6172 469.9663 L86.5225 458.772 L580.125 485.3428 L582.9355 485.5151 586.2637 486.7734 588.8096 487.9424 C596.7656 479.1851 601.2646 465.7319 601.2646 450.3564 c601.2646 432.2686 595.0195 414.6982 585.4902 405.3418 C581.8027 406.7744 L581.0801 407.0547 580.3164 407.1836 579.5293 407.1475 C85.8916 384.5977 L85.7959 373.4092 L578.8623 395.9326 L584.6191 393.6953 L586.4707 392.9727 588.5635 393.2939 590.1133 394.5342 c603.666 405.3457 612.4229 427.2583 612.4229 450.3564 c612.4229 470.5557 605.5518 488.2573 593.5693 498.9233 cfuu0.6 g100.1943 456.9058 m101.3389 455.1846 102.3936 453.3545 103.3633 451.4395 C579.1738 477.0532 L579.1738 481.2896 L100.1943 456.9058 LfU182.3691 423.0967 m348.6211 469.5537 L202.1768 462.0981 L182.3691 436.8721 L182.3691 423.0967 Lf0 0.4 0.95 0.4 (C=0 M=40 Y=95 K=40) 0.1 0 Xk366.998 485.0596 m207.6025 476.479 L199.2129 464.8384 L323.5996 471.5337 L366.998 485.0596 LfUUUu390.1904 385.8535 m390.1904 292.2813 l413.9004 301.5908 416.6914 337.4375 v419.4805 373.2852 406.4629 389.5791 390.1904 385.8535 cBb1 (Unnamed gradient 17) 403.6299 292.2813 90 94.0928 1 0 0 1 0 0 Bg-0.000004 94.0928 33.29 0.000001 388.1904 292.2813 Xm-0.000357 8172.6299 33.29 0.000001 388.1909 -7880.3496 Bc-0.000004 94.0928 33.29 0.000001 388.1904 292.2813 Bm-0.000357 8172.6299 33.29 0.000001 388.1904 386.374 Bcf0 BB0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0 0 Xk26.6416 336.6309 m51.8418 332.2002 l392.9268 377.167 l415.418 371.791 l411.8076 390.9668 379.7285 386.374 v347.6484 381.7813 26.6416 336.6309 yfuu0 0 0 0.25 k42.1074 335.7109 m46.1455 326.666 48.0498 314.3203 46.8906 300.3291 c45.7246 286.2461 41.666 273.0078 35.9189 262.6133 c392.9268 292.9063 l392.9268 377.167 L42.1074 335.7109 lfU0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0 0 Xk25.5117 253.9395 m163.5391 239.3252 l453.5762 248.7988 l668.6074 223.9893 l778.8652 230.3643 l396.8105 285.7295 l382.168 289.2539 l25.5117 253.9395 lf0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 Xk399.126 395.7246 m765.8457 316.4902 776.5391 314.1611 v787.2324 311.833 813.7334 264.3496 778.8652 230.3643 C778.8652 230.8291 393.8936 283.5889 y414.6592 309.5068 417.0693 345.3516 v419.4795 381.1982 399.126 395.7246 yfu526.625 319.8896 m551.4043 325.9775 592.3604 339.4766 644.1152 342.7881 C582.9668 356.001 513.1797 371.0801 463.7705 381.7568 C487.8154 363.2734 514.3174 340.126 526.625 319.8896 CBb1 (Unnamed gradient 1) 567.0986 319.2412 107 89.9941 1 0 0 1 0 0 Bg-26.3117 86.0618 157.8585 48.2622 488.1699 295.1104 Xm-2437.2397 7971.8506 157.8585 48.2622 2925.4102 -7676.7402 Bc-26.3117 86.0618 157.8585 48.2622 488.1699 295.1104 Bm-2437.2397 7971.8506 157.8585 48.2622 461.8584 381.1719 Bcf0 BBU0.3 0 1 0.3 (C=30 M=0 Y=100 K=30) 0 0 Xk401.1289 394.8027 m399.3301 396.123 396.915 396.2422 394.9941 395.1084 c392.375 393.5635 387.6787 391.2568 385.4785 390.9766 C26.7969 347.9033 L26.6416 336.6309 L386.8477 379.8887 L390.2051 380.3164 394.3145 382.1299 397.2217 383.6055 C406.7148 375.083 412.0938 361.1436 412.0938 344.7373 c412.0938 325.1943 404.4453 305.8096 392.8379 295.3916 C387.7734 296.9375 L387.0869 297.1475 386.3613 297.2236 385.6533 297.1602 C25.665 265.1699 L25.5117 253.9395 L385.5586 285.9346 L392.459 283.8252 L394.1836 283.3018 396.0566 283.6406 397.4863 284.7412 c413.1387 296.7939 423.252 320.3438 423.252 344.7373 c423.252 366.2324 415.1885 384.4805 401.1289 394.8027 cfuu0.65 g42.1074 335.7109 m42.5908 334.626 43.04 333.4912 43.4609 332.3145 C386.8477 373.5518 L388.751 373.7949 390.8945 374.4883 392.9268 375.3076 C392.9268 377.167 L42.1074 335.7109 LfU39.3789 266.3887 m223.0049 357.0889 L67.3838 338.6982 L69.0742 334.9902 75.9229 315.1504 45.0645 287.9541 C43.4248 280.0869 40.9336 272.7129 37.791 266.2471 C39.3789 266.3887 Lf0.5 0 1 0.4 (C=50 M=0 Y=100 K=40) 0.1 0 Xk230.4063 372.3555 m78.2266 354.0801 L78.2266 342.8271 L201.168 357.5908 L230.4063 372.3555 LfUUUu645.4326 274.5898 m645.4326 179.6191 l672.8623 171.2412 679.3711 213.6055 v685.8809 255.9688 664.959 284.3662 645.4326 274.5898 cBb1 (Unnamed gradient 19) 663.0078 178.9463 90 97.5752 1 0 0 1 0 0 Bg-0.000004 97.5752 44.4482 0.000002 643.4326 178.9463 Xm-0.000369 8439.7129 44.4482 0.000002 643.4326 -8260.7676 Bc-0.000004 97.5752 44.4482 0.000002 643.4326 178.9463 Bm-0.000369 8439.7129 44.4482 0.000002 643.4326 276.5215 Bcf0 BB0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 Xk130.5527 255.5195 m156.2168 248.4023 l652.0527 264.4648 l679.9131 217.6445 l683.7871 272.4951 656.2402 273.1934 v628.6934 273.8916 397.1602 267.9561 y130.5527 255.5195 lfuu0 0 0 0.2 k146.7422 253.2041 m153.0146 243.002 156.4297 229.4619 155.5918 214.4834 c154.7471 199.4531 149.7754 185.6504 142.2695 175.0811 c652.0527 179.2695 l652.0527 264.4648 L146.7422 253.2041 lfU0 0.8 0 0 (C=0 M=80 Y=0 K=0) 0 0 Xk678.501 264.4648 m705.7549 205.457 710.9854 194.9824 v716.2158 184.5078 714.4717 150.291 698.084 141.5615 C692.8535 139.4668 687.623 144.7021 y660.4355 170.1406 l679.6563 185.7568 679.9717 230.3643 v680.1006 248.4023 678.501 264.4648 yf0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 Xk662.4668 171.1592 m650.0811 178.9473 L140.0625 171.7656 L128.6309 167.0254 L174.9297 154.4785 L689.4209 144.7021 L662.4668 171.1592 Lf0 0.8 0 0.3 (C=0 M=80 Y=0 K=30) 0 0 Xk666.1836 282.2217 m664.4072 283.916 661.7324 284.248 659.5967 283.0449 c657.084 281.6318 653.2412 280.0205 651.7891 279.9727 C130.7949 270.4004 L130.5527 255.5195 L652.1162 268.8047 L655.0391 268.9023 658.498 270.1582 661.1387 271.3389 C669.5498 261.5723 674.3086 246.7646 674.3086 230.0068 c674.3086 210.5098 667.8486 191.8154 657.9863 182.0889 C654.1748 183.7646 L653.4453 184.084 652.6572 184.2402 651.8672 184.2363 C128.874 178.2031 L128.6309 167.0254 L650.791 173.0498 L656.7607 170.4258 L658.6563 169.5918 660.8477 169.876 662.4668 171.1592 c676.4385 182.2305 685.4658 205.3291 685.4658 230.0068 c685.4658 251.4961 678.4385 270.5283 666.1836 282.2217 cfu0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0.1 0 Xk462.4854 276.4951 m251.6621 272.6201 L270.5957 259.0869 L436.8525 263.3213 L462.4854 276.4951 Lfu0.6 g146.7422 253.2041 m147.4473 252.0605 148.1064 250.8711 148.7363 249.6475 C652.0527 262.4648 L652.0527 264.4648 L146.7422 253.2041 LfU440.0059 259.7402 m257.1797 255.665 L340.3252 205.457 L440.0059 259.7402 LfUUUu458.999 162.8604 m458.999 65.0967 l473.7949 55.1045 485.0342 84.6504 v499.9111 123.7549 480.583 167.9805 458.999 162.8604 cBb1 (Unnamed gradient 21) 474.6387 63.4707 90 99.7959 1 0 0 1 0 0 Bg-0.000004 99.7959 44.9121 0.000002 456.999 63.4707 Xm-0.000361 8252.0049 44.9121 0.000002 456.999 -8188.5332 Bc-0.000004 99.7959 44.9121 0.000002 456.999 63.4707 Bm-0.000361 8252.0049 44.9121 0.000002 456.999 163.2666 Bcf0 BB0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 Xk53.8809 144.376 m73.2275 140.165 l460.5781 154.8301 l500.5576 151.6816 l469.6904 164.9561 l53.8809 144.376 lfuu0 0 0 0.3 k68.083 143.5088 m72.7227 133.1787 75.167 119.459 74.3633 104.2783 c73.5576 89.042 69.626 75.0674 63.8125 64.3984 c460.5781 64.3984 l460.5781 154.8301 L68.083 143.5088 lfU0 1 0.8 0 (C=0 M=100 Y=80 K=0) 0 0 Xk467.3398 53.8584 m780.4434 53.8584 791.418 53.8584 v802.3945 53.8584 812.8047 79.0615 812.8047 101.873 c812.8047 124.6865 800.7158 138.8252 791.8838 141.0674 c783.0508 143.3076 471.4775 171.7422 y498.0205 136.2119 490.2803 101.875 v482.5391 67.5391 467.3398 53.8584 yfu595.084 102.1074 m602.4463 108.0215 638.3252 131.2598 672.4863 153.0977 C622.2031 157.8516 566.2021 163.0371 526.1055 166.7305 C551.1445 150.7178 578.8467 128.6689 595.084 102.1074 CBb1 (Unnamed gradient 6) 615.0986 108.2266 107 81.9668 1 0 0 1 0 0 Bg-23.9648 78.3852 133.8813 40.9316 548.1582 87.7607 Xm-2451.2734 8017.7534 133.8813 40.9316 2999.4316 -7929.9922 Bc-23.9648 78.3852 133.8813 40.9316 548.1582 87.7607 Bm-2451.2734 8017.7534 133.8813 40.9316 524.1934 166.1455 Bcf0 BBU0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 Xk58.9316 61.6055 m51.8418 57.7422 l51.666 54.2998 l467.3398 54.2998 l458.999 61.6055 l58.9316 61.6055 lf0 1 0.8 0.3 (C=0 M=100 Y=80 K=30) 0.1 0 Xk474.7393 170.3672 m472.9932 171.9092 470.4736 172.2061 468.4199 171.1094 c465.9629 169.7998 461.3574 167.8252 459.3193 167.7471 C54.1436 155.5605 L53.8809 144.376 L459.6992 156.5811 L463.0244 156.707 467.0537 158.1816 469.9727 159.4619 C479.6191 149.3184 485.0859 133.7227 485.0859 116.0176 c485.0859 95.4639 477.6953 75.834 466.4482 65.8877 C461.6611 67.916 L460.9756 68.2061 460.2393 68.3574 459.4951 68.3584 C52.1055 68.915 L51.8418 57.7422 L458.3516 57.1865 L465.166 54.2998 L465.8643 54.0039 466.6035 53.8584 467.3398 53.8584 c468.5 53.8584 469.6523 54.2217 470.6211 54.9258 c486.1865 66.2598 496.2441 90.2393 496.2441 116.0176 c496.2441 138.4688 488.4053 158.2773 474.7393 170.3672 cfuu0.6 g68.083 143.5088 m68.793 141.9277 69.4453 140.2578 70.0488 138.5254 C459.6992 150.2441 L459.9844 150.2549 460.2822 150.2881 460.5781 150.3184 C460.5781 154.8301 L68.083 143.5088 LfU109.0029 122.7861 m102.2129 113.1123 94.6807 105.2695 78.1094 89.5381 C78.1094 77.3174 L269.4668 149.3164 L113.3818 144.8145 L113.3818 140.165 113.8496 129.6904 109.0029 122.7861 cf0 1 1 0.4 (C=0 M=100 Y=100 K=40) 0 0 Xk279.9805 162.3525 m122.0449 157.6025 L122.0449 146.4258 L243.8447 150.0889 L279.9805 162.3525 LfUUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF