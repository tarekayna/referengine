%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Admin) (Microsoft)
%%Title: (L_nature.eps)
%%CreationDate: 6/14/2010 3:56 PM
%%BoundingBox: 69 214 529 644
%%HiResBoundingBox: 69.1191 214.498 528.6846 643.5444
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBCustomColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 48 170.8896 548 670.8896
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 0.399902 -0.070374 595.5999 841.8496
%AI3_DocumentPreview: Header
%AI5_ArtSize: 500 500
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -220 854.8896 0.6667 730 609 18 0 0 66 115 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:16 -159.1104
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%AI7_Thumbnail: 128 120 8
%%BeginData: 12954 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD15FFCAFD76FFCAFD07FFCACAFD77FFCAFD06FFC3CAFD23FFCAFD
%2FFF84FD1CFFCAFD06FFCACAFD04FFCABDCAFD04FFCAFD1DFFCAC3CAFD0B
%FFCAFD1BFFA8AE84AFA8FFFF8A3C8BAFFD1AFFCBFD05FFC4CAFD04FFC3C4
%CAFD04FFCAFD1DFFCAC2C9CAFD07FFCFCFC9CECFFD1BFF848A5F8A84FFAF
%676067AFFD1AFFCAFD04FFCABDFFFFFFC3C4C3CAFD04FFC3FD1DFFC2C3C2
%C9CAFFFFFFCACAC8C9C8C8C8FD1CFFAF5F845F66608A60666060A8FD1AFF
%CAFFFFFFCAC4C4FFCBC4C3C4CAFFFFFFC3CAFD1CFFC3C9C3C9C2C9CAFFC9
%C9C8C9C8C9C8C9CFFD1BFFAE8A838A608A603C3C8B608BFD14FFCBA8FD04
%FFCACAFFFFFFC3C4A8CAC3C4BDCAFFFFC4C3C3FD05FFCACAFD14FFCAC3A0
%C3C2C3C2C2C2C8C2C9C2C8C2C9C8CFFD1CFF83845F845F6019193C603C8B
%FD13FFCBCACAFD04FFC4FFFFFFC4C3CAC4C4C3C4CAFFCAC4C3CAFD04FFCA
%CAFD15FFCAC3C9C3C9C2C2BBC2C2C9C8C9C8C9C8C9CFFD1BFFAEAE838A83
%8A603B1942606660FD14FFA2C4A2CACAFFC4CAFFFFC3C49BC3C3C4C3CACA
%C4C3C3CAFFFFFFC3CAFD04FFCAFD0DFFCAFFFFFFC3C3C3C9C3C2BBC1BBC2
%C2C9C2C9C2C9C8CFFD1BFFAE838483848360193B193C191A3C8B84FD12FF
%A2CAC4C4CACAC4FFFFCAC4C4BDFD04C4CAC3C4C3CACBCAC3CAFFFFFFCAC3
%FD0EFFCACAFFCAC3C3C9C3C3BBC1BBC1C2C9C2C9C8C9C2C9CAFD1BFFAE83
%83AE838A5F3B3B3B191A193C606160AFFD10FFC4A2C4A2C49BBDA1FFA2C4
%9BBD9BC4C3BDBDC4FD05C3CBFFFFCAC3BCFD0FFFC3C3CACAFD04C399BBBB
%BB98C2C2C9C2C9C2C8C2CFFD1BFFA857828384835F343B193B13193B6060
%603C8BFD0FFFCAC4C4CAA2C49BBEC4CBC4C4B7C4C4C4BDCAC4CAC3CACAFF
%FFFFC3BCBCFD10FFCAC3C4BDCAC3CAC2BCBBC2BBC1C2C9C2C9C8C9C8C9CF
%FD05FFCFFD15FF828282AE83833A5F3B3B3B3C19666067606160AFFD0FFF
%A2C4A2C49BC4A2BD9BC4C3BD9BC4BDBDC3C4BDC3CAFFC4C3B6BCBCFD11FF
%C4C4C3BDBCC4C3C2BBBCBBBBBBC2C3C9C2C9C2C8C2CFCACFC9CFC8CFFD14
%FFA7827C8283AE5E5E345F3B3B133B60606066606084FD10FFA2C4A2C4A2
%CAC4BD9BC4FD05BDC4BDBDBDC4BCBDBCBCBCFD12FFCBC3CABDBCBDCABCBC
%BBC2BBBBC2C9C3C2C1C2C1C1C2C9C8C8C8C9CFFD13FFCFA77B827CA78383
%5E5F3A5F3B3B3B8A60663C3C1A61FD09FFA8A9A2A8FD04A2959C9B9B9BC4
%9BBD9BBD95BD94BDBDBD94BDB6BDB6BCBDFD13FFCAC4C3C3B6BCC3BCBBBC
%99BCBBC39AC1BBBB98C1BBC8C2C9C2C8C8FD13FFCFA77C7B7B828383575E
%585F343B3B845F3C1919131A133CA8FD08FFCBCBA2C5A2C4A2C49B9C9BBE
%9BBE9BBEFD0ABDB6BDC4FD15FFC3CAC4C3BCC3BCBCBCC2BBC2BBC2BBC1BB
%C1BBC2C8C9C8C9C8CFFD14FFA7A67BA682A77C825E835E5F3B8A5F3B193C
%3B663C603C8BFD0AFFCBFD05A2C49B9B9BBE9BBD9BBD9BBD95BD9BBD94BD
%B6BDCAFD16FFCAC3C4BDFD05BCBBBCFD07BBC1C2C9C2C9C2C8CAFD13FFA8
%C99F9F7BA682827B82585E58835F5F5F666060606660603CAFFD0DFFCBCB
%A2CA9C9C9BBE9BBD9BBDBDBD9BBDBDBDB6C4FD18FFCBC4C3CABDBDBCBDFD
%04BCBBBCBBC2BBC1C2C9C2C9C2C9C9FD14FFCFA6A69FA6A6A67C827C825E
%835F83838A5F8A60666066606060FD0CFFA8A8FD06A2959B9B9B95BD9BBD
%94BD9BCBFD1AFFC4C4C3C4B6BCB6BCBCBC99BCBBBB99BBBBC9C2C9C2C8C2
%FD15FFA8A67B9F7BA67B827B825782585E585F345F5F8A608A84AF8484A8
%FD0AFFCBA3A2A3A2CBCBFF9BBE9BBE9BBE9BBD95C4CAFD1DFFC4C4C4C3BC
%BDBCBCBCC2BCBCBBC2C2C9C3C9C3C9C2FD17FFA6C89FA69FA67CA67C8282
%82585F5E83A8FD13FFFD04A2A8CBFF9B9B9B9C9B9B95BDA1CBFD20FFC4C4
%C3BDB6BDFD04BCBBC2C2C9C2C3C2C9C2CFFD17FFC99FA69F9F7BA67B827B
%8258825883AFFD13FFCBA2A2A2FFFFFFA29C9B9C95BE9CCACAFD23FFC4C4
%BDBDBCBDFD05BCC3C2C9C3C9C9FD19FFCFC89FA59FA67BA67B827CA783A8
%AEFD12FFA8A278A9A8FFFFFFA89C719C9BC4A8FD27FFCAC3B6BDBCBDBCBC
%9ABCBBC2A0CACFFD1BFFA09F9E9F7B9F7BA6A6A783A7A8FD12FFCBCBCBFD
%06FFCB71A2CBFD2BFFBDBDC3CAC3CAC3CAC3C9C3C9C3C9C9CFCACFFD16FF
%CFC9CACFC9C9A7CEA7A7A7FD1EFFA278A8FD2BFFC4BDCACBC3C4FD06C3C2
%C3C2C2C2C9CAFD16FFC9C9FD05FFA8FD21FFA978FD2CFFC4C3FFFFFFCACB
%CACAC3CAC3C9C3CACAFD19FFC9FD28FFA2A2FD2CFFBDFD09FFCAFD1DFFCA
%CAFD28FFCBA2FD2CFFC4FD27FFCFCAFD28FFA8A2FD2CFFC3FD27FFCACFFD
%29FFA2CBFD2BFFCAFD28FFCFFD2AFFA2FD2BFFA8FD27FFCAFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDCDFFCAFD53FFA8FD2AFFCAFD2DFFCFFFCAFD23FF
%AFAFFD1CFFCBCAFD0BFFC4C3CAFD1EFFC4C3FD09FFCAC9C2C9C2C9C2C9CA
%FD20FFAF60FD1CFFA2C4CBFD07FFCACAC3C4C3FD1FFFC3C4C3CAFFFFFD04
%CAC3C3C2C3C2C9C2C9C8FD19FFA8FD07FF6066AFFD08FFAFFD11FFA8C4A1
%C4CAFFFFFFCAC4A1C49BC49BC3CAFD1DFFA8C4A1C3A1C3C3C3A1C3C2C3C2
%C3C2C3C2C9C2CAFD19FFAE83FD05FF84603CAFFD07FF8584FD11FFCAA2CA
%C4CACACBC4C4C3C4C4C4C3C4C3CAFD1DFFCAC3C4C3C4BCBCC3CAC3C3C3C9
%C3C3C3C9C3C9CAFD19FF848A84FFFFFFAF8A606684FD05FFAF8B3CFD11FF
%CAA2C4A2C4A2BD9BC4A2C4A1C4C3C49BC4C3FD1DFFA1C4C3C49ABDB6BCBD
%FD05C3C2C3C2C3C2CFFD19FFAE838383FFFF8A5F8A608AFD04FF60603C60
%AFFD0FFFCBA2CBA2CAA2C49BBD9BCAC4C4C3C4C4C4C3C4CAFD1BFFCAC4C3
%C3BDBDBCBDBCBDBCFD07C3C2C9FD1AFF838A838484AF608A608A60FFFFFF
%3C3C606160FD0CFFA8A8A2CA9BA29BC4A2A295BD9BBDA1C4A1C4A1C4A1C4
%9BC4FD19FFCA9BC4A1BD94BD94BD94BC94BC9AC3C3C3C2C3C2C3C2FD17FF
%AEFFCFA88384838434845F605F66AF8B131A60603C85FD0DFFA2CBA29C9B
%A29BC49BBE9BBE9BFD07C4C3C4C3FD19FFC4C4C4BDB6BDBDBDBCBDBCBDBC
%BCC3CAC3C9C3C3C3C9C3CFFD11FFCFFD04FFCFAE83AE83AE5F5F5F8A608A
%6066191A3C66606784FD0CFFA9A2A2A2779C779C9B9B9B9C9B9B9BCAA2C4
%A1C49BC4A1C4CAFD17FFCAC4A1C494BD94BD94BD94BD9ABC94BDFD06C3C2
%C3CAFD11FFA8A7A8FFFFFF835E58838383343B5F843B3B1919193C60603C
%AFFD0DFFA2A9A2A29BA29BA29B9C9BBE9BC49BC4BDBD9BBDBDC4BDCBFD17
%FFCBC4C4FD04BD94BDBDBDBCBDBCBDBCC4FD06C3C2FD13FFA7A7A7AEAECF
%828258835F5F34605F3B193B19193B8B6060AFFD0DFFA9A2A2779C779C77
%9CFD069B95BD95BD94C3A1C3A2FD17FFA2C49BBD94BD94BD94BD94BD94BD
%94BC9BC3C3C3A1C3C2C3CAFD12FFA782A783A78282585E585F345F343B34
%3B133B193C606060FD0EFFA9A9A2A29CA29BA29BA29BC49BBE9BBEBDBD9B
%BDBDC4C3FD18FFCAC4C4B7BDB7BDB7BDBDBDBCBDBDBDBCC3C3C4C3C9C3C3
%C3FD13FFA8FD05A7828258835E5F5E5F3B5FFD043B3C8B60AFAFFD0EFFA2
%A277A2779C779C9B9B9B9C9B9B9BBD9BBD95C4A1C4FD18FFA1C49BBD94BD
%95BD94BD94BD94BD9ABD9BFD05C3C2CAFD13FFCFA6A7A7A782827C82585E
%585F345F3A3B353B19606066FD05608584AF84AFFD05FFA8A978A277A29C
%A29BA29B9C9BBE9BBE9BBE9BBD9BCACBFD18FFC4A2C4B7BD95BDB7BD95BD
%BDBDBCBDBDC3BCCAC3C3C3CAFD15FFFD05A77C82828258835E5F3A5F3B3B
%3B60608A608A6066606760603CAFFD04FFA97EA27EA2777877A2779C779C
%FD069B95BD9BC4A1CACAFD17FFA2C49BBD95B794BD94BD94BD94BD94BD94
%BDA1C3C3C3CAFD15FFA7A7A6A7A7A77C825882585E585F345F343B3B603B
%3C3B3C3B6060603CAFFFFFFFA9A97EA97EA278A278A278A29BA29BA29BC4
%9BBE9BBE9BC4C4CAC4C4C4FD15FFCBCBC4C4BDBDB7BDB7BDB7FD07BDBCC4
%C3C4CAFD17FFA7CEA7A782A782827C835E5F5E5F3B5FFD043B191A196660
%6760AFFD04FFA97EA97E7E777E787E77A2779C779C9B9C9B9C9B9B95C4A2
%C4A1C4A1C49BCBFD13FFCB9CC4A1BE95BD95BD95BD94BD94BD94BD94BDA1
%CACAFD17FFA8A77BA67B827B827C825882585E345F3A3B343B193B196660
%603CAFFD06FFA97E7E787E78A278A277A278A277A29B9C9BBE9BBE9BFD07
%C4C3C4CAFD11FFCAC4C4C49BBDB7BD95BDB7BD95BDBDBD94BDBDC4C3CAFD
%12FFCACFCACEA7C9A6A67BA67C827C82828258835E5F585FFD043B196660
%6660AFFD07FFA9847E7E547E777E777877A2779C779CFD069B95C4A2C4A1
%C4A1C4A1FD13FFA2C4A1C49BB795B794BD95BD94BD94BD94BDA1C3A8FD12
%FFCFA7C8A6A7A6A7A7A77B827B827B827C82585E585E345F343B125F6084
%84AFFD09FFA9A9847E787E7EA278A278A277A29BA29BC49BBE9BBE9BC4C4
%CAC4C4C4FD14FFCBA2C4A2C4BDBD95BDB7BDB7BDBDBDB7BDBDCACAFD15FF
%CAC9A6C9A7C9A7CEA6A67BA67C827C835E835E5F5E5F3B60848A60FD0CFF
%A8A97E7E537E787E77A2779C77A29B9C9B9C9B9B9BBD9BC4A1C4C4FD15FF
%CBC49CC4A1C495B795BD95BD94BD94B794CAFD18FFCAC9A0C9A6A7A7A7A6
%A67B827C825882585E585F5F835F8A5F605FAFFD0BFFA9A9A8A97EA278A2
%7EA29CA277A29B9C9B9C9BC4A1C4C4C4CAFD17FFCAC4C4C4A2BD9BBE9BBD
%B7BD9BBEBDCBFD1BFFCFA6C9A7A7A7CEA7A7A7A67C8258835E5F5E83838A
%838A608A60AFFD0AFFA97EA97EA87EA8A2A8FD04A2779C9B9C9BC4A2CAA8
%CBCAFD19FFA2C4A2C495C4A2C49BC49BC49BCBFD1EFFA8C9A6A7A6A7A7A7
%7BA77B825882585E345F5F845F845F605F8AAEFD08FFA8A984A97EA9A2FF
%A8FFA2A2A2CBA2CAA2CBA2CAA2FD1DFFCAC49BBEFD07C4CBFD20FFA7C9A7
%CEA7A77CA7A7827C8282835E835F5F5FAE84AFAEFD0BFFA97E857EA9A8FF
%CBA9CBA9A2A2A2A8A2A2A2CAA2CAFD1EFFCBC49BC4A2C49BC4C4FD21FFA6
%C9A6A7A6A7A7A6A7A7A7825782585E58AE84AEA8FD0EFFA9A9A9FD05FFA9
%FFA2FFCBA9A2CBA2CAA2CACAFD1FFFCBCBCAC4C4CACAFD21FFC9C8A6C9A6
%A7A6A7A7FFA7FFFFAE82A783A7AEFD18FFA8CBFFA8A8FFCBCBFD05A2CBFD
%20FFA8FFA2C4FD22FFA7C9A7CFA7CFA7CFA8CFA8A7A8FFFFFFA7A783AEFD
%19FFA9FFA2FD07FFA2CBFD21FFCBFFCBCAFD21FFCFFD09FFCFFFA7FD06FF
%AEA8FD1AFFA8A9FD08FFA8FD21FFCBCBA2FD2DFFA7CFFD07FFAEFD19FFA9
%A9FD2CFFCACBFD2DFFCFFD22FFA9A8FD2BFFA8CBFD2DFFCFA8FD22FFAFFD
%2BFFCBFD2FFFCFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD6EFFCFFD
%2FFF60AFFD21FFCBFD2DFFCAFD2EFF8B60FD21FFCBA2FD2CFFC9C9FD09FF
%CAFD23FF846060FD20FFCBC5FD2CFFC8C9FD08FFCFCFFD23FF8B6061AFFD
%1FFFCBA2CBFD2AFFCAC8C2CFFD06FFCFC9C9FD22FFAF60606061AFFD1EFF
%A2CBC4FD2AFFC9C2C9C2FD05FFCFC9C8CEFD22FFFD0560AFFD08FFA9FD14
%FFA2C4A2C4A2FD08FFCBCAFD1EFFC9C2C9C2C8C9FFFFCFFD05C8FD21FF84
%FD0660FD07FF848BFD13FFCBCBA2CBC4C5FD08FFC4FD1EFFCAC2C9C3C9C2
%C9C9C9C2C9C8C9C8CEFD20FFAE60608B6060606785FD05FFAF6185FD12FF
%A8C5A2C4A2C5A2CBFD06FFCAC4CAFD1CFFCAC2C3C2C9C2C2BAC2C2C8C2C9
%C8C8C8FD1FFF84FD086084FD04FFAF613CAFFD11FFCBCBA2CBA2CBA2CBC4
%FD06FFCBC4FD1CFFCFC2C9C3C9C1C1BBC1C1C9C8C9C8C9C8C9FD1EFF8460
%608A60606066606060FFFFFF84616061A9FD10FFA8A8A2A2A2CBA2A2A2C4
%CAFD04FFCB9CC4CBFD1BFFC3C3A0C3BBBB99C1BBC1C2C9C2C8C2C8C8FD1D
%FF84605F605FFD076084AF60603C6060FD11FFA9A2CBA2CBA2CBA2CBA2CB
%FFFFFFCBC4C5C4FD1BFFCAC3C3C9C2BBBBC2BBC1BBC8C9C9C8C9C8C9FD1C
%FFAF8A608A608A6066608A60603C3C6060608B608BFD10FFA97EA9A2A8A2
%CBA2A2A2C5A8FFA8C5A2C4A2CBFD1AFFCAC3C3C3C2FD04BBC1BBC1C1C9C2
%C9C2C8C9FD1CFF8A5F605F605FFD0560131913FD056084FD10FF7EA9A2A9
%A2A9A2CBA2CBA2CBCAC5A2CBC4C5C4FD1BFFC3C9C3C2BBC2BBC1BBC1BBC1
%C2C9C8C9C2CFFD1CFF84605F8A6060608A603C131A133C6066606060AFFD
%0FFFA8A87EA87EA8A2A8A2CBA2A29BC4A2C4A2C4A2CBFD1AFFCAC3C3C3BB
%BB99BBBBBB99C1BBC2C2C9C2C8C9FD1CFF8A5F605F605F605F3B13191319
%13FD0560A8FD10FF7EA97EA9A8A9A2CBA2A29CA2A2CBA2CBC4C5CBFD1BFF
%C3CAC3BCBBC2BBC2BBC2BBC1C2C9C8C9C2FD1DFFAE605F8A608A603C133B
%133C133C608B606084FD10FFA8847EA87EA9A2A878A2789C9CC4A2C4A2C5
%A2FD1CFFC3C3C3BCBCBBBCBBBBBBC1BBC2C2C9C2C9CFFD1DFF5F605F845F
%3B123B1319131913FD0460FD12FF7EA984A97EA97EA278A29CA2A2CBA2CB
%A2CBFD1CFFCAC3C3C2BCBCBBC2BBC1BBC1C2C9C2C9C9FD1EFF8A5F845F8A
%3B3B133B193B133C606060AFFD07FFA8FD0AFFA97EA87EA87E7E777E77A2
%78A2A2C5A2C4A8FD16FFCACAFD05FFC3C3BCBCBBBC99BCBBBB99C2C2C9C2
%CFFD1EFFA8845F605F3B1219123B131935606060A8FD08FF85FD0AFFA984
%A9FD047E78A278A2A2CBA2CBA8FD17FFCACBFD06FFC3C3BCBCBCC2BBC2BB
%C2C2C9C2C9FD1CFFAEAEAEFFAE845F66193B133B193B13666060AFFD09FF
%8560AFA8FFAFFFA8FFFFFFAFA87E84537E777E77A278A8A2CBA2FD15FFCB
%FFFFCABDCACACBCAFFFFFFC3BDBCBCBBBCBBBBBBC3C3C3C9FD19FFAE835F
%835F8383FF84845F3B123B123B133B5F6084FD0AFFA96160856085848484
%85A8FFA9A97E7E597E7E7E78A2A2CBA2CBFD16FFCAFFFFC4C3FD04C4CBFF
%FFC3BCBCBCBBC2BBBCC2C9C3FD19FFAE898389838A838383AE5F843B3B19
%3B133B3B6084FD0CFF5A605A605A845A845A845AA9A87E535A537E777E7E
%A9A2A9CBFD16FFCAA1CABDBD9BC3BDBDBDC4CACAFD04BC99BCBBC3A0CAFD
%19FFAE828383835F835F5E343B3B5F123B1219126084FD0DFFAF60856085
%60856085848484AF845A59FD047EA9A2A9FD18FFCBC4C4BDB7FD06BDC3CA
%CABCBCBCC2BBC2C3C9FD1AFF83AD8389838A835E345F3AFD053B136084FD
%0EFFA9615A605A855A845A845A848484355A537E537E7EA9A9FD19FFA2C4
%BDBD94BDBDBDB6BDB6C3C3BCBCBCBBBCC2C3CAFD19FFA88382FD04835E33
%3A343A343A123B123BA8FD10FF8561608560856060355A35847E5A595A59
%7E7EA9A8FD1BFFC3C4FD09BDC4BCBDBCBCBCC3CAFD17FFCFFFA7AD83A783
%AD8383335E3A5E345F3A3A128AFD13FF84615A603636133635363560355A
%595A59A8A8FD1CFFCA9BC49BBD94BDB6BDB6BDBCBCB6BCB6C2C3FD16FFCF
%A0A782A782A783838283575D335E333A113A5EAEFD13FFAFFF8561FD0736
%5A355A355A5AAFFD1FFFCBC4C4FD08BDBCBDBCBDC3FD17FFA7CFCFFD05FF
%CFCF8382FD055EAEAEFD16FF846136360D36133613363536355A7EAFFD21
%FFCBC3C49BBDB6BDB6BDB6BDB6BDCAFD1FFFA7A782A783AD83AEAEFD1AFF
%A9AF6061FD0436355A5A84A8FD25FFCACAC3C3BDBDB6BDBDC4CAFD1FFFA7
%A7A7CFAEFD22FFA9AF84AF84A9A8FD2BFFA8FD04CAFD22FFCFA8FD1AFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Trail class) (FiT4 Live Trail) (FiT4E_21_Live Trail.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Tiling class) (FiT4 Live Tiling) (FiT4E_22_Live Tiling.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 DropShadow class) (FiT4 Live Shadow) (FiT4E_23_Live Shadow.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Reflections class) (FiT4 Live Reflections) (FiT4E_24_Live Reflections.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Neon class) (FiT4 Live Neon) (FiT4E_25_Live Neon.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Generation class) (FiT4 Live  Generation) (FiT4E_26_Live Generation.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Galaxy class) (FiT4 Live Galaxy) (FiT4E_27_Live Galaxy.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Frame class) (FiT4 Live Frame) (FiT4E_28_Live Frame.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Explosion class) (FiT4 Live Explosion) (FiT4E_29_Live Explosion.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Emboss class) (FiT4 Live Emboss) (FiT4E_30_Live Emboss.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Cutout class) (FiT4 Live Cutout) (FiT4E_31_Live Cutout.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Circle class) (FiT4 Live Circle) (FiT4E_32_Live Circle.aip)
%AI8_PluginGroupInfo
(NSD-FiT4 Border class) (FiT4 Live Border) (FiT4E_33_Live Border.aip)
%AI8_PluginGroupInfo
(UnitCell class) (Artlandia SymmetryWorks Plug-in) (Artlandia SymmetryWorks.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
14 Bn
%AI5_BeginGradient: (New Gradient Swatch 1)
(New Gradient Swatch 1) 0 7 Bd
[
0.019608
<
62626262626363636363636363636464646464646464646565656565
>
<
3A3C3D3E3F40424344454748494A4C4E4F50515354555657585A5B5C
>
0
<
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9D9D9D9D9D9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9A9A9A9A9A
>
<
9E9D9C9B9A9998979695949392918F8E8D8C8B8A8988878685848382
>
4 %_Br
<
02020202020202020202020303030404040404040404050505050505
>
<
63636363636363636363636362626363636363636363636363636262
>
<
18191B1C1D1E20212223252627282A2B2D2E2F30323334353738393A
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFE
>
<
9E9E9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9D
>
<
BAB9B8B7B6B5B4B3B2B1B0AFAEADABAAA9A8A7A6A5A4A3A2A1A09F9E
>
4 %_Br
<
070605040303020202
>
<
616262626363636363
>
<
141515151516171718
>
0
<
F6F7F8F9FBFCFDFEFF
>
0.619608
<
BFBEBEBDBDBCBBBBBA
>
4 %_Br
<
131211100F0E0D0C0C0B0A09090807
>
<
59595A5A5B5C5C5C5D5E5F5F606161
>
<
0C0C0D0D0E0E0F1011111212131314
>
<
010101010101010101010101010100
>
<
E9EAEBECEDEEEFF0F0F1F2F3F4F5F6
>
<
A3A3A2A2A2A1A1A1A0A09F9F9F9E9E
>
<
CECDCCCBCAC9C8C7C5C4C3C2C1C0BF
>
4 %_Br
<
2C2B2A2928272625242322201F1E1D1C1B1A19181716151413
>
<
55565656555556565656575756575757575858585758585859
>
<
00010202030404040505050607070808080909090B0B0B0C0C
>
<
00000000000000000101010101010101010101010101010101
>
<
D0D1D2D3D4D5D6D7D8D9DADBDDDEDFE0E1E2E3E4E5E6E7E8E9
>
<
A0A0A0A0A1A1A1A1A1A1A1A1A2A2A2A2A2A2A2A2A3A3A3A3A3
>
<
D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECE
>
4 %_Br
<
3E3D3C3C3A393838373635343433323131302F2E2E2D2C
>
<
6A696867666665646362615F5E5D5C5C5B5A5958575655
>
<
0302020202020202020101010100000000000000000000
>
0
<
BFC0C1C1C2C3C4C4C5C6C7C8C8C9CACBCBCCCDCECECFD0
>
<
898A8B8C8D8E8F9091929395969798999A9B9C9D9E9FA0
>
<
CBCCCCCDCDCECECFCFD0D0D1D1D2D2D3D3D4D4D5D5D6D6
>
4 %_Br
[
0.019608 0.396078 0.360784 0 1 0.603922 0.509804 2 50 100 %_BS
%_0.019608 0.396078 0.360784 0 1 0.603922 0.509804 2 50 100 Bs
0.019608 0.384314 0.227451 0 0.996078 0.615686 0.619608 2 50 83.1461 %_BS
%_0.019608 0.384314 0.227451 0 0.996078 0.615686 0.619608 2 50 83.1461 Bs
0.007843 0.388235 0.094118 0 1 0.619608 0.729412 2 50 66.2921 %_BS
%_0.007843 0.388235 0.094118 0 1 0.619608 0.729412 2 50 66.2921 Bs
0.027451 0.380392 0.078431 0 0.964706 0.619608 0.74902 2 50 49.4382 %_BS
%_0.027451 0.380392 0.078431 0 0.964706 0.619608 0.74902 2 50 49.4382 Bs
0.07451 0.34902 0.047059 0.003922 0.913725 0.639216 0.807843 2 50 34.8315 %_BS
%_0.07451 0.34902 0.047059 0.003922 0.913725 0.639216 0.807843 2 50 34.8315 Bs
0.172549 0.333333 0 0 0.815686 0.627451 0.839216 2 50 17.9775 %_BS
%_0.172549 0.333333 0 0 0.815686 0.627451 0.839216 2 50 17.9775 Bs
0.243137 0.415686 0.011765 0 0.74902 0.537255 0.796078 2 50 0 %_BS
%_0.243137 0.415686 0.011765 0 0.74902 0.537255 0.796078 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 12)
(New Gradient Swatch 12) 0 4 Bd
[
<
0B0B0B0A0A0A0A0909090909090A09090909090909090909090909090808080808080808070707
>
<
5E5F5F6061626264656666676869696A6B6C6C6D6E6E6F7071717273747475767878797A7B7B7C
>
<
0F101111111212131314141515161617171818191A1C1C1D1E1F2020212223242526272728292A
>
0.003922
<
F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F6F7F7F7F7F8F8F8F8F9F9F9F9FAFAFA
>
<
A09F9F9E9D9C9C9B9A99999897969695949393929191908F8E8E8D8C8B8B8A8988888786858584
>
<
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
>
4 %_Br
<
37363534333231302F2D2C2B2A2928272625242322201F1E1D1C1B1A191817161514131211100F0E
0D0C0B
>
<
3A3B3C3C3E3E4040414243434545474748484A4A4B4C4D4E4F4F5151525354545656575859595B5B
5C5D5E
>
<
040505060506060706070708080808090909090A0A0B0B0B0C0C0C0C0D0D0D0D0D0D0E0E0E0E0F0F
0F0F0F
>
0.003922
<
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
EFF0F1
>
<
B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2
A1A1A0
>
<
DDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9
C8C8C7
>
4 %_Br
<
9C9A99989795949392908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6D6C6B6A6867666564636261605E5D5C5B5A595857565554535251504F4E4D4B4A49484746
4544434241403F3E3D3C3B393837
>
<
090909090A0A0A0A0A0B0B0B0B0C0C0E0E0E0F0F101112121213131515161616181819191A1A1C1C
1C1D1D1E1F20202121222324242425252727282828292A2B2B2B2C2D2E2E2E2F2F31313132323234
34343535353737373838383A3A3A
>
0.015686
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000001010101
>
<
68696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F
9091929394959698999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8
B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
<
C5C5C5C4C4C4C4C4C4C3C3C3C3C3C3C2C2C2C2C2C2C1C1C1C1C1C1C0C0C0C0C0BFBFBFBFBFBFBEBE
BEBEBEBEBDBDBDBDBDBDBCBCBCBCBCBCBBBBBBBBBBBBBABABABABAB9B9B9B9B9B9B8B8B8B8B8B8B7
B7B7B7B7B7B6B6B6B6B6B6B5B5B5
>
<
E9E9E9E9E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E4E4E4E4E4
E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0DFDFDFDFDFDF
DFDFDEDEDEDEDEDEDEDEDDDDDDDD
>
4 %_Br
[
0.027451 0.486275 0.164706 0.003922 0.980392 0.517647 0.627451 2 50 100 %_BS
%_0.027451 0.486275 0.164706 0.003922 0.980392 0.517647 0.627451 2 50 100 Bs
0.043137 0.368627 0.058824 0.003922 0.945098 0.627451 0.780392 2 50 66.2921 %_BS
%_0.043137 0.368627 0.058824 0.003922 0.945098 0.627451 0.780392 2 50 66.2921 Bs
0.215686 0.227451 0.015686 0.003922 0.776471 0.709804 0.866667 2 50 33.1461 %_BS
%_0.215686 0.227451 0.015686 0.003922 0.776471 0.709804 0.866667 2 50 33.1461 Bs
0.611765 0.035294 0.015686 0 0.407843 0.772549 0.913725 2 50 0 %_BS
%_0.611765 0.035294 0.015686 0 0.407843 0.772549 0.913725 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 13)
(New Gradient Swatch 13) 0 5 Bd
[
<
0A0B0B0A0B0B0B0A0A0A0A0A0909090908080707070605050404040404
>
<
65666768696A6B6C6D6E6F70727374767778797A7B7D7E7F8081828384
>
<
030303030404040405050505060606060606060707070808080909090A
>
0
<
F4F4F4F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F9F9F9F9F9FAFAFA
>
<
9A999897969594939291908F8E8D8C8A898887868584838281807F7E7D
>
<
DAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
>
4 %_Br
<
232221201F1E1D1C1B1A18171614131211100F0D0C0C0B0B0B0B0A
>
<
454748494B4B4D4E4F51525355555758595B5C5D5F606061626465
>
<
040303030303030303030303030303030303030303030303030303
>
0
<
D9DADBDCDDDEDFE0E1E2E3E4E5E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
<
B1B0AFAEADADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9E9D9C9B9A
>
<
E0E0E0DFDFDFDFDEDEDEDEDDDDDDDDDDDCDCDCDCDBDBDBDBDADADA
>
4 %_Br
<
71706F6E6D6C6B6A6867666564636261605F5E5D5C5B5A5958565554535251504F4E4D4C4B494847
464544434241403F3E3D3B3A393837363534333231302F2E2D2C2B29282726252423
>
<
131315151616181819191B1B1B1C1D1E1E1F20212122232424262626272929292A2B2C2C2C2E2F2F
2F31313232343434353637373839393A3B3B3C3C3E3E3E3F40404141434343444545
>
<
121211101011100F0F0F0F0F0E0E0D0D0C0D0C0C0C0B0B0B0B0B0A0A0A0A09090909090808080807
07070707070607070606060606050505050505050505040404040404040404040304
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010100000000000000
>
<
8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B5B6B7
B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0C0BFBFBFBFBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABA
BAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1
>
<
D0D0D0D1D1D1D1D2D2D2D2D2D3D3D3D3D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D7D7D7D7D8D8D8D8D9
D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDEDEDEDEDEDFDFDFDFE0E0E0
>
4 %_Br
<
9C9B9A9998979594939291908F8E8D8C8B8A88878584838281807F7E7D7C7B7A7978777675747372
71
>
<
0E0F0F0E0F0F0F0F0F0F0F0F100F0F10101010101111121111111212111112121212121213131212
13
>
<
040505050505050505050506060606060606060606060606050606070809090A0C0C0D0E0F0F1111
12
>
<
00000000000000000000000000000000000000000000000000000000000000010101010101010101
01
>
<
666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E
8F
>
<
BCBCBCBDBDBDBDBDBEBEBEBEBEBFBFBFBFBFC0C0C0C0C0C1C1C1C1C1C2C2C2C2C2C3C3C3C3C3C4C4
C4
>
<
E6E5E5E4E4E3E3E2E2E1E1E0DFDFDEDEDDDDDCDCDBDADAD9D9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D1
D0
>
4 %_Br
[
0.015686 0.517647 0.039216 0 0.980392 0.490196 0.74902 2 50 100 %_BS
%_0.015686 0.517647 0.039216 0 0.980392 0.490196 0.74902 2 50 100 Bs
0.039216 0.396078 0.011765 0 0.956863 0.603922 0.854902 2 50 76.9663 %_BS
%_0.039216 0.396078 0.011765 0 0.956863 0.603922 0.854902 2 50 76.9663 Bs
0.137255 0.270588 0.015686 0 0.85098 0.694118 0.878431 2 50 51.6854 %_BS
%_0.137255 0.270588 0.015686 0 0.85098 0.694118 0.878431 2 50 51.6854 Bs
0.443137 0.07451 0.070588 0.003922 0.560784 0.768627 0.815686 2 50 25.2809 %_BS
%_0.443137 0.07451 0.070588 0.003922 0.560784 0.768627 0.815686 2 50 25.2809 Bs
0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 0 %_BS
%_0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 14)
(New Gradient Swatch 14) 0 5 Bd
[
<
070707070707070707070707070707070707070606060606060505050606060606
>
<
3B3A393837363534333231302F2E2D2C2A292827262524232221201F1E1D1C1B1A
>
<
777776777676757675757575757474747475747473747373727373727372727172
>
<
010101010101010000000000000000000000000000000000000000000000000000
>
1
<
C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3
>
<
787879797A7A7B7B7C7C7C7D7D7E7E7F7F7F808081818282838383848485858686
>
4 %_Br
0.027451
<
5554535251504F4E4D4C4B4A48474645444342413F3E3D3C3B
>
<
5658595A5B5D5E606262646567696A6B6C6E6F717272747577
>
<
00000000000000000000000000000000000101010101010101
>
<
FDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
A9AAABACADAEAFB0B1B2B3B4B6B7B8B9BABBBCBDBEBFC0C1C2
>
<
8C8B8A8A8988878685858483828180807F7E7D7C7B7B7A7978
>
4 %_Br
<
02020202020202020303030304040405050505050505050606060606060606060606070707070707
070707070707
>
<
63636362626262616160605F5F5F5F5E5E5E5E5C5C5C5C5B5B5B5B5A5A5A5A595959595857575756
565656555555
>
<
18191B1D1E1F202223242627282A2B2D2E2F3032333536393A3B3C3E3F414244454647494A4B4D4E
4F5152535556
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFD
>
<
9E9E9E9F9F9F9FA0A0A0A0A1A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A8
A8A8A8A9A9A9
>
<
BAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A9998979695949392
91908F8E8D8C
>
4 %_Br
<
0908070605040403030202
>
<
6565646564646464646363
>
<
1313141415141515161718
>
0
<
F4F5F6F7F8FAFBFCFDFEFF
>
<
9A9A9B9B9C9C9C9D9D9E9E
>
<
BFBFBEBEBDBDBCBCBBBBBA
>
4 %_Br
[
0.023529 0.101961 0.447059 0 1 0.890196 0.52549 2 50 100 %_BS
%_0.023529 0.101961 0.447059 0 1 0.890196 0.52549 2 50 100 Bs
0.027451 0.231373 0.466667 0.003922 1 0.760784 0.470588 2 50 76.4045 %_BS
%_0.027451 0.231373 0.466667 0.003922 1 0.760784 0.470588 2 50 76.4045 Bs
0.027451 0.333333 0.337255 0 0.992157 0.662745 0.54902 2 50 51.1236 %_BS
%_0.027451 0.333333 0.337255 0 0.992157 0.662745 0.54902 2 50 51.1236 Bs
0.007843 0.388235 0.094118 0 1 0.619608 0.729412 2 50 24.1573 %_BS
%_0.007843 0.388235 0.094118 0 1 0.619608 0.729412 2 50 24.1573 Bs
0.035294 0.396078 0.07451 0 0.956863 0.603922 0.74902 2 50 0 %_BS
%_0.035294 0.396078 0.07451 0 0.956863 0.603922 0.74902 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 15)
(New Gradient Swatch 15) 0 6 Bd
[
<
070707070707070707070707070707070707070606060606060505050606060606
>
<
3B3A393837363534333231302F2E2D2C2A292827262524232221201F1E1D1C1B1A
>
<
777776777676757675757575757474747475747473747373727373727372727172
>
<
010101010101010000000000000000000000000000000000000000000000000000
>
1
<
C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3
>
<
787879797A7A7B7B7C7C7C7D7D7E7E7F7F7F808081818282838383848485858686
>
4 %_Br
<
05060606060606060606060606060606060605050505050404040505050606060607070707
>
<
6261605F5E5D5C5B5A5958575655545352514E4E4D4C4B4A49474645444342403F3E3D3C3B
>
<
5153535555575759595B5C5D5E5F6061636365666768696A6B6C6D6E707071727374757577
>
0.003922
1
<
9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2
>
<
8C8B8B8A8A8989888887868685858484838382818180807F7F7E7E7D7C7C7B7B7A7A797978
>
4 %_Br
<
070808070707070807070707070707070707070707070606060606060606060606060606050505
>
<
616161616161616161616161616161616161616162626262626262626262626262626262626262
>
<
21222324252728292A2C2D2E2F313233343637383A3C3D3E3F41424344464748494B4C4D4E5051
>
0.003922
<
F7F7F7F8F8F8F8F8F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFCFDFDFDFDFEFEFEFEFEFFFFFF
>
<
9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D
>
<
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09E9D9C9B9A999897969594939291908F8E8D8C
>
4 %_Br
<
0A0A0909090807070606070707
>
<
6D6C6B6A696867666564636261
>
<
10111213141516181A1B1D1F21
>
<
00000000000000010001010101
>
<
F6F6F6F6F6F6F7F7F7F7F7F7F7
>
<
92939495969798999A9B9C9D9E
>
<
C0BFBEBDBCBBBAB8B7B6B5B4B3
>
4 %_Br
<
181716151414131211100F0E0E0D0C0C0B0B0A
>
<
696A6A6A6A6A6B6B6B6B6C6C6C6C6C6C6D6D6D
>
<
07080809090A0A0B0B0C0D0D0E0E0E0E0F0F10
>
0
<
E3E4E5E6E7E8E9EAEBEDEEEFF0F1F2F3F4F5F6
>
0.572549
<
CAC9C9C8C8C7C7C6C6C5C4C4C3C3C2C2C1C1C0
>
4 %_Br
[
0.023529 0.101961 0.447059 0 1 0.890196 0.52549 2 50 100 %_BS
%_0.023529 0.101961 0.447059 0 1 0.890196 0.52549 2 50 100 Bs
0.027451 0.231373 0.466667 0.003922 1 0.760784 0.470588 2 50 81.4607 %_BS
%_0.027451 0.231373 0.466667 0.003922 1 0.760784 0.470588 2 50 81.4607 Bs
0.019608 0.384314 0.317647 0.003922 1 0.615686 0.54902 2 50 62.9213 %_BS
%_0.019608 0.384314 0.317647 0.003922 1 0.615686 0.54902 2 50 62.9213 Bs
0.027451 0.380392 0.129412 0.003922 0.968627 0.619608 0.701961 2 50 43.8202 %_BS
%_0.027451 0.380392 0.129412 0.003922 0.968627 0.619608 0.701961 2 50 43.8202 Bs
0.039216 0.427451 0.062745 0 0.964706 0.572549 0.752941 2 50 22.4719 %_BS
%_0.039216 0.427451 0.062745 0 0.964706 0.572549 0.752941 2 50 22.4719 Bs
0.094118 0.411765 0.027451 0 0.890196 0.572549 0.792157 2 50 0 %_BS
%_0.094118 0.411765 0.027451 0 0.890196 0.572549 0.792157 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 18)
(New Gradient Swatch 18) 0 5 Bd
[
<
9D9D9D9D9D9C9C9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9C9D9D9D9D9E9E9E9E9E9D9D9D9C
>
<
000000000000000000000001010202020303040505060607080809090A0B0B0C0C0D0E0E
>
<
262423211F1E1C1A1917151312100E0E0C0A090706060606060606060606050505050504
>
0
0.4
<
E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
>
<
CECFCFD0D1D1D2D3D3D4D5D6D6D7D8D8D9DADADBDCDCDDDEDEDFE0E1E1E2E3E3E4E5E5E6
>
4 %_Br
<
4142434445464748494B4C4D4E4F5051525354555657595A5B5C5D5E5F606162636465666768696A
6B6C6D6E707172737475767778797A7B7C7D7E7F808182838384858788898A8B8C8D8F9091929394
969798999A9C9D
>
<
1010100F0E0E0D0D0D0D0C0C0B0B0B0B0B0A0A0A0909090908080808070707070606060605050505
05040404030303030303030202020201010101010100000000000000000000000000000000000000
00000000000000
>
<
5150504F504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444543434242414140413F403E
3E3D3D3D3C3C3A3A393938393838363635353435343432323131303130302E2E2D2D2C2D2B2B2A2A
29292828272726
>
<
01010101010101010101010101010101010101010101010101010101010101000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000
>
<
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
95949392908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D
6C6B6A69686766
>
<
D5D5D5D5D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9DADADADA
DADADADBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDFDFDFDFDF
DFDFDFE0E0E0E0
>
<
A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6
B6B7B7B8B9B9BABABBBBBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACA
CBCBCCCCCDCDCE
>
4 %_Br
<
111112121314141516161819191B1C1D1E1F2021222324252628292A2C2D2E2F3031323334353637
38393A3C3D3E3F4041
>
<
30302F2F2E2E2D2C2C2B2A2A292827272625252424222222201F1F1E1D1D1C1C1A1A1A1918181716
151515131312121110
>
<
706F6F6E6D6C6C6B6A6A6968676867656565646463626161605F5F5E5E5C5D5B5B5B5A5958585757
575655555453525251
>
<
02020202020202030303030303030303030303030303030303030303030303030303030302020202
020202020202020201
>
<
EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D4D3D2D1D0CFCECDCCCBCAC9C8C7C6
C5C4C3C2C1C0BFBEBD
>
<
C8C8C9C9C9C9CACACACACBCBCBCCCCCCCCCDCDCDCDCECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D3
D3D3D3D4D4D4D4D5D5
>
<
80818182838484858686878889898A8B8B8C8D8D8E8F90909192929394959596979798999A9A9B9C
9C9D9E9E9FA0A1A1A2
>
4 %_Br
<
050505050505050506070808090A0B0B0C0D0D0D0E0E0F0F0F101011
>
<
5352514F4E4D4C4B4A4847464443403F3E3C3B3A3938363534333230
>
<
6E6F6E6E6F6F6E6E6F6F6E6F6F6F6F6F70706F6F70706F7070707070
>
<
00000000000000000001010101010101010202020202020202020202
>
<
FFFEFEFDFCFCFBFBFAF9F9F8F7F7F6F6F5F4F4F3F2F2F1F1F0EFEFEE
>
<
ACADAEAFB0B1B2B3B4B5B6B7B8B9BBBCBDBEBFC0C1C2C3C4C5C6C7C8
>
<
79797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F8080
>
4 %_Br
[
0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 100 %_BS
%_0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 100 Bs
0.615686 0 0.14902 0 0.4 0.878431 0.807843 2 50 75.2809 %_BS
%_0.615686 0 0.14902 0 0.4 0.878431 0.807843 2 50 75.2809 Bs
0.254902 0.062745 0.317647 0.003922 0.741176 0.835294 0.635294 2 50 50 %_BS
%_0.254902 0.062745 0.317647 0.003922 0.741176 0.835294 0.635294 2 50 50 Bs
0.066667 0.188235 0.439216 0.007843 0.933333 0.784314 0.501961 2 50 24.1573 %_BS
%_0.066667 0.188235 0.439216 0.007843 0.933333 0.784314 0.501961 2 50 24.1573 Bs
0.019608 0.32549 0.431373 0 1 0.67451 0.47451 2 50 0 %_BS
%_0.019608 0.32549 0.431373 0 1 0.67451 0.47451 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 20)
(New Gradient Swatch 20) 0 7 Bd
[
<
04040404050505050505050505050505050505050505060505050505050505060606060606060606
060606060606
>
<
A5A5A5A5A6A6A6A6A5A5A5A5A6A6A6A6A6A6A6A7A7A7A7A7A7A7A7A8A8A8A8A8A8A8A9A9A9A9A9A9
A9A9AAAAAAAA
>
<
7576787A7B7C7E7F818284858688898B8C8E8F90929495989A9B9D9E9FA1A2A4A5A7A8AAABADAEB0
B2B3B5B6B8BA
>
0
<
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF
>
<
5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A595959595959595958585858585858575757575757
575756565656
>
<
5D5C5B5A595857565554535251504F4E4D4C4B4A4948474544434241403F3E3D3C3B3A3938373635
34333231302F
>
4 %_Br
0.015686
0.647059
<
2F3132343537383A3B3D3E404143444647494A4C4D4F5052545657595A5C5D5E606163646667696A
6C6D6F70727375
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFE
>
<
5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
5C5C5C5C5C5C5C
>
<
8C8B8A898887868584838281807F7E7D7C7B7A7978777675737271706F6E6D6C6B6A696867666564
636261605F5E5D
>
4 %_Br
<
0B0B0A0A0909080707060605050404
>
<
A2A2A2A2A2A3A3A3A4A4A4A4A4A5A5
>
<
242525272728282A2B2B2C2C2E2E2F
>
<
010101010101010101010000000000
>
<
F0F1F2F3F4F5F6F8F9FAFBFCFDFEFF
>
<
5E5E5E5E5E5E5E5E5D5D5D5D5D5D5D
>
<
94939392929191908F8F8E8E8D8D8C
>
4 %_Br
<
1D1C1B1A19191918171615141313121111100F0E0E0D0D0C0B
>
<
96979898989999999B9B9B9C9C9C9E9E9E9F9F9FA1A0A1A2A2
>
<
0A0B0C0D0F0F11121314151617191A1B1C1D1E1F2021222324
>
<
00010101010101010101010101010101010101010101010101
>
<
DBDCDDDEDFDFE0E1E2E3E4E5E6E6E7E8E9EAEBECEDEDEEEFF0
>
<
66666565656464646363636262626161616060605F5F5F5E5E
>
<
ADACABAAA9A8A7A6A5A4A3A2A19F9E9D9C9B9A999897969594
>
4 %_Br
<
4C4B4A4948474645444342403F3E3D3C3B3A39383734333231302F2E2D2C2A292827262524232221
201E1D
>
<
94959595959494949595959595949595959595969695959596969696969696969696969697979696
969696
>
<
04040505050505050505050505050505050505050505050505050505050504040404050505060808
080A0A
>
0
<
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8
D9DADB
>
<
61616161616262626262626262636363636363636364646464646464646465656565656565656666
666666
>
<
BABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE
AEADAD
>
4 %_Br
<
6B6A6969686665656463626261605F5E5D5C5B5B5A5958585756555554525151504F4E4E4D4C
>
<
BCBBBAB9B8B7B6B4B3B2B1B0AFAEADACABAAA9A7A6A5A4A3A2A1A09E9D9C9C9A999897969594
>
<
0100000000000000000000000000000000000000000101010202020303030303030404040404
>
0
<
94959696979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A8A9AAABABACADAEAEAFB0
>
<
3B3C3D3E3F404142434445464748494A4B4C4D4F505152535455565758595A5B5C5D5E5F6061
>
<
A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABA
>
4 %_Br
[
0.023529 0.666667 0.729412 0 1 0.337255 0.184314 2 50 100 %_BS
%_0.023529 0.666667 0.729412 0 1 0.337255 0.184314 2 50 100 Bs
0.015686 0.647059 0.458824 0 0.996078 0.360784 0.364706 2 50 83.1461 %_BS
%_0.015686 0.647059 0.458824 0 0.996078 0.360784 0.364706 2 50 83.1461 Bs
0.015686 0.647059 0.184314 0 1 0.364706 0.54902 2 50 66.2921 %_BS
%_0.015686 0.647059 0.184314 0 1 0.364706 0.54902 2 50 66.2921 Bs
0.043137 0.635294 0.141176 0.003922 0.941176 0.368627 0.580392 2 50 49.4382 %_BS
%_0.043137 0.635294 0.141176 0.003922 0.941176 0.368627 0.580392 2 50 49.4382 Bs
0.113725 0.588235 0.039216 0 0.858824 0.4 0.678431 2 50 34.8315 %_BS
%_0.113725 0.588235 0.039216 0 0.858824 0.4 0.678431 2 50 34.8315 Bs
0.298039 0.580392 0.015686 0 0.690196 0.380392 0.729412 2 50 17.9775 %_BS
%_0.298039 0.580392 0.015686 0 0.690196 0.380392 0.729412 2 50 17.9775 Bs
0.419608 0.737255 0.003922 0 0.580392 0.231373 0.658824 2 50 0 %_BS
%_0.419608 0.737255 0.003922 0 0.580392 0.231373 0.658824 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 21)
(New Gradient Swatch 21) 0 5 Bd
[
<
E1E1E2E2E3E4E5E7E7E8E8E8E8E7E7E7E6E6E5E5E4E4E4E3E3E3E3E3E4E4E5E6E8E8EAEAEAEAEAEA
E9E9E9E8E8E7E7E6E6E5E5E5E5E6E6E7E8E9EAEA
>
<
00000000000000000000000001010101010101020202020202020203030304040405050607090B0C
0E0F1012141517181A1C1D1F202223242627282A
>
<
4E4C4B48464543403F3D3B3A38353532302E2D2B28282524242220201E1C1B191717151312100E0D
0B09080603010000000000000000000000010101
>
0
0
<
CBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F
>
<
ADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C7C7
C8C9C9CACBCCCCCDCECECFD0D0D1D2D2D3D4D4D5
>
4 %_Br
<
6C6D6E6F7072737475767778797B7C7D7E7F8081828385868788898A8B8C8D8E8F90919293959697
98999A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECECFD0D1D1D2D3D4D4D5D5D6D6D7D8D8D9D9D9DADADBDBDBDC
DCDCDDDDDDDDDEDEDEDEDFDFDFDFDFDFDFE0E0E0E0E0E0E0E0E1
>
<
191919181816161515151414131212111110100F0F0E0E0D0D0D0D0D0C0B0B0B0B0A0A0A0A090909
08080808080707060606060605050504040404040403030303020202020201010101010101000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
<
9897979696969695959494939393939292919190908F908F8F8E8E8D8D8C8D8B8C8B8B8A8A898988
8887888687868685858484838383838282818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776
7675757474747473737272717170716F706E6E6D6D6C6D6B6B6A6A69696868676765656464636362
6260605F5F5E5E5C5C5B5B59595858575755555353525250504E
>
<
04040403030303030303020202020202020101010101010101010101010101010101010101010101
01010101010000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
<
91908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A
696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645444342
41403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
B9B9B9B9B9BABABABABABABABABBBBBBBBBBBBBBBBBCBCBCBCBCBCBCBCBDBDBDBDBDBDBDBDBEBEBE
BEBEBEBEBEBFBFBFBFBFBFBFBFC0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C3C3C3
C3C3C3C3C3C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C8C8C8
C8C8C8C8C8C9C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCB
>
<
64656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778
7879797A7A7B7B7C7C7D7D7E7E7F7F80808181828283838484858586868787888889898A8A8B8B8C
8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9D9D9E9E9F9FA0
A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAABABACACAD
>
4 %_Br
<
18191A1B1B1C1D1E1F1F202122232324252626272829292A2C2D2E2E303132333435363738393A3B
3C3E3F41424344454647494A4B4C4D4E4F51525354555758595A5B5C5D5F6061626364656768696A
6B6C
>
<
525250504F4F4D4D4D4C4B4A4A484847474545444442424140403F3F3D3D3C3C3B3A3A3838383736
3534343332323130302F2E2D2D2C2B2B2A2A29282826262625242323232121201F1F1E1E1C1C1C1B
1A19
>
<
CECDCDCCCBCACAC9C8C8C7C6C6C5C4C3C3C2C1C1C0BEBFBDBCBBBBBAB9B9B8B7B6B6B5B4B4B3B2B2
B1B0AFAFAEADADADACACABAAA9A9A8A7A7A6A6A4A5A4A3A3A2A1A2A19F9F9F9E9D9E9C9B9C9B9A99
9998
>
0.015686
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
BBB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493
9291
>
<
A3A3A4A4A4A4A5A5A5A5A6A6A6A7A7A7A7A8A8A8A8A9A9A9AAAAAAAAABABABABACACACADADADADAE
AEAEAEAFAFAFAFB0B0B0B1B1B1B1B2B2B2B2B3B3B3B4B4B4B4B5B5B5B5B6B6B6B7B7B7B7B8B8B8B8
B9B9
>
<
2B2C2C2D2E2F2F30313132333334353636373838393A3A3B3C3D3D3E3F3F40414242434444454646
474849494A4B4B4C4D4D4E4F5050515252535455555657575859595A5B5C5C5D5E5E5F6060616263
6364
>
4 %_Br
<
06070707070808080909090909090A0A0B0C0C0C0D0D0E0E0F0F0F10101112121213131414141515
161717181818
>
<
8988878685848382807F7E7D7C7B7A79777675747371706E6D6B6A6968676564636261605F5D5C5A
595756555452
>
<
D5D5D4D4D4D4D3D3D4D4D3D3D3D3D2D2D2D2D2D2D2D1D1D1D2D1D1D1D1D0D0D0CFCFD0D0CFCFCFCF
CECFCFCFCECE
>
<
00010101010101010101010101010101010101020202020202020202020202020202020202020203
030303040404
>
<
FFFEFEFDFDFCFBFBFAF9F9F8F8F7F6F6F5F4F4F3F3F2F1F1F0EFEFEEEEEDECECEBEAEAE9E9E8E7E7
E6E5E5E4E4E3
>
<
75767778797A7B7C7D7E7F808182838485868788898A8B8D8E8F909192939495969798999A9B9C9D
9E9FA0A1A2A3
>
<
1F1F2020202021212121222222222323232424242425252525262626262727272828282829292929
2A2A2A2A2B2B
>
4 %_Br
[
0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 100 %_BS
%_0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 100 Bs
0.882353 0 0.305882 0 0 0.796078 0.678431 2 50 75.2809 %_BS
%_0.882353 0 0.305882 0 0 0.796078 0.678431 2 50 75.2809 Bs
0.423529 0.098039 0.596078 0.015686 0.568627 0.72549 0.392157 2 50 50 %_BS
%_0.423529 0.098039 0.596078 0.015686 0.568627 0.72549 0.392157 2 50 50 Bs
0.094118 0.321569 0.807843 0.015686 0.890196 0.639216 0.168627 2 50 24.1573 %_BS
%_0.094118 0.321569 0.807843 0.015686 0.890196 0.639216 0.168627 2 50 24.1573 Bs
0.023529 0.537255 0.835294 0 1 0.458824 0.121569 2 50 0 %_BS
%_0.023529 0.537255 0.835294 0 1 0.458824 0.121569 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 22)
(New Gradient Swatch 22) 0 6 Bd
[
<
E7E7E6E7E6E6E6E6E6E6E6E6E6E6E6E6E6E6E7E7E7E8E8E8E9E9EAEAEAEA
>
<
0A0A0B0C0C0D0E0F10111213141517191A1B1C1D1E20212223252627282A
>
<
000000000000000000000000000000000000000000000000000000000101
>
0
<
040404040303030303030302020202020202020101010101010100000000
>
<
ADACABAAA9A8A7A6A5A4A3A2A1A09F9D9C9B9A999897969594939291908F
>
<
E6E5E5E4E4E3E2E2E1E1E0E0DFDEDEDDDDDCDBDBDADAD9D9D8D7D7D6D6D5
>
4 %_Br
<
E5E5E4E4E4E4E3E3E3E3E3E3E3E3E3E3E4E4E5E5E5E6E6E7E8EAEBEBECEDEDEDEDEDEDEDEDEDEDED
EDEDECEBEAEAE8E8E7E7
>
<
02020202020202020202020202020202020202020202020202020202010202020304040505050607
07070808080809090A0A
>
<
32302E2D2A29272625242221201E1D1C1B1A181716151413120F0E0D0C0C0B0A0807060605040302
01000000000000000000
>
0
0.015686
<
B4B4B4B4B3B3B3B3B3B3B3B2B2B2B2B2B2B2B1B1B1B1B1B1B1B0B0B0B0B0B0B0AFAFAFAFAFAFAFAE
AEAEAEAEAEAEADADADAD
>
<
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6
>
4 %_Br
<
DFE0E0E1E1E1E1E2E2E3E3E4E4E5E6E6E6E7E7E7E8E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E5E5E5E5
>
<
00000000000000000000000000000000000000000001010101010102020202020202020202020202
>
<
7B7977757372706F6D6B6968666562615F5D5B595553514F4E4C4948464442403E3D3B3937353332
>
0
<
1918181717161615151414131312111110100F0F0E0E0D0D0C0C0B0A0A0909080807070606050504
>
<
BBBBBBBABABABABABAB9B9B9B9B9B8B8B8B8B8B8B7B7B7B7B7B7B6B6B6B6B6B5B5B5B5B5B5B4B4B4
>
<
8C8D8E8F909192939495969798999A9B9C9D9E9FA1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
>
4 %_Br
<
98999A9B9C9D9E9FA0A1A2A3A4A5A6A7A9AAABACADAEAFB0B1B2B3B4B6B7B8B9BABCBDBEBFC0C2C4
C5C6C7C8C9CACBCCCDCECFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADADBDBDCDCDCDDDDDEDEDFDFDF
>
<
02020201010101010101010000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
CFCDCCCBCACBCAC9C7C6C5C4C3C2C1C2C1C0BFBEBDBCBBBAB8B9B8B7B6B5B3B2B1B0AFB0AFAEADAC
AAA9A8A7A7A6A5A4A3A2A19F9E9D9E9C9A99989695939290908F8D8C8A888784838181807E7C7B
>
0
<
6867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241
3F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19
>
<
C0C0C0C0C0C0C0C0BFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBE
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBB
>
<
464748494A4A4B4C4D4E4F50515253535455565758595A5B5C5C5D5E5F6061626364656566676869
6A6B6C6D6D6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878888898A8B8C
>
4 %_Br
<
18191A1B1B1C1D1E1F1F2021222323242526262728292A2B2C2D2E2F303132333435363738393A3B
3D3E3F404142434445464748494B4C4D4E4F50515254565758595B5C5D5E5F60626364656667696A
6B6C6D6E6F7072737475767778797A7B7D7E7F808182838485868788898A8B8C8D8E8F9192939495
969798
>
<
525251504F4F4E4D4D4C4C4A4A4949474746464444434342414040403E3E3D3D3B3B3A3A38383837
363535343432323231302F2F2E2D2C2C2C2A2A2929282726262524242323212121201F1E1E1D1C1C
1B1B1A191918181616161514131313111111100F0F0E0E0E0C0C0B0B0A0A09090807070605050504
030302
>
<
CECECECDCECECECDCDCDCDCDCCCCCDCDCCCCCCCCCCCBCBCBCCCBCBCBCCCCCBCBCBCCCACBCBCBCCCA
CBCBCBCACACBCBCBCACBCBCBCACACBCBCBCACACBCBCACBCBCBCBCACBCBCBCCCBCBCBCCCBCBCBCCCC
CBCBCBCCCBCBCBCCCCCBCBCCCCCBCBCCCCCDCCCCCDCDCCCCCDCDCECDCDCECECDCDCECECECECECECF
CECECF
>
<
0404040505050506060606070707080808080909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A090909090909090908080808070707070706060606050505050404
04040403030303020202020202020202020202010101010101010101010101010101010100000000
000000
>
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A4A3A2A1A09F9E9D9C9B9A99989796959493
9291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B
6A6968
>
<
A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAAAAABABABABACACACAC
ADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4B4B4B5B5B5B5B6B6
B6B6B6B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
C0C0C0
>
<
2B2B2B2C2C2C2C2D2D2D2D2D2E2E2E2E2F2F2F2F2F30303030313131313132323232333333333334
34343435353535353636363637373737373838383839393939393A3A3A3A3A3B3B3B3B3C3C3C3C3C
3D3D3D3D3E3E3E3E3E3F3F3F3F404040404041414141424242424243434343444444444445454545
464646
>
4 %_Br
[
0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 100 %_BS
%_0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 100 Bs
0.905882 0.039216 0 0 0.015686 0.678431 0.901961 2 50 80.3371 %_BS
%_0.905882 0.039216 0 0 0.015686 0.678431 0.901961 2 50 80.3371 Bs
0.898039 0.007843 0.196078 0 0.015686 0.705882 0.705882 2 50 61.7978 %_BS
%_0.898039 0.007843 0.196078 0 0.015686 0.705882 0.705882 2 50 61.7978 Bs
0.87451 0 0.482353 0 0.098039 0.733333 0.54902 2 50 39.8876 %_BS
%_0.87451 0 0.482353 0 0.098039 0.733333 0.54902 2 50 39.8876 Bs
0.596078 0.007843 0.811765 0 0.407843 0.752941 0.27451 2 50 20.7865 %_BS
%_0.596078 0.007843 0.811765 0 0.407843 0.752941 0.27451 2 50 20.7865 Bs
0.094118 0.321569 0.807843 0.015686 0.890196 0.639216 0.168627 2 50 0 %_BS
%_0.094118 0.321569 0.807843 0.015686 0.890196 0.639216 0.168627 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 24)
(New Gradient Swatch 24) 0 6 Bd
[
0.611765
<
040405050606070708090A0A0B0B0C0D0E0E
>
<
010202020203030303030303040404040404
>
0
<
686868686867676767676767676666666666
>
<
CECDCCCBCAC9C8C7C6C4C3C2C1C0BFBEBDBC
>
<
F0EFEFEEEEEDECECEBEBEAEAE9E8E8E7E7E6
>
4 %_Br
<
999999999999999999999999999999999A9A9A9B9B9B9B9B9B9B9C9C9C9C
>
<
020202020303030303030303030303030303030404040404040404040404
>
<
16151412100F0E0C0B0A0907060403030303020302020202020202020101
>
0
0.407843
<
D2D2D2D2D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCECECECE
>
<
D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
4 %_Br
<
8B8C8C8C8C8E8E8F90909191939394949596969797989899
>
<
000000000000000000000001010101010101010101020202
>
<
393837353432312F2E2C2B2926252422201F1E1C1B191816
>
0
<
757474737372727170706F6F6E6E6D6D6C6B6B6A6A696968
>
<
D6D6D6D5D5D5D5D5D5D4D4D4D4D4D4D3D3D3D3D3D3D2D2D2
>
<
BABBBCBDBEBFC0C1C2C3C4C5C7C8C9CACBCCCDCECFD0D1D2
>
4 %_Br
<
5C5D5E5F60616263646566676868696A6B6C6D6F7071727375767778797A7B7C7D7E7F8081828384
85868788898A8B
>
<
06060606050505050505050404040404030303030302020202020202010101010101000000000000
00000000000000
>
<
6B6A696867666665636261605F5E5D5C5A5959585756555352514F4E4D4D4C4B4948474645434240
3F3F3E3D3C3B39
>
<
01010101000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000
>
<
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8B8A898887868584838281807F7E7D7C
7B7A7978777675
>
<
D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D6
D6D6D6D6D6D6D6
>
<
90919293949595969798999A9B9C9D9E9FA0A0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4
B5B5B6B7B8B9BA
>
4 %_Br
<
1111121213141415161718191A1B1C1D1E1F202122232425262728292B2C2D2E2F30313233353637
383A3B3C3D3E3F4041424344454648494A4B4C4D4E4F5051525354555657585A5B5C
>
<
3030302F2E2E2E2C2C2B2B2A292928282726262524232323212120201F1E1E1D1D1B1B1B1A181818
17161515141413121212111010100F0E0E0E0D0D0C0C0C0B0A0A0A09090808070706
>
<
7070706F6F6F6F6F6F6F6F6F6E6E6E6E6E6E6E6E6F6D6D6E6E6E6D6D6E6E6D6D6D6D6D6C6C6D6D6C
6C6D6D6D6C6C6D6D6C6C6C6C6C6B6C6C6C6C6C6C6C6C6B6C6C6C6C6B6B6B6C6B6B6B
>
<
02020202020203030303030303030303030303030303030303030303020303030302020202020202
02020202020202020202020202010101010101010101010101010101010101010101
>
<
EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC8C7C6
C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4
>
<
C8C8C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCDCDCDCDCECECECECFCFCFCFCFD0D0D0D0D1D1D1
D1D2D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9
>
<
80808081818181828282828283838383848484848485858585858686868687878787878888888889
898989898A8A8A8A8B8B8B8B8B8C8C8C8C8C8D8D8D8D8E8E8E8E8E8F8F8F8F909090
>
4 %_Br
[
0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 100 %_BS
%_0.611765 0.054902 0.015686 0 0.4 0.737255 0.901961 2 50 100 Bs
0.611765 0.015686 0.003922 0 0.407843 0.807843 0.941176 2 50 80.3371 %_BS
%_0.611765 0.015686 0.003922 0 0.407843 0.807843 0.941176 2 50 80.3371 Bs
0.6 0.007843 0.086275 0 0.407843 0.823529 0.823529 2 50 61.7978 %_BS
%_0.6 0.007843 0.086275 0 0.407843 0.823529 0.823529 2 50 61.7978 Bs
0.545098 0 0.223529 0 0.458824 0.839216 0.729412 2 50 39.8876 %_BS
%_0.545098 0 0.223529 0 0.458824 0.839216 0.729412 2 50 39.8876 Bs
0.360784 0.023529 0.419608 0.003922 0.643137 0.85098 0.564706 2 50 20.7865 %_BS
%_0.360784 0.023529 0.419608 0.003922 0.643137 0.85098 0.564706 2 50 20.7865 Bs
0.066667 0.188235 0.439216 0.007843 0.933333 0.784314 0.501961 2 50 0 %_BS
%_0.066667 0.188235 0.439216 0.007843 0.933333 0.784314 0.501961 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 46)
(New Gradient Swatch 46) 0 5 Bd
[
<
07070707070707060606060505050404030303030303030404050505060606060707070707070707
06060606050505040403030202010102
>
<
64636261605F5E5D5C5B5B5A595857565554535251504F4E4D4C4A4947464544434241403F3E3D3C
3B3A3938373635353433323131302F2D
>
<
DBDBDBDBDADAD9D9DAD9D9D8D8D9D8D8D7D7D6D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCF
CECECDCDCDCCCCCBCBCBCACAC9C9C8C8
>
<
01010101010101010101000000000000000000000000000000000101010101010101010101010101
01010101000000000000000000000000
>
1
<
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B6B7B8B9BABBBCBDBEBFC0C1
C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1
>
<
1E1E1F1F2020212121222223232324242525262626272728282829292A2A2B2B2B2C2C2D2D2D2E2E
2F2F3030303131323232333334343535
>
4 %_Br
<
06060607070707070707070707070707060606060504040404040405050505050606060606060707
07
>
<
8F8E8D8C8B8A8988868584838281807F7E7D7C7B7A7978777574737271706F6E6D6C6B6A69676665
64
>
<
A6A8A9ABACADAFB1B2B4B4B6B8B9BBBCBEBEC0C1C2C4C5C7C7C8C9CBCCCDCECFD1D2D4D5D7D7D8DA
DB
>
0.003922
<
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
FF
>
<
707172737475767778797A7B7C7D7E7F8081828385868788898A8B8C8D8E8F909192939495969798
99
>
<
403F3E3D3D3C3B3A3938383736353433323231302F2E2D2C2C2B2A2928272726252423222121201F
1E
>
4 %_Br
<
04040404040404040404030303040303030303030303020202020202020202020202010101010101
010101000000000000000101010102020202030303030404040405050505050505050606
>
<
A5A5A4A4A4A4A3A2A2A2A1A1A1A1A0A0A0A09F9F9F9F9E9E9E9E9D9D9D9D9C9C9C9C9B9B9B9B9A9A
9A9A99999999989898989696969695959595949494949393939391919191909090908F8F
>
<
2F3133343637393B3C3E4041434446484A4B4D4E5051535556585A5B5D5E606163646668696B6E6F
7172747677797A7C7D7F818283858788898B8D8E8F9193949697999A9B9D9FA0A1A3A4A6
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000101
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFC
>
<
5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767
676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F7070
>
<
8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
4 %_Br
<
0D0D0C0B0B0A0A0909080707060605050404
>
<
A9A9A8A8A8A7A8A8A7A7A6A6A6A5A5A5A5A5
>
<
2020222223232525272729292B2C2D2D2F2F
>
<
010101010101010101010101010000000000
>
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
57575858585959595A5A5B5B5B5C5C5C5D5D
>
<
949493939292919190908F8F8E8E8D8D8C8C
>
4 %_Br
[
0.007843 0.176471 0.784314 0 1 0.819608 0.207843 2 50 100 %_BS
%_0.007843 0.176471 0.784314 0 1 0.819608 0.207843 2 50 100 Bs
0.027451 0.392157 0.858824 0.003922 1 0.6 0.117647 2 50 76.4045 %_BS
%_0.027451 0.392157 0.858824 0.003922 1 0.6 0.117647 2 50 76.4045 Bs
0.023529 0.560784 0.65098 0.003922 0.988235 0.439216 0.25098 2 50 51.1236 %_BS
%_0.023529 0.560784 0.65098 0.003922 0.988235 0.439216 0.25098 2 50 51.1236 Bs
0.015686 0.647059 0.184314 0 1 0.364706 0.54902 2 50 24.1573 %_BS
%_0.015686 0.647059 0.184314 0 1 0.364706 0.54902 2 50 24.1573 Bs
0.05098 0.662745 0.12549 0.003922 0.929412 0.341176 0.580392 2 50 0 %_BS
%_0.05098 0.662745 0.12549 0.003922 0.929412 0.341176 0.580392 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 49)
(New Gradient Swatch 49) 0 5 Bd
[
<
0C0C0C0B0B0A0A0A0909090A090909090A0909090909090908080808080808080707070707070707
070606060606050505
>
<
AAABACAEAFB0B1B2B3B4B5B6B7B8B9BABCBDBEBFC0C1C3C4C5C7C8C9CACBCDCECFD0D1D3D4D5D6D7
D8D9DBDCDDDEDFE0E1
>
<
00000000000000000000000000000000000000000000000000000001010202030304040404040505
050606060707070707
>
0
<
EDEDEDEEEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F5F5F5F5
F5F6F6F6F6F6F7F7F7
>
<
57565554535251504F4E4D4C4B4A494847464544434241403F3D3C3B3A393837363534333231302F
2E2D2C2B2A29282726
>
<
C2C1C0BFBEBDBCBBBAB9B8B7B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0A09F9E9D
9C9B9A999897969594
>
4 %_Br
<
3D3C3B3A3938363534333231302E2D2C2B2A29272625242221201F1E1D1C1B1A1918171615141312
11100F0E0D0C
>
<
78797B7C7C7E7F80828383858687888A8B8B8D8E8F9092929395969799999A9B9D9E9FA0A1A2A3A4
A5A7A7A8A9AA
>
<
01010102010101010201010101010101010101010101010101010101010101010101010100000000
000000000000
>
0
<
BFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7
E8E9EAEBECED
>
<
7D7C7B7A7A79787776757574737271706F6F6E6D6C6B6A6A69686766656564636261605F5F5E5D5C
5B5A5A595857
>
<
CBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C7C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C3C3
C3C3C3C2C2C2
>
4 %_Br
<
BEBDBBBAB9B8B7B6B5B3B2B1B0AFADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695
94939291908E8D8C8B8A898887868584838281807F7D7C7B7A797877767574737271706E6D6C6B6A
696867666564636261605F5E5C5B5A595857565554535251504F4E4C4B4A4948474645444342413F
3E3D
>
<
212123242425272728282A2B2C2C2E2E2F2F3132323334353536383838393B3B3C3C3E3F3F3F4142
4244454546474848494B4B4B4C4D4E4E4E5051515153545454565657575959595A5B5C5C5C5E5E5F
5F6161616363636465666666686868696A6A6B6B6C6D6D6D6F6F6F70717172727373747475767676
7878
>
<
24242322222221201F1F1F1F1D1D1C1C1B1B1B1B1B1A191919181818181817171717151515151514
14141413131212121211111110101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A
0A0A0A09090909090808080807070707060606060605050505050404040403030303030202020201
0201
>
<
04040404040405050505050505050505050505050505040404040404040404040404030303030303
03030303030303030202020202020202020202020202020202020201010101010101010101010101
01010101010101010101010101010101010000000000000000000000000000000000000000000000
0000
>
<
45464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C
6D6E6F707172737475767778797A7B7C7D7E7F8081838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBF
>
<
9C9C9B9B9B9B9A9A9A9A999999999898989897979797969696969595959594949494939393939292
9291919191909090908F8F8F8F8E8E8E8E8D8D8D8D8C8C8C8C8B8B8B8B8A8A8A8A89898989888888
88878787868686868585858584848484838383838282828281818181808080807F7F7F7F7E7E7E7E
7D7D
>
<
B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4B4B4B4B5B5B5B5B6B6B6B6B6B7B7B7B7B8B8B8B8B8B9
B9B9B9BABABABABABBBBBBBBBCBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C2
C2C2C2C3C3C3C3C3C4C4C4C4C5C5C5C5C5C6C6C6C6C7C7C7C7C7C8C8C8C8C9C9C9C9C9CACACACACB
CBCB
>
4 %_Br
<
EAEAEAE9E9E8E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E2E1E1E0E0E0DFDFDEDEDDDDDCDBDADAD9D8D8
D7D6D6D5D4D3D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
>
<
2A2A2A28282829292727272727282626262626252525252524242424242223232323222222222222
2121212222212121212120202121212020202121212020212121202121
>
<
01010101010101010101010101010101010101000000010100000000000202040405060709090A0A
0D0D0E0E0F101213131415171718181A1A1B1D1D1E1F20202121232324
>
<
00000000000000000000000000000000000000000000000000000000000000000101010101010101
0202020202020202020202030303030303030303030303030404040404
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021232425262728
292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
>
<
8F8F8F90909090909191919191919292929292939393939394949494949595959595969696969696
9797979797989898989899999999999A9A9A9A9A9A9B9B9B9B9B9C9C9C
>
<
D5D4D4D3D3D2D2D1D1D0D0CFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C4C3C3C2C1C1C0C0
BFBFBEBEBDBDBCBBBBBABAB9B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B1B0
>
4 %_Br
[
0.019608 0.882353 0.027451 0 0.968627 0.14902 0.580392 2 50 100 %_BS
%_0.019608 0.882353 0.027451 0 0.968627 0.14902 0.580392 2 50 100 Bs
0.047059 0.666667 0 0 0.929412 0.341176 0.760784 2 50 76.9663 %_BS
%_0.047059 0.666667 0 0 0.929412 0.341176 0.760784 2 50 76.9663 Bs
0.239216 0.470588 0.003922 0 0.74902 0.490196 0.796078 2 50 51.6854 %_BS
%_0.239216 0.470588 0.003922 0 0.74902 0.490196 0.796078 2 50 51.6854 Bs
0.745098 0.129412 0.141176 0.015686 0.270588 0.611765 0.690196 2 50 25.2809 %_BS
%_0.745098 0.129412 0.141176 0.015686 0.270588 0.611765 0.690196 2 50 25.2809 Bs
0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 0 %_BS
%_0.917647 0.164706 0.003922 0 0 0.560784 0.835294 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 53)
(New Gradient Swatch 53) 0 6 Bd
[
<
07070707070707060606060505050404030303030303030404050505060606060707070707070707
06060606050505040403030202010102
>
<
64636261605F5E5D5C5B5B5A595857565554535251504F4E4D4C4A4947464544434241403F3E3D3C
3B3A3938373635353433323131302F2D
>
<
DBDBDBDBDADAD9D9DAD9D9D8D8D9D8D8D7D7D6D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCF
CECECDCDCDCCCCCBCBCBCACAC9C9C8C8
>
<
01010101010101010101000000000000000000000000000000000101010101010101010101010101
01010101000000000000000000000000
>
1
<
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B6B7B8B9BABBBCBDBEBFC0C1
C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1
>
<
1E1E1F1F2020212121222223232324242525262626272728282829292A2A2B2B2B2C2C2D2D2D2E2E
2F2F3030303131323232333334343535
>
4 %_Br
<
05050504040404030303020203030303030404050505050606060606060606060606060606050505
040404040404040404040405050606060606070707
>
<
A4A3A2A1A09F9E9D9C9B9A9998979695939291908F8E8D8C8B8A89888785838281807F7E7D7C7B7B
7A7978777675737271706F6E6D6C6B6A6967666564
>
<
A0A2A2A4A5A6A6A8AAAAACACAEAEB0B1B2B4B4B6B6B8B8BABCBCBDBEBFBFC1C2C3C4C4C6C6C7C9C9
CACACBCBCDCDCED0D0D1D2D3D3D5D6D7D8D8DADADB
>
<
00000000000000000000000000000000000000000000000000010101010101010000000000000000
000000000000000000000000000000010101010101
>
1
<
5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F8081828384
85868788898A8B8C8D8E8F90919293949596979899
>
<
403F3F3E3E3D3D3C3B3B3A3A3939383837363635353434333232313130302F2E2E2D2D2C2C2B2A2A
2929282827272625252424232322212120201F1F1E
>
4 %_Br
<
0A0A0A09090909090908080808080808080808080808070707070707070707070606060707060606
060606060606060506060605050506060505050505050505
>
<
A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3
A3A3A3A3A3A3A3A3A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4
>
<
4243454648494B4C4E4F515254555758595B5C5E5F616264656768696B6C6E6F72747577797A7C7D
7F808183848687898A8C8D8F909293959697999A9C9D9FA0
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010100000000000000000000000000
>
<
F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFA
FAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF
>
<
5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D
5D5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
>
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362615F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A49484746454443424140
>
4 %_Br
<
090909090A0A09090A0A0A0A0A0B0B0B0A0A0A0A0A0A
>
<
B7B6B5B4B3B2B1B0AFADACACABAAA9A8A7A6A5A4A3A2
>
<
18191B1D1E2021232527292C2E30333537393B3D3F42
>
<
00000101010101010101010101010101010101010101
>
<
F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2
>
<
4A4B4C4D4E4F50515253545455565758595A5B5C5D5E
>
<
969594939291908F8E8D8C8A89888786858483828180
>
4 %_Br
<
272625232221201F1E1D1C1B1A18171514131211100F0E0E0D0C0B0B0A0909
>
<
B4B4B4B4B4B4B5B5B5B5B5B5B5B5B5B6B6B6B6B6B6B6B6B6B6B7B7B7B7B7B7
>
<
050505050404040506070709090A0B0C0E0E0F0F1111121214141515171718
>
0
<
D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
0.290196
<
A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9D9D9C9C9B9B9A9A99999898979796
>
4 %_Br
[
0.007843 0.176471 0.784314 0 1 0.819608 0.207843 2 50 100 %_BS
%_0.007843 0.176471 0.784314 0 1 0.819608 0.207843 2 50 100 Bs
0.027451 0.392157 0.858824 0.003922 1 0.6 0.117647 2 50 81.4607 %_BS
%_0.027451 0.392157 0.858824 0.003922 1 0.6 0.117647 2 50 81.4607 Bs
0.019608 0.643137 0.627451 0 1 0.360784 0.25098 2 50 62.9213 %_BS
%_0.019608 0.643137 0.627451 0 1 0.360784 0.25098 2 50 62.9213 Bs
0.039216 0.635294 0.258824 0.003922 0.94902 0.368627 0.501961 2 50 43.8202 %_BS
%_0.039216 0.635294 0.258824 0.003922 0.94902 0.368627 0.501961 2 50 43.8202 Bs
0.035294 0.717647 0.094118 0 0.941176 0.290196 0.588235 2 50 22.4719 %_BS
%_0.035294 0.717647 0.094118 0 0.941176 0.290196 0.588235 2 50 22.4719 Bs
0.152941 0.705882 0.019608 0 0.819608 0.290196 0.65098 2 50 0 %_BS
%_0.152941 0.705882 0.019608 0 0.819608 0.290196 0.65098 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 54)
(New Gradient Swatch 54) 0 4 Bd
[
<
1212121111111110101010100F0F0F0E0D0D0D0D0D0C0C0C0B0B0B0A0A0A09090908080707070706
06060606050506060506060606060606060706060707070707
>
<
9E9F9FA0A1A2A2A3A4A5A5A6A8A9A9AAABABACADAEAEAFB0B1B1B2B3B4B4B5B6B6B7B8BABABBBCBD
BDBEBFC0C0C1C2C3C3C4C5C5C7C8C9C9CACBCDCDCECFD0D0D1
>
<
171718191A1A1B1C1D1D1E1F20202122232425252628292A2A2C2D2E2F303132343738393A3B3C3D
3F4041424445464748494A4C4D4D4E5051525355555657595A
>
0.003922
<
E8E8E8E9E9E9E9EAEAEAEAEAEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEFEFEFEFEFF0F0F0F0F1
F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F6F6F6
>
<
6160605F5E5D5D5C5B5A5A595857575655555453525251504F4F4E4D4C4C4B4A4A49484747464544
4443424141403F3E3E3D3C3C3B3A3939383736363534333332
>
<
A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382817F7E7D7C7B7A79
7877767574737271706F6E6D6C6B6A69686766656463626160
>
4 %_Br
<
5F5E5C5B5A5958575655545352504F4E4D4C4B4A4948474544434241403F3E3C3B3A393836353332
31302F2E2D2C2A2928272625242322201F1E1D1C1B1A19181717161514131312
>
<
68696A6A6C6C6D6E6F6F7171737374747676777879797B7B7B7D7D7E7E8080818283838585868788
8889898B8B8C8C8E8E8E8F8F919192929494959596979898999A9B9B9C9C9E9E
>
<
06070707070707070707070707070707070707070707070707070707070707070707070707070707
080709080A090B0A0B0D0C0E0D0F0E100F111011111212131314141515161517
>
0.003922
<
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C5C6C7C8
C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8
>
<
83838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787878777776767575747473737272717170
706F6F6E6E6D6D6C6C6C6B6B6A6A696968686767666665656464636362626161
>
<
C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2
B1B1B0B0AFAFAEAEADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1
>
4 %_Br
<
E5E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDCDBDADAD9D9D8
D7D6D5D5D4D3D2D1D1CFCFCECDCCCBCAC9C8C7C6C5C5C4C3C1C0BFBFBDBCBBBAB9B8B7B6B5B4B3B1
B0AFAEADACABA9A8A7A6A5A3A2A1A09F9E9D9B9A999897969594939291908F8E8D8C8B8A89888786
8584838281807F7E7D7B7A797877767574737271706E6D6C6B6A696867666564636261605F
>
<
1818181919191919191A1B1B1B1B1B1C1C1C1D1D1D1E1E1F1F1F1F20212121212323232324242526
262627272929292A2A2A2C2C2D2D2E2F30303031313333343435353737383838393B3B3B3C3C3D3E
3F3F40404242434344444646474748484A4A4A4B4B4B4D4D4E4E4E50505051515153535454545456
565757575759595A5A5A5B5C5D5D5D5D5F5F60606061626263636363656566666666686868
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001010101010101020202020202020203030403
03030404040404040505050505050505050506060606060606060607060606060607060606
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010101010101010101010101010101010101010101010101010101010101
>
<
0405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B
2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253
5455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B
7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
>
<
9E9E9E9D9D9D9D9D9D9C9C9C9C9C9C9B9B9B9B9B9B9A9A9A9A9A9A99999999999898989898989797
97979797969696969696959595959594949494949493939393939392929292929291919191919190
909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89
89898989898888888888888787878787868686868686858585858585848484848484838383
>
<
DBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D6D6D6D6D6D6
D6D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D0
D0D0D0D0D0D0CFCFCFCFCFCFCFCECECECECECECECECDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCB
CBCBCBCACACACACACACACAC9C9C9C9C9C9C9C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6
>
4 %_Br
[
0.027451 0.819608 0.352941 0.003922 0.964706 0.196078 0.376471 2 50 100 %_BS
%_0.027451 0.819608 0.352941 0.003922 0.964706 0.196078 0.376471 2 50 100 Bs
0.070588 0.619608 0.090196 0.003922 0.909804 0.380392 0.631373 2 50 66.2921 %_BS
%_0.070588 0.619608 0.090196 0.003922 0.909804 0.380392 0.631373 2 50 66.2921 Bs
0.372549 0.407843 0.023529 0.003922 0.627451 0.513726 0.776471 2 50 33.1461 %_BS
%_0.372549 0.407843 0.023529 0.003922 0.627451 0.513726 0.776471 2 50 33.1461 Bs
0.898039 0.094118 0 0 0.015686 0.619608 0.858824 2 50 0 %_BS
%_0.898039 0.094118 0 0 0.015686 0.619608 0.858824 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration])
Pc
Bb
2 (New Gradient Swatch 20) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 20)
Pc
Bb
2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 1)
Pc
Bb
2 (New Gradient Swatch 54) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 54)
Pc
Bb
2 (New Gradient Swatch 12) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 12)
Pc
Bb
2 (New Gradient Swatch 49) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 49)
Pc
Bb
2 (New Gradient Swatch 13) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 13)
Pc
Bb
2 (New Gradient Swatch 46) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 46)
Pc
Bb
2 (New Gradient Swatch 14) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 14)
Pc
Bb
2 (New Gradient Swatch 53) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 53)
Pc
Bb
2 (New Gradient Swatch 15) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 15)
Pc
Bb
2 (New Gradient Swatch 21) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 21)
Pc
Bb
2 (New Gradient Swatch 18) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 18)
Pc
Bb
2 (New Gradient Swatch 22) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 22)
Pc
Bb
2 (New Gradient Swatch 24) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 24)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 153 0 51 0 50 Lb
(Layer 1) Ln
0 A
u
u
0 O
0 J 0 j 1 w 4 M []0 d0 XR
436.5166 252.998 m
439.8857 254.1162 443.6055 254.2793 447.1465 253.2314 c
454.6455 250.9932 462.001 242.6738 460.54 234.7109 C
461.8115 241.6338 460.0674 246.5449 457.1201 251.1289 c
453.957 256.0537 449.292 262.3584 447.7705 269.5977 c
445.9395 278.3193 448.6377 285.1563 459.5 294.1025 c
472.5801 304.8799 474.5215 318.0879 471.3896 326.3672 C
477.8428 319.501 497.8105 296.582 495.7217 269.7617 c
494.0859 248.6729 486.9316 233.4092 470.0107 227.3027 c
448.0488 219.3799 438.4297 229.4961 419.0146 226.9424 c
415.9678 226.5381 407.8906 224.9365 403.8018 223.4209 C
403.3154 226.3887 405.5674 229.6191 408.1406 230.6885 c
412.8115 232.623 417.6758 230.0713 421.2275 233.3076 c
424.2744 236.0781 424.7305 240.0879 426.1738 243.6484 c
427.9912 248.126 431.9102 251.4609 436.5166 252.998 c
Bb
1 (New Gradient Swatch 24) 404.1904 210.3125 44.0398 189.8754 1 0 0 1 0 0 Bg
136.4933 131.9934 56.7441 -58.6786 377.2793 238.1416 Xm
5960.3018 5763.8027 56.7441 -58.6786 -5583.0225 -5525.6611 Bc
28.3722 27.4368 56.7441 -58.6786 377.2793 238.1416 Bm
26.0717 25.2122 56.7441 -58.6786 405.6514 265.5781 Bm
29.9059 28.92 56.7441 -58.6786 431.7236 290.791 Bm
25.3049 24.4706 56.7441 -58.6786 461.6289 319.7109 Bm
26.8385 25.9537 56.7441 -58.6786 486.9336 344.1816 Bm
5960.3018 5763.8027 56.7441 -58.6786 513.7725 370.1348 Bc
f
0 BB
/BBAccumRotation (1.137453) XT
456.3369 244.2129 m
458.8604 245.4277 461.3389 245.7959 463.3379 245.0449 c
467.5732 243.4609 469.9414 236.3398 466.6553 229.0137 C
469.5107 235.3818 469.8086 239.7344 469.2275 243.7266 c
468.6055 248.0186 466.6279 252.8887 467.7549 259.3799 c
469.1113 267.1914 479.2607 276.8037 494.6748 283.8027 c
506.585 289.2119 516.2822 295.0527 519.583 308.0156 C
520.2197 297.2646 518.873 280.2578 510.1973 263.5977 c
501.627 247.127 487.4492 233.9834 470.2891 226.9209 c
457.0283 221.4629 448.9189 221.5996 436.9502 218.46 c
431.1582 216.9443 428.3604 216.1143 425.2422 214.498 C
424.9531 217.6924 426.6895 221.0391 429.9502 222.0957 c
433.9385 223.3721 437.3281 222.2813 440.5889 225.4219 c
443.3926 228.1201 444.8652 231.791 446.8496 235.1064 c
449.3418 239.2842 452.8779 242.54 456.3369 244.2129 c
Bb
1 (New Gradient Swatch 24) 419.8643 194.1045 44.0398 189.8749 1 0 0 1 0 0 Bg
136.4929 131.9931 28.5202 -29.4925 405.75 208.7002 Xm
5964.9482 5768.2964 28.5202 -29.4925 -5559.1982 -5559.5967 Bc
28.3721 27.4367 28.5202 -29.4925 405.75 208.7002 Bm
26.0717 25.2121 28.5202 -29.4925 434.1221 236.1367 Bm
29.9059 28.9199 28.5202 -29.4925 460.1934 261.3486 Bm
25.3048 24.4706 28.5202 -29.4925 490.0996 290.2686 Bm
26.8385 25.9537 28.5202 -29.4925 515.4043 314.7393 Bm
5964.9482 5768.2964 28.5202 -29.4925 542.2432 340.6934 Bc
f
0 BB
/BBAccumRotation (1.090478) XT
U
470.0107 227.3027 m
486.9316 233.4092 494.0859 248.6729 495.7217 269.7617 c
496.1035 274.6279 495.748 279.3643 494.8867 283.9023 C
494.8154 283.8691 494.7471 283.8359 494.6748 283.8027 c
479.2607 276.8037 469.1113 267.1914 467.7549 259.3799 c
466.6279 252.8887 468.6055 248.0186 469.2275 243.7266 c
469.8086 239.7344 469.5107 235.3818 466.6553 229.0137 c
469.9414 236.3398 467.5732 243.4609 463.3379 245.0449 c
462.3174 245.4297 461.167 245.5127 459.9512 245.3496 C
460.9648 242.2813 461.3037 238.8623 460.54 234.7109 c
461.1846 238.2246 460.1104 241.8047 458.0674 244.9023 C
457.4961 244.7148 456.918 244.4912 456.3369 244.2129 c
452.8779 242.54 449.3418 239.2842 446.8496 235.1064 c
444.9043 231.8545 443.4346 228.2734 440.7363 225.5898 C
449.2139 224.0957 457.6611 222.8477 470.0107 227.3027 c
Bb
1 (New Gradient Swatch 22) 418.8965 195.1055 44.0398 189.8755 1 0 0 1 0 0 Bg
136.4934 131.9935 28.2738 -29.2377 405.749 208.7012 Xm
5950.7026 5754.521 28.2738 -29.2377 -5544.9536 -5545.8193 Bc
28.3722 27.4368 28.2738 -29.2377 405.749 208.7012 Bm
26.0717 25.2122 28.2738 -29.2377 434.1211 236.1377 Bm
29.906 28.92 28.2738 -29.2377 460.1934 261.3506 Bm
25.3049 24.4707 28.2738 -29.2377 490.0986 290.2705 Bm
26.8386 25.9538 28.2738 -29.2377 515.4043 314.7412 Bm
5950.7026 5754.521 28.2738 -29.2377 542.2422 340.6943 Bc
f
0 BB
U
u
u
343.1279 317.9463 m
341.9932 304.3252 329.7383 301.6348 312.1631 294.0674 c
303.834 290.4834 295.7056 284.6699 292.8794 274.6533 c
289.6323 263.1348 293.3013 255.9854 299.3379 244.9453 c
301.9336 240.1963 304.3047 233.8164 300.1563 226.7314 C
297.8599 241.2197 287.0835 243.1367 277.4927 243.1992 c
267.9419 243.2695 256.0327 239.6816 252.6357 250.5361 C
254.8784 235.4541 261.7275 225.4199 270.645 220.4111 c
283.0278 213.4541 295.7974 212.9629 306.9521 217.2305 c
317.2539 221.1748 328.3057 232.3496 335.7793 247.957 c
344.2295 265.6055 348.0908 293.8887 343.1279 317.9463 C
Bb
1 (New Gradient Swatch 14) 261.7007 219.666 36.9725 131.3828 1 0 0 1 0 0 Bg
104.9649 79.0178 40.7095 -54.0773 241.564 246.415 Xm
6514.603 4904.2051 40.7095 -54.0773 -6273.0391 -4657.79 Bc
25.3567 19.0886 40.7095 -54.0773 241.564 246.415 Bm
28.3051 21.3082 40.7095 -54.0773 266.9204 265.5039 Bm
26.5361 19.9764 40.7095 -54.0773 295.2256 286.8115 Bm
24.767 18.6446 40.7095 -54.0773 321.7617 306.7881 Bm
6514.603 4904.2051 40.7095 -54.0773 346.5293 325.4326 Bc
f
0 BB
306.3662 218.2842 m
318.416 222.9141 326.8135 239.4023 324.3867 266.8145 c
321.8936 295.0225 308.667 310.8291 302.6172 322.6533 C
305.6426 313.3047 301.9258 306.0381 291.769 295.2998 c
283.1353 286.1748 278.4644 278.6611 280.0464 268.3828 c
281.5112 258.8516 290.6538 251.0342 296.8989 243.5449 c
299.46 240.4727 302.7412 234.002 300.2676 227.4697 C
300.6807 241.1514 292.0864 245.7236 283.5044 247.9658 c
274.2632 250.3838 262.4927 249.1475 261.0581 261.9307 C
260.1768 240.291 269.3521 227.123 280.436 220.8447 c
289.438 215.7441 298.5737 215.2891 306.3662 218.2842 c
Bb
1 (New Gradient Swatch 14) 252.8862 231.1211 36.9725 131.3191 1 0 0 1 0 0 Bg
104.914 78.9795 56.045 -74.4486 225.6914 267.2461 Xm
6501.7544 4894.5322 56.045 -74.4486 -6276.0625 -4627.2861 Bc
25.3444 19.0793 56.045 -74.4486 225.6914 267.2461 Bm
28.2914 21.2978 56.045 -74.4486 251.0356 286.3252 Bm
26.5232 19.9667 56.045 -74.4486 279.3271 307.623 Bm
24.755 18.6356 56.045 -74.4486 305.8506 327.5898 Bm
6501.7544 4894.5322 56.045 -74.4486 330.6055 346.2256 Bc
f
0 BB
U
280.436 220.8447 m
289.438 215.7441 298.5737 215.2891 306.3662 218.2842 c
318.416 222.9141 326.8135 239.4023 324.3867 266.8145 c
323.3408 278.6523 320.665 288.2725 317.2744 296.2432 C
315.6387 295.5498 313.9482 294.8359 312.1631 294.0674 c
303.834 290.4834 295.7056 284.6699 292.8794 274.6533 c
289.6323 263.1348 293.3013 255.9854 299.3379 244.9453 c
301.9336 240.1963 304.3047 233.8164 300.1563 226.7314 C
297.8599 241.2197 287.0835 243.1367 277.4927 243.1992 c
272.9155 243.2324 267.8042 242.4404 263.3394 242.7842 C
266.6465 232.168 273.1157 224.9912 280.436 220.8447 c
Bb
1 (New Gradient Swatch 46) 261.2725 220.4043 36.9725 128.7315 1 0 0 1 0 0 Bg
102.8467 77.4232 40.2941 -53.5256 241.645 246.4766 Xm
6507.9604 4899.2051 40.2941 -53.5256 -6266.3154 -4652.7285 Bc
24.845 18.7034 40.2941 -53.5256 241.645 246.4766 Bm
27.734 20.8782 40.2941 -53.5256 266.4902 265.1797 Bm
26.0006 19.5733 40.2941 -53.5256 294.2241 286.0576 Bm
24.2672 18.2684 40.2941 -53.5256 320.2246 305.6318 Bm
6507.9604 4899.2051 40.2941 -53.5256 344.4922 323.8994 Bc
f
0 BB
U
u
u
106.8696 248.7891 m
117.457 248.0723 129.4839 246.1865 131.2881 228.4063 C
132.2158 235.4209 130.3682 240.3672 127.3823 244.9902 c
124.1855 249.9492 117.5142 255.7119 115.2695 262.2646 c
111.6777 272.7695 117.0938 282.3613 127.0474 291.4746 c
139.0439 302.4531 141.2529 312.7988 137.9482 321.1523 C
149.0508 307.6387 160.0083 282.5068 159.4067 261.9072 c
158.689 237.1836 146.9111 221.0674 130.687 217.457 c
111.6343 213.2158 83.1362 223.2148 80.0527 258.5049 C
83.0625 246.3477 96.3843 249.499 106.8696 248.7891 c
Bb
1 (New Gradient Swatch 13) 87.6094 225.2246 41.5937 137.5178 1 0 0 1 0 0 Bg
102.8456 91.2904 56.2944 -63.4199 60.8398 255.3828 Xm
5974.2104 5302.9775 56.2944 -63.4199 -5913.3706 -5047.5947 Bc
26.0003 23.079 56.2944 -63.4199 60.8398 255.3828 Bm
27.1559 24.1048 56.2944 -63.4199 86.8403 278.4619 Bm
26.0003 23.079 56.2944 -63.4199 113.9961 302.5664 Bm
23.6891 21.0276 56.2944 -63.4199 139.9961 325.6455 Bm
5974.2104 5302.9775 56.2944 -63.4199 163.6855 346.6729 Bc
f
0 BB
109.0952 229.291 m
115.2329 233.4326 123.9663 236.9609 128.7617 230.6836 c
131.3613 227.2754 130.5405 223.7939 129.75 219.9922 C
132.4219 224.8652 133.106 228.7744 133.106 234.2285 c
133.106 240.1924 131.9585 245.0078 133.7935 252.124 c
136.2471 261.624 144.437 268.0313 153.3916 272.5332 c
166.5562 279.1553 181.7075 286.3516 182.4727 304.5791 C
185.5596 292.4922 184.2725 275.5322 177.8359 259.5283 c
169.5601 238.9414 152.6689 221.3955 130.6694 216.085 c
116.6919 212.707 100.6602 214.2676 86.7642 225.2207 C
94.5894 220.96 102.293 224.6973 109.0952 229.291 c
Bb
1 (New Gradient Swatch 13) 101.5552 209.5127 41.5937 137.519 1 0 0 1 0 0 Bg
102.8465 91.2911 33.598 -37.8507 85.9106 227.1377 Xm
5981.6147 5309.5498 33.598 -37.8507 -5895.7041 -5082.4121 Bc
26.0005 23.0792 33.598 -37.8507 85.9106 227.1377 Bm
27.1561 24.105 33.598 -37.8507 111.9111 250.2168 Bm
26.0005 23.0792 33.598 -37.8507 139.0674 274.3223 Bm
23.6893 21.0277 33.598 -37.8507 165.0679 297.4014 Bm
5981.6147 5309.5498 33.598 -37.8507 188.7573 318.4287 Bc
f
0 BB
U
130.687 217.457 m
146.9111 221.0674 158.689 237.1836 159.4067 261.9072 c
159.5317 266.1475 159.1445 270.5811 158.3887 275.0645 C
156.7129 274.1973 155.0366 273.3613 153.3916 272.5332 c
144.437 268.0313 136.2471 261.624 133.7935 252.124 c
131.9585 245.0078 133.106 240.1924 133.106 234.2285 c
133.106 228.7744 132.4219 224.8652 129.75 219.9922 C
130.5405 223.7939 131.3613 227.2754 128.7617 230.6836 c
123.9663 236.9609 115.2329 233.4326 109.0952 229.291 c
105.6787 226.9834 102.0352 224.8955 98.2627 223.9238 C
108.3672 216.9063 120.7954 215.2549 130.687 217.457 c
Bb
1 (New Gradient Swatch 49) 102.4424 208.5137 41.5937 137.518 1 0 0 1 0 0 Bg
102.8458 91.2905 27.4901 -30.9697 89.6445 222.9316 Xm
5976.4912 5305.002 27.4901 -30.9697 -5886.8467 -5082.0703 Bc
26.0003 23.0791 27.4901 -30.9697 89.6445 222.9316 Bm
27.1559 24.1048 27.4901 -30.9697 115.645 246.0107 Bm
26.0003 23.0791 27.4901 -30.9697 142.8008 270.1152 Bm
23.6892 21.0276 27.4901 -30.9697 168.8013 293.1943 Bm
5976.4912 5305.002 27.4901 -30.9697 192.4902 314.2217 Bc
f
0 BB
U
u
u
528.6846 438.002 m
512.7305 433.5845 504.6348 443.0723 490.8643 437.9766 C
501.5244 445.8779 496.5752 463.4692 503.4502 478.646 C
496.3906 466.9243 476.5859 465.4888 471.249 447.2661 C
474.1621 458.2231 466.9141 475.2002 465.3018 489.3188 C
462.251 469.4033 443.4531 460.0835 449.3818 441.6113 C
441.7305 456.2725 432.957 451.2197 424.3809 459.9546 c
434.4131 449.5996 423.2666 432.1113 444.9658 423.77 C
429.5225 428.7769 424.5508 422.022 415.6221 421.772 C
434.1758 417.3584 432.0273 404.3154 452.2783 407.1025 C
449.8896 403.5889 441.9971 392.2783 450.2461 376.0459 C
444.583 393.3525 453.7861 402.79 455.6523 404.96 C
458.2256 385.5029 473.5137 393.0732 485.9863 375.7432 C
481.8457 386.0381 484.166 393.167 479.6328 399.9658 C
491.8271 391.4268 507.041 401.7275 517.458 399.0635 C
505.8174 403.915 504.2236 412.4072 494.6924 414.249 C
512.0557 413.8975 515.4297 431.7456 528.6846 438.002 C
Bb
1 (New Gradient Swatch 18) 380.5889 364.4902 35.5949 175.2343 1 0 0 1 0 0 Bg
142.4922 101.9952 63.0907 -88.1407 349.043 408.5605 Xm
6679.854 4781.4058 63.0907 -88.1407 -6330.811 -4372.8457 Bc
34.4223 24.6393 63.0907 -88.1407 349.043 408.5605 Bm
36.8238 26.3583 63.0907 -88.1407 383.4648 433.1997 Bm
36.0233 25.7853 63.0907 -88.1407 420.2891 459.5581 Bm
35.2228 25.2123 63.0907 -88.1407 456.3125 485.3433 Bm
6679.854 4781.4058 63.0907 -88.1407 491.5352 510.5557 Bc
f
0 BB
432.7832 481.877 m
436.084 465.9272 465.2637 460.2295 457.3135 437.7739 C
462.9355 457.8711 475.5381 451.8252 488.96 467.8008 C
479.125 449.376 488.252 439.3516 474.6826 425.481 C
488.0898 435.1699 493.6738 426.7271 505.2539 430.7012 C
491.1094 425.7427 494 403.6279 467.7891 407.9189 C
486.5889 406.085 487.6807 397.0889 495.999 392.6357 C
477.4375 396.9912 474.1113 384.376 457.2451 395.9307 C
457.8564 389.1104 456.7041 375.4033 444.5791 367.2314 C
455.8057 377.7451 453.1807 390.7178 452.5615 395.8564 C
441.5576 379.6104 431.3867 392.8701 412.4766 382.9521 C
423.0684 392.3311 421.9307 401.8252 436.4502 404.2939 C
417.0791 394.1553 406.9395 415.2607 394.7695 417.8975 C
408.9531 416.9092 413.7744 425.813 425.7197 419.8096 C
407.9785 428.8286 414.999 444.2803 405.8555 457.4888 C
418.0498 446.8188 427.1553 451.292 439.8174 435.7417 C
426.1406 448.7739 434.4336 462.627 432.7832 481.877 C
Bb
1 (New Gradient Swatch 18) 374.54 372.9414 35.5949 175.2333 1 0 0 1 0 0 Bg
142.4914 101.9946 65.9821 -92.1802 341.5488 419.0313 Xm
6695.3887 4792.5259 65.9821 -92.1802 -6353.8398 -4373.4941 Bc
34.4221 24.6391 65.9821 -92.1802 341.5488 419.0313 Bm
36.8236 26.3582 65.9821 -92.1802 375.9707 443.6704 Bm
36.0231 25.7852 65.9821 -92.1802 412.7949 470.0288 Bm
35.2226 25.2122 65.9821 -92.1802 448.8174 495.814 Bm
6695.3887 4792.5259 65.9821 -92.1802 484.04 521.0259 Bc
f
0 BB
/BBAccumRotation (0.602553) XT
U
467.7891 407.9189 m
468.8037 407.8213 469.7412 407.6943 470.6523 407.5518 C
493.793 405.3018 491.6504 425.9321 505.2539 430.7012 c
493.6738 426.7271 488.0898 435.1699 474.6826 425.481 C
487.8838 438.9736 479.6104 448.8301 488.208 466.3228 C
487.7705 466.0513 487.333 465.7856 486.8936 465.5103 C
483.6963 462.1934 480.5693 459.9907 477.5908 458.2573 C
474.8535 455.3682 472.5928 451.8486 471.249 447.2661 c
471.8848 449.6509 472.0176 452.332 471.8516 455.1938 C
466 452.1689 461.0957 449.2065 457.96 439.8579 C
457.7803 439.1797 457.5684 438.4849 457.3135 437.7739 C
457.5225 438.5044 457.7363 439.1929 457.96 439.8579 C
460.3086 448.7505 456.6016 454.8989 451.3457 460.2427 C
448.5322 454.6436 447.0654 448.8262 449.3818 441.6113 C
443.9258 452.0649 437.9004 452.5078 431.7803 455.0605 C
431.8174 449.4487 432.8721 444.2632 436.668 439.25 C
437.6992 438.1953 438.7402 437.0635 439.8174 435.7417 C
438.6006 436.9023 437.5625 438.0713 436.668 439.25 C
434.2578 441.7188 431.9648 443.5278 429.7412 444.9219 C
430.7764 436.9194 432.0654 428.73 444.9658 423.77 C
432.9346 427.6704 427.2539 424.436 421.1113 422.6997 C
422.4307 421.6782 423.9482 420.7095 425.7197 419.8096 c
422.2734 421.5415 419.4258 422.0103 416.7705 421.854 C
416.4639 421.8267 416.1611 421.7993 415.8496 421.7876 C
415.7881 421.7817 415.7256 421.7681 415.666 421.7603 C
434.1729 417.3389 432.0449 404.3154 452.2783 407.1025 C
450.6309 404.6768 446.3623 398.5303 446.5908 389.6162 C
447.3467 390.1123 448.0986 390.7139 448.8447 391.415 C
450.1787 399.0811 454.4443 403.5537 455.6523 404.96 C
456.3564 399.6494 458.0098 396.3564 460.291 394.0166 C
469.8936 388.5713 474.8623 391.6533 482.3535 393.0322 C
481.8711 395.4443 481.1279 397.7236 479.6328 399.9658 C
483.1777 397.4834 486.9785 396.6182 490.8408 396.54 C
486.4346 400.7334 482.5645 405.7471 470.6523 407.5518 C
469.7363 407.6416 468.792 407.7549 467.7891 407.9189 C
Bb
1 (New Gradient Swatch 21) 378.918 366.8242 35.5949 175.234 1 0 0 1 0 0 Bg
142.492 101.9951 50.0344 -69.9005 353.9004 401.7744 Xm
6678.4717 4780.4165 50.0344 -69.9005 -6324.5713 -4378.6426 Bc
34.4222 24.6393 50.0344 -69.9005 353.9004 401.7744 Bm
36.8238 26.3583 50.0344 -69.9005 388.3223 426.4136 Bm
36.0233 25.7853 50.0344 -69.9005 425.1465 452.772 Bm
35.2227 25.2123 50.0344 -69.9005 461.1699 478.5571 Bm
6678.4717 4780.4165 50.0344 -69.9005 496.3926 503.7695 Bc
f
0 BB
U
u
u
317.7227 437.1758 m
317.3438 434.9292 314.916 431.5474 313.1533 430.1606 C
315.1123 438.8179 314.3564 453.0967 304.9336 463.4995 C
304.8564 461.772 304.2207 459.8208 302.833 457.9297 C
302.3213 464.5947 290.9863 477.8721 273.9971 482.0913 C
273.5898 473.2446 270.5977 466.5459 266.2061 458.9058 C
264.166 459.4771 263.8774 461.6045 263.2471 462.3691 C
261.7642 459.1201 257.5747 452.4434 256.4355 442.3721 c
255.4561 433.6362 257.4106 428.3208 260.7104 423.3716 C
258.3481 424.0415 256.3242 424.7817 253.8369 426.9536 C
255.1079 414.6221 260.7715 396.4072 284.7607 390.5107 c
285.959 390.2158 286.7578 389.1631 286.7578 387.9287 c
286.7754 381.54 282.9775 371.7354 273.0859 367.2314 C
284.9844 371.1279 288.1895 379.1162 291.0254 387.8467 c
291.5977 389.6123 292.4736 390.0908 293.7744 390.4717 c
319.248 397.9873 324.5107 423.6021 317.7227 437.1758 C
Bb
1 (New Gradient Swatch 15) 251.9277 405.2891 39.8602 147.5989 1 0 0 1 0 0 Bg
113.2985 94.5986 62.5286 -74.889 221.9263 441.2207 Xm
6260.6919 5227.3652 62.5286 -74.889 -6038.7656 -4786.1445 Bc
25.4603 21.2581 62.5286 -74.889 221.9263 441.2207 Bm
24.1873 20.1952 62.5286 -74.889 247.3867 462.479 Bm
21.6413 18.0694 62.5286 -74.889 271.5737 482.6738 Bm
21.0049 17.538 62.5286 -74.889 293.2153 500.7432 Bm
21.0047 17.5379 62.5286 -74.889 314.2197 518.2813 Bm
6260.6919 5227.3652 62.5286 -74.889 335.2246 535.8193 Bc
f
0 BB
280.708 464.5127 m
279.832 462.3008 280.1631 457.9688 280.9834 455.7695 C
284.3955 468.9902 294.5996 476.9014 302.9414 478.6279 C
302.0508 477 301.0449 474.6113 301.2559 472.1704 C
305.3301 477.8423 326.6592 486.3706 344.125 480.9272 C
339.0889 475.771 338.7324 465.1968 338.5137 455.9883 C
340.6465 455.395 342.0547 457.1357 343.0342 457.4751 C
342.5996 453.771 344.0879 446.7114 339.6357 437.0952 c
335.7813 428.7593 329.7822 423.8989 324.1504 421.27 C
326.625 420.5825 329.4043 420.5571 332.3398 421.4263 C
329.71 411.7588 308.3408 398.8818 284.8457 404.9541 c
283.6006 405.2764 282.2393 404.8877 281.6631 403.7314 c
278.7236 397.8799 276.2568 387.2158 282.6563 377.8271 C
274.2715 386.5791 275.6816 397.0674 277.8086 405.9697 c
278.2588 407.8604 277.7305 408.7588 276.7773 409.8115 c
258.0996 430.3315 267.2813 456.0742 280.708 464.5127 C
Bb
1 (New Gradient Swatch 15) 256.5293 399.7793 39.8602 147.5977 1 0 0 1 0 0 Bg
113.2975 94.5978 50.0098 -59.8956 231.9688 429.1948 Xm
6254.0073 5221.7842 50.0098 -59.8956 -6022.0386 -4792.5898 Bc
25.4601 21.2579 50.0098 -59.8956 231.9688 429.1948 Bm
24.1871 20.195 50.0098 -59.8956 257.4287 450.4526 Bm
21.6411 18.0692 50.0098 -59.8956 281.6157 470.6479 Bm
21.0047 17.5379 50.0098 -59.8956 303.2568 488.7168 Bm
21.0046 17.5378 50.0098 -59.8956 324.2617 506.2549 Bm
6254.0073 5221.7842 50.0098 -59.8956 345.2666 523.7925 Bc
f
0 BB
U
317.7227 437.1758 m
317.3438 434.9292 314.916 431.5474 313.1533 430.1606 C
315.1123 438.8179 314.3564 453.0967 304.9336 463.4995 C
304.8564 461.772 304.2207 459.8208 302.833 457.9297 C
302.5361 461.7974 298.5713 467.8906 291.9902 473.1504 C
287.1699 469.2261 282.9502 463.3828 280.9834 455.7695 C
280.1631 457.9688 279.832 462.3008 280.708 464.5127 C
267.2813 456.0742 258.0996 430.3315 276.7773 409.8115 c
277.7305 408.7588 278.2588 407.8604 277.8086 405.9697 c
276.8662 402.0146 276.0674 397.749 276.2002 393.4619 C
276.9912 393.1006 277.8379 392.7783 278.6846 392.4541 C
278.9209 396.8838 280.2314 400.8799 281.6631 403.7314 c
282.2393 404.8877 283.6006 405.2764 284.8457 404.9541 c
296.2031 402.0166 307.0391 403.5283 315.5254 406.9463 C
321.4941 417.1143 321.707 429.2095 317.7227 437.1758 C
Bb
1 (New Gradient Swatch 53) 255.8569 400.583 39.8602 147.5993 1 0 0 1 0 0 Bg
113.2988 94.5988 46.5508 -55.7528 231.9678 429.1943 Xm
6248.9678 5217.5767 46.5508 -55.7528 -6017 -4788.3818 Bc
25.4604 21.2582 46.5508 -55.7528 231.9678 429.1943 Bm
24.1874 20.1952 46.5508 -55.7528 257.4282 450.4526 Bm
21.6413 18.0694 46.5508 -55.7528 281.6157 470.6479 Bm
21.0049 17.5381 46.5508 -55.7528 303.2568 488.7173 Bm
21.0048 17.538 46.5508 -55.7528 324.2617 506.2554 Bm
6248.9678 5217.5767 46.5508 -55.7528 345.2666 523.793 Bc
f
0 BB
U
u
u
120.7349 407.1572 m
114.4829 397.6787 113.3916 389.0283 118.2104 375.7217 C
115.2285 389.0283 119.1274 397.0596 124.1748 405.5498 C
124.6343 396.3721 131.1484 390.0986 140.0259 386.6475 c
149.7236 382.874 153.646 383.626 159.1079 379.335 C
158.3257 386.7432 165.1279 396.0361 160.4482 401.8857 C
177.6572 399.5908 185.0132 415.085 190.5264 418.458 C
179.5132 421.313 176.2178 430.9688 163.7485 431.2139 C
173.7817 438.6309 172.0713 450.2964 168.4058 460.1963 c
165.2563 468.7046 159.8984 478.8057 164.4053 485.8359 C
156.5557 477.1089 144.0815 475.54 135.4541 472.606 c
124.9263 469.0225 117.6602 463.582 116.8271 451.083 C
104.6089 465.0479 89.5996 455.2036 84.5493 462.3794 C
87.4834 453.2144 85.2842 437.4492 97.332 429.4106 C
89.5288 429.8696 86.7485 423.5024 82.4258 420.979 C
86.9292 418.6436 92.7778 410.5381 98.4492 406.9385 c
107.8115 400.999 114.5386 402.1084 120.7349 407.1572 C
Bb
1 (New Gradient Swatch 12) 61.4712 377.5234 35.6764 158.4338 1 0 0 1 0 0 Bg
128.6996 92.3997 67.035 -93.3702 27.9536 424.2085 Xm
6429.6289 4616.1421 67.035 -93.3702 -6401.6758 -4191.9336 Bc
42.6589 30.6269 67.035 -93.3702 27.9536 424.2085 Bm
42.6588 30.6268 67.035 -93.3702 70.6123 454.8354 Bm
43.3819 31.146 67.035 -93.3702 113.2715 485.4624 Bm
6429.6289 4616.1421 67.035 -93.3702 156.6533 516.6084 Bc
f
0 BB
120.6211 407.9346 m
122.335 400.8232 128.3081 381.126 113.3916 367.2314 C
133.8125 381.458 127.1177 401.167 124.4961 409.4385 C
130.749 399.1514 138.9126 398.5283 146.6899 400.042 c
154.9521 401.6455 158.7896 406.0654 166.4897 408.0166 C
159.0645 411.042 157.9131 421.0825 151.7905 421.5298 C
163.7485 431.2139 159.4473 440.9077 159.9067 451.4614 C
153.251 447.564 143.4204 452.1528 133.7817 443.9199 C
137.1724 453.7817 133.3784 460.4204 127.0234 466.6377 c
121.4829 472.0518 113.8701 476.2734 111.9458 483.5605 C
110.9834 477.0977 106.8408 471.7979 101.4702 464.5283 c
95.9917 457.1162 92.3735 443.3784 100.8384 434.5098 C
86.5234 438.063 82.6196 427.5591 73.6006 425.3716 C
77.8892 418.3545 81.7886 410.1689 90.9131 405.8506 C
90.8804 405.8311 90.8633 405.9404 90.9165 405.915 C
87.7271 403.5225 88.9102 392.7236 88.1499 388.5674 C
90.6455 390.8838 103.1499 391.5088 110.1909 395.1592 c
116.3848 398.3701 118.2837 403.6729 120.6211 407.9346 C
Bb
1 (New Gradient Swatch 12) 56.2065 384.8574 35.6764 158.4337 1 0 0 1 0 0 Bg
128.6994 92.3996 58.1417 -80.9831 27.2383 425.2065 Xm
6436.9307 4621.3843 58.1417 -80.9831 -6409.6924 -4196.1777 Bc
42.6588 30.6268 58.1417 -80.9831 27.2383 425.2065 Bm
42.6587 30.6268 58.1417 -80.9831 69.897 455.8335 Bm
43.3819 31.146 58.1417 -80.9831 112.5557 486.46 Bm
6436.9307 4621.3843 58.1417 -80.9831 155.9375 517.606 Bc
f
0 BB
U
146.6899 400.042 m
154.9521 401.6455 158.7896 406.0654 166.4897 408.0166 C
159.0645 411.042 157.9131 421.0825 151.7905 421.5298 C
163.7485 431.2139 159.4473 440.9077 159.9067 451.4614 C
153.251 447.564 143.4204 452.1528 133.7817 443.9199 C
137.1724 453.7817 133.3784 460.4204 127.0234 466.6377 c
126.5786 467.0688 126.1294 467.4814 125.6807 467.8818 C
120.6128 464.2954 117.3643 459.1719 116.8271 451.083 C
110.8647 457.8955 104.2412 459.0381 98.4316 459.2598 C
95.0244 451.6782 94.1094 441.5615 100.8384 434.5098 C
97.2461 435.4014 94.311 435.4063 91.7847 434.8823 C
93.1948 432.8364 94.9858 430.9766 97.332 429.4106 C
89.5288 429.8696 86.7485 423.5024 82.4258 420.979 C
86.9292 418.6436 92.7778 410.5381 98.4492 406.9385 c
107.3701 401.2803 113.8965 402.0264 119.8525 406.4736 C
120.1055 406.9717 120.3594 407.4619 120.6211 407.9346 C
120.9863 406.417 121.5405 404.3037 122.0518 401.8193 C
122.7236 403.0654 123.4355 404.3037 124.1748 405.5498 C
124.3638 401.7842 125.584 398.5146 127.5542 395.7236 C
127.1221 401.3506 125.5093 406.2451 124.4961 409.4385 C
130.749 399.1514 138.9126 398.5283 146.6899 400.042 c
Bb
1 (New Gradient Swatch 54) 59.0322 380.9209 35.6764 158.4341 1 0 0 1 0 0 Bg
128.6998 92.3998 49.758 -69.3058 34.1538 415.5732 Xm
6427.6479 4614.7197 49.758 -69.3058 -6393.4941 -4199.1465 Bc
42.659 30.6269 49.758 -69.3058 34.1538 415.5732 Bm
42.6588 30.6268 49.758 -69.3058 76.813 446.2002 Bm
43.382 31.146 49.758 -69.3058 119.4717 476.8271 Bm
6427.6479 4614.7197 49.758 -69.3058 162.8535 507.9731 Bc
f
0 BB
U
u
u
1 XR
491.5078 592.3267 m
491.7754 594.2603 493.166 594.8145 497.1855 594.6338 C
492.7598 600.9673 481.8418 616.0757 461.0576 608.2637 C
453.7871 624.5659 440.4277 630.04 423.541 631.7974 C
430.4375 623.4272 426.626 603.6357 423.1895 588.8022 c
420.8076 578.5508 420.8867 570.0264 421.8916 563.7954 c
422.249 561.6089 422.4033 560.3496 421.3945 558.3647 c
417.6074 550.9434 413.8789 540.2959 418.8789 528.6904 C
415.5439 541.4517 421.2158 552.5034 425.3975 555.9194 c
427.1631 557.3584 428.8564 557.063 431.4863 556.9424 c
445.3818 556.3237 459.7119 564.0796 466.8232 566.6357 c
482.9111 572.4194 501.5674 576.6606 507.6172 571.354 C
506.0527 583.312 496.2129 591.6265 491.5078 592.3267 C
Bb
1 (New Gradient Swatch 18) 395.9531 542.8545 40.1433 125.4705 1 0 0 1 0 0 Bg
95.9139 80.891 67.3127 -79.8138 362.2969 582.7617 Xm
6332.2373 5340.4233 67.3127 -79.8138 -5969.9404 -4757.6621 Bc
23.1702 19.5411 67.3127 -79.8138 362.2969 582.7617 Bm
24.7868 20.9044 67.3127 -79.8138 385.4668 602.3027 Bm
24.2479 20.45 67.3127 -79.8138 410.2539 623.207 Bm
23.7091 19.9955 67.3127 -79.8138 434.502 643.6572 Bm
6332.2373 5340.4233 67.3127 -79.8138 458.2109 663.6528 Bc
f
0 BB
460.4258 576.3896 m
474.958 588.0513 482.709 591.5015 491.5078 592.3267 C
494.1514 591.9058 498.2676 589.228 501.3535 585.4946 C
490.958 586.2637 477.2441 584.0762 460.4258 576.3896 C
Bb
1 (New Gradient Swatch 18) 412.4863 523.2524 40.1433 125.469 1 0 0 1 0 0 Bg
95.9128 80.8901 15.1028 -17.9076 404.9346 532.2061 Xm
6297.0908 5310.7817 15.1028 -17.9076 -5892.1563 -4778.5762 Bc
23.1699 19.5409 15.1028 -17.9076 404.9346 532.2061 Bm
24.7865 20.9042 15.1028 -17.9076 428.1045 551.7471 Bm
24.2476 20.4497 15.1028 -17.9076 452.8906 572.6509 Bm
23.7088 19.9953 15.1028 -17.9076 477.1387 593.1006 Bm
6297.0908 5310.7817 15.1028 -17.9076 500.8477 613.0962 Bc
f
0 BB
457.1855 577.3218 m
449.8682 571.2334 433.0234 561.9092 425.084 558.1284 C
427.8516 565.3164 437.2783 578.5337 444.1406 595.2568 c
452.3701 615.3184 450.2549 629.9106 446.2109 634.4233 C
458.4189 634.1514 474.8584 615.5596 472.8008 601.4448 c
471.5498 592.855 466.7705 585.2974 457.1855 577.3218 c
Bb
1 (New Gradient Swatch 18) 388.0674 552.2061 40.1433 125.4689 1 0 0 1 0 0 Bg
95.9127 80.89 35.335 -41.8974 370.4258 573.124 Xm
6308.0762 5320.0464 35.335 -41.8974 -5937.6504 -4746.9229 Bc
23.1699 19.5408 35.335 -41.8974 370.4258 573.124 Bm
24.7864 20.9042 35.335 -41.8974 393.5957 592.665 Bm
24.2476 20.4497 35.335 -41.8974 418.3818 613.5688 Bm
23.7088 19.9953 35.335 -41.8974 442.6299 634.0186 Bm
6308.0762 5320.0464 35.335 -41.8974 466.3389 654.0142 Bc
f
0 BB
417.5566 586.7241 m
420.1338 593.998 426.415 601.728 432.3975 606.188 C
433.6387 603.4814 436.8447 595.6904 435.7061 587.4927 c
434.5977 579.5435 431.5713 575.3804 429.4082 571.0059 c
427.5703 567.2969 424.8701 562.876 424.0225 558.6733 C
415.0254 566.1675 414.4199 577.8682 417.5566 586.7241 c
Bb
1 (New Gradient Swatch 18) 389.835 550.1094 40.1433 125.4701 1 0 0 1 0 0 Bg
95.9136 80.8907 22.8031 -27.038 378.3105 563.7739 Xm
6311.3433 5322.8018 22.8031 -27.038 -5933.0327 -4759.0273 Bc
23.1701 19.541 22.8031 -27.038 378.3105 563.7739 Bm
24.7867 20.9044 22.8031 -27.038 401.4805 583.3149 Bm
24.2478 20.4499 22.8031 -27.038 426.2676 604.2192 Bm
23.709 19.9955 22.8031 -27.038 450.5156 624.6694 Bm
6311.3433 5322.8018 22.8031 -27.038 474.2246 644.6646 Bc
f
0 BB
425.084 558.1284 m
461.3633 544.2622 470.8369 565.2773 476.2979 575.418 C
467.5713 573.3643 439.7275 583.1699 425.084 558.1284 C
Bb
1 (New Gradient Swatch 18) 407.7227 528.9014 40.1433 125.4672 1 0 0 1 0 0 Bg
95.9115 80.8889 30.7465 -36.4566 392.9902 546.3696 Xm
6323.1021 5332.7188 30.7465 -36.4566 -5930.1118 -4786.3486 Bc
23.1696 19.5406 30.7465 -36.4566 392.9902 546.3696 Bm
24.7861 20.9039 30.7465 -36.4566 416.1602 565.9102 Bm
24.2473 20.4494 30.7465 -36.4566 440.9463 586.814 Bm
23.7085 19.995 30.7465 -36.4566 465.1934 607.2637 Bm
6323.1021 5332.7188 30.7465 -36.4566 488.9014 627.2588 Bc
f
0 BB
U
*u
1 D
0 XR
0 g
491.5078 592.3267 m
482.709 591.5015 474.958 588.0513 460.4258 576.3896 C
477.166 584.0425 490.8311 586.2422 501.2061 585.5034 c
501.2539 585.499 501.3057 585.499 501.3535 585.4946 C
499.1787 588.1436 494.916 591.7876 491.5078 592.3267 C
f
0 g
435.7061 587.4927 m
436.8447 595.6904 433.6387 603.4814 432.3975 606.188 C
430.0596 604.4434 427.6787 602.187 425.4883 599.666 C
424.79 595.9165 423.9824 592.2275 423.1895 588.8022 c
420.8076 578.5508 420.8867 570.0264 421.8916 563.7954 c
422.2217 561.7476 422.7168 560.1045 424.0225 558.6733 C
424.8701 562.876 427.5703 567.2969 429.4082 571.0059 c
431.5713 575.3804 434.5977 579.5435 435.7061 587.4927 c
f
454.8955 575.543 m
466.4873 584.3037 471.5498 592.855 472.8008 601.4448 c
473.2217 604.3252 472.8389 607.3911 471.9131 610.4487 C
468.6396 610.4077 465.0293 609.7583 461.0576 608.2637 C
458.1797 614.7153 454.3369 619.4487 449.709 622.9502 C
450.1016 615.9614 448.7354 606.4648 444.1406 595.2568 c
437.2783 578.5337 427.8516 565.3164 425.084 558.1284 C
439.3457 553.0015 459.9189 565.106 472.4521 568.5522 C
474.001 571.0313 475.2275 573.4336 476.2979 575.418 C
472.2285 574.46 464 576.0801 454.8955 575.543 C
Bb
1 (New Gradient Swatch 21) 398.7852 539.4966 40.1433 125.4703 1 0 0 1 0 0 Bg
95.9138 80.8909 42.5036 -50.3973 377.5332 564.6958 Xm
6316.6782 5327.3013 42.5036 -50.3973 -5939.145 -4762.6055 Bc
23.1702 19.5411 42.5036 -50.3973 377.5332 564.6958 Bm
24.7867 20.9044 42.5036 -50.3973 400.7031 584.2368 Bm
24.2479 20.4499 42.5036 -50.3973 425.4902 605.1411 Bm
23.709 19.9955 42.5036 -50.3973 449.7383 625.5913 Bm
6316.6782 5327.3013 42.5036 -50.3973 473.4473 645.5869 Bc
f
0 BB
*U
U
u
u
0 D
1 XR
327.3545 630.4609 m
311.3496 624.291 290.6177 624.8193 279.0552 604.9077 c
272.6753 593.9116 273.3657 578.7363 277.3101 564.6592 c
277.9116 562.5112 277.3657 560.3071 276.0698 558.124 c
272.0171 551.3218 268.0757 540.3779 274.0825 528.6904 C
269.5933 542.0884 276.1284 551.3818 279.9712 556.229 c
281.0229 557.5562 282.9302 558.2227 284.8306 558.8286 c
303.5332 564.8359 311.4697 567.6289 318.9326 578.1128 c
331.1494 595.2783 319.7539 627.5303 327.3545 630.4609 C
Bb
1 (New Gradient Swatch 14) 248.1333 547.3257 36.9728 122.5392 1 0 0 1 0 0 Bg
97.8992 73.6995 42.6145 -56.6072 225.0625 577.9717 Xm
6498.9126 4892.4453 42.6145 -56.6072 -6273.8496 -4314.4736 Bc
23.6498 17.8038 42.6145 -56.6072 225.0625 577.9717 Bm
26.3998 19.874 42.6145 -56.6072 248.7124 595.7754 Bm
24.7498 18.6319 42.6145 -56.6072 275.1123 615.6494 Bm
23.0998 17.3898 42.6145 -56.6072 299.8623 634.2813 Bm
6498.9126 4892.4453 42.6145 -56.6072 322.9619 651.6714 Bc
f
0 BB
302.4082 588.292 m
289.7759 582.3066 281.0142 571.8613 277.5864 556.272 C
283.9106 559.6187 293.0962 558.5537 298.4204 558.249 c
317.0303 557.187 330.6152 562.3008 339.0938 574.4692 c
345.4619 583.5996 345.0547 590.7925 348.0527 598.4839 C
337.501 591.4849 318.7783 596.0518 302.4082 588.292 c
Bb
1 (New Gradient Swatch 14) 258.2993 533.8262 36.9728 122.5368 1 0 0 1 0 0 Bg
97.8973 73.698 26.7912 -35.5882 245.1875 551.2432 Xm
6491.5469 4886.9009 26.7912 -35.5882 -6246.3594 -4335.6572 Bc
23.6493 17.8035 26.7912 -35.5882 245.1875 551.2432 Bm
26.3993 19.8736 26.7912 -35.5882 268.8369 569.0464 Bm
24.7493 18.6315 26.7912 -35.5882 295.2363 588.9204 Bm
23.0994 17.3894 26.7912 -35.5882 319.9854 607.5518 Bm
6491.5469 4886.9009 26.7912 -35.5882 343.085 624.9414 Bc
f
0 BB
/BBAccumRotation (1.449229) XT
277.5864 556.272 m
281.4175 563.1899 284.895 566.2407 288.8813 574.4858 c
293.7378 584.519 297.5571 589.3188 296.7505 602.7212 c
295.6831 620.2695 280.9028 625.6143 274.187 634.5991 C
271.978 624.4331 264.561 617.8452 261.5444 607.8765 c
258.2759 597.0664 261.5366 589.1343 266.1772 580.2056 c
271.8276 569.3345 275.4458 564.2603 277.5864 556.272 C
Bb
1 (New Gradient Swatch 14) 235.0581 564.6982 36.9728 122.5385 1 0 0 1 0 0 Bg
97.8986 73.6991 41.2716 -54.8234 214.4219 592.1104 Xm
6472.9785 4872.9224 41.2716 -54.8234 -6258.5566 -4280.8115 Bc
23.6497 17.8037 41.2716 -54.8234 214.4219 592.1104 Bm
26.3996 19.8739 41.2716 -54.8234 238.0718 609.9141 Bm
24.7496 18.6318 41.2716 -54.8234 264.4712 629.7881 Bm
23.0997 17.3897 41.2716 -54.8234 289.2207 648.4199 Bm
6472.9785 4872.9224 41.2716 -54.8234 312.3203 665.8096 Bc
f
0 BB
/BBAccumRotation (1.449229) XT
0 XR
255.3999 576.9058 m
248.9468 588.752 249.2261 600.7095 250.9976 612.0405 C
252.229 606.4077 256.8374 602.7378 261.0073 598.9824 c
274.2251 587.1011 280.4302 566.1289 277.5864 556.272 C
270.9292 559.5635 259.8433 568.75 255.3999 576.9058 c
Bb
1 (New Gradient Swatch 14) 236.2822 563.0698 36.9728 122.5387 1 0 0 1 0 0 Bg
97.8987 73.6991 38.8204 -51.5673 216.8721 588.8535 Xm
6479.2847 4877.6694 38.8204 -51.5673 -6262.4131 -4288.8164 Bc
23.6497 17.8037 38.8204 -51.5673 216.8721 588.8535 Bm
26.3997 19.8739 38.8204 -51.5673 240.522 606.6572 Bm
24.7497 18.6318 38.8204 -51.5673 266.9214 626.5313 Bm
23.0997 17.3897 38.8204 -51.5673 291.6709 645.1631 Bm
6479.2847 4877.6694 38.8204 -51.5673 314.7705 662.5527 Bc
f
0 BB
277.5864 556.272 m
282.4243 563.3789 293.6294 566.9536 305.5752 562.9194 c
317.2012 558.9922 325.5498 553.5005 340.0479 554.9653 C
335.6357 551.2104 320.7773 546.2217 306.292 546.6387 c
295.2329 546.9517 280.9839 551.4341 277.5864 556.272 C
Bb
1 (New Gradient Swatch 14) 265.8467 523.8008 36.9728 122.5356 1 0 0 1 0 0 Bg
97.8962 73.6973 27.5006 -36.5306 251.623 542.6948 Xm
6497.7329 4891.5576 27.5006 -36.5306 -6246.1099 -4348.8623 Bc
23.6491 17.8033 27.5006 -36.5306 251.623 542.6948 Bm
26.399 19.8734 27.5006 -36.5306 275.272 560.498 Bm
24.749 18.6313 27.5006 -36.5306 301.6709 580.3716 Bm
23.0991 17.3892 27.5006 -36.5306 326.4199 599.0029 Bm
6497.7329 4891.5576 27.5006 -36.5306 349.5195 616.3921 Bc
f
0 BB
U
318.9326 578.1128 m
322.0371 582.4746 323.6123 587.8149 324.3662 593.3965 C
317.1836 592.7222 309.5713 591.6865 302.4082 588.292 c
298.855 586.6074 295.6235 584.5581 292.7173 582.1563 C
295.5415 587.9785 297.3247 593.1646 296.7505 602.7212 c
296.3628 609.0933 294.1538 613.8457 291.1919 617.7598 C
286.6001 614.7563 282.4321 610.7212 279.0552 604.9077 c
274.7622 597.5127 273.6792 588.2236 274.6245 578.6499 C
271.7163 586.04 266.9009 594.0713 260.2358 599.6699 C
260.1489 592.7095 262.7896 586.7197 266.1772 580.2056 c
270.1968 572.4712 273.188 567.6675 275.3481 562.668 c
276.1743 560.7578 276.7192 559.2778 275.6235 557.3462 c
271.7427 550.5063 268.2964 539.9487 274.0825 528.6904 C
269.9829 540.9277 275.0767 549.7319 278.9175 554.8608 c
279.7964 556.0317 281.2661 557.7134 282.8257 558.0474 c
288.4028 559.2339 294.3521 558.48 298.4204 558.249 c
304.5742 557.8955 310.1641 558.2358 315.2168 559.2666 C
312.125 560.4741 304.9609 563.6152 300.3799 564.1997 C
308.7822 567.5728 313.9697 571.1436 318.9326 578.1128 c
Bb
1 (New Gradient Swatch 46) 247.0112 548.8169 36.9728 122.5393 1 0 0 1 0 0 Bg
97.8992 73.6995 41.7075 -55.4025 226.1572 576.5181 Xm
6498.0156 4891.7705 41.7075 -55.4025 -6271.8584 -4315.2529 Bc
23.6498 17.8038 41.7075 -55.4025 226.1572 576.5181 Bm
26.3998 19.874 41.7075 -55.4025 249.8071 594.3218 Bm
24.7498 18.6319 41.7075 -55.4025 276.207 614.1958 Bm
23.0998 17.3898 41.7075 -55.4025 300.957 632.8276 Bm
6498.0156 4891.7705 41.7075 -55.4025 324.0566 650.2178 Bc
f
0 BB
U
u
u
1 XR
112.0293 601.0591 m
111.6616 598.1255 109.4619 595.1929 106.8955 592.6255 C
108.3633 599.959 107.9961 612.793 94.4297 631.8589 C
110.563 614.625 118.9956 590.0591 138.4917 572.8535 C
120.4634 586.7593 117.1631 592.6255 112.0293 601.0591 C
Bb
1 (New Gradient Swatch 1) 72.2646 558.1587 45 134.0089 1 0 0 1 0 0 Bg
94.7586 94.7586 54.3621 -54.3621 45.0825 585.3408 Xm
5599.8652 5599.8652 54.3621 -54.3621 -5554.7827 -5014.5244 Bc
17.0352 17.0352 54.3621 -54.3621 45.0825 585.3408 Bm
15.9706 15.9706 54.3621 -54.3621 62.1177 602.376 Bm
13.8411 13.8411 54.3621 -54.3621 78.0884 618.3467 Bm
15.9705 15.9705 54.3621 -54.3621 91.9297 632.188 Bm
15.9706 15.9706 54.3621 -54.3621 107.8999 648.1582 Bm
15.9705 15.9705 54.3621 -54.3621 123.8706 664.1289 Bm
5599.8652 5599.8652 54.3621 -54.3621 139.8413 680.0996 Bc
f
0 BB
/BBAccumRotation (0.195594) XT
165.939 601.0884 m
162.8462 601.4341 160.3027 602.584 158.4932 603.9023 C
166.6079 603.1001 180.5679 607.5078 191.4556 620.499 C
182.3228 603.4409 153.8809 592.9897 138.8179 573.1025 C
150.02 589.3125 160.2637 597.0396 165.939 601.0884 C
Bb
1 (New Gradient Swatch 1) 97.1104 533.3135 45 134.0072 1 0 0 1 0 0 Bg
94.7574 94.7574 14.9739 -14.9739 91.0928 539.3311 Xm
5611.2344 5611.2344 14.9739 -14.9739 -5520.1416 -5071.9033 Bc
17.035 17.035 14.9739 -14.9739 91.0928 539.3311 Bm
15.9704 15.9704 14.9739 -14.9739 108.1279 556.3662 Bm
13.8409 13.8409 14.9739 -14.9739 124.0981 572.3364 Bm
15.9703 15.9703 14.9739 -14.9739 137.939 586.1772 Bm
15.9704 15.9704 14.9739 -14.9739 153.9097 602.1479 Bm
15.9703 15.9703 14.9739 -14.9739 169.8799 618.1182 Bm
5611.2344 5611.2344 14.9739 -14.9739 185.8501 634.0884 Bc
f
0 BB
95.5298 574.6587 m
100.5225 576.9287 105.2061 575.7852 108.5073 577.4585 C
83.2515 577.1914 76.7832 583.8145 69.1191 590.2686 C
77.5991 585.4478 88.7231 591.6201 109.2793 589.6924 c
126.8794 588.0425 133.7412 578.272 138.4917 572.8535 C
132.2764 576.3135 119.8203 575.8887 113.6392 572.1406 c
103.543 566.0259 98.2188 562.5703 90.2427 559.3799 c
82.4019 556.2432 75.8867 556.4565 72.7896 555.8965 C
77.0132 557.4253 81.23 559.2598 84.896 563.1094 c
88.4961 566.8892 91.4956 572.8257 95.5298 574.6587 c
Bb
1 (New Gradient Swatch 1) 76.3354 554.0894 45 134.0064 1 0 0 1 0 0 Bg
94.7569 94.7569 46.2222 -46.2222 53.2231 577.2017 Xm
5638.1616 5638.1616 46.2222 -46.2222 -5584.9385 -5060.96 Bc
17.0349 17.0349 46.2222 -46.2222 53.2231 577.2017 Bm
15.9703 15.9703 46.2222 -46.2222 70.2578 594.2363 Bm
13.8408 13.8408 46.2222 -46.2222 86.2285 610.207 Bm
15.9702 15.9702 46.2222 -46.2222 100.0693 624.0479 Bm
15.9703 15.9703 46.2222 -46.2222 116.0396 640.0181 Bm
15.9702 15.9702 46.2222 -46.2222 132.0098 655.9883 Bm
5638.1616 5638.1616 46.2222 -46.2222 147.98 671.9585 Bc
f
0 BB
/BBAccumRotation (0.318474) XT
132.5156 607.2354 m
138.0034 594.6636 139.606 584.7622 138.4917 572.8535 C
126.6206 582.2388 121.4214 593.0264 120.0449 603.123 c
118.3765 615.3618 118.7876 628.4009 113.6128 638.1167 C
121.0444 628.4922 126.2378 621.6162 132.5156 607.2354 c
Bb
1 (New Gradient Swatch 1) 75.4961 554.9282 45 134.0085 1 0 0 1 0 0 Bg
94.7583 94.7583 47.8995 -47.8995 51.5464 578.8779 Xm
5597.4814 5597.4814 47.8995 -47.8995 -5545.9351 -5018.6035 Bc
17.0352 17.0352 47.8995 -47.8995 51.5464 578.8779 Bm
15.9706 15.9706 47.8995 -47.8995 68.5815 595.9131 Bm
13.8411 13.8411 47.8995 -47.8995 84.5522 611.8838 Bm
15.9705 15.9705 47.8995 -47.8995 98.3931 625.7246 Bm
15.9706 15.9706 47.8995 -47.8995 114.3638 641.6953 Bm
15.9705 15.9705 47.8995 -47.8995 130.334 657.6655 Bm
5597.4814 5597.4814 47.8995 -47.8995 146.3047 673.6362 Bc
f
0 BB
/BBAccumRotation (0.225168) XT
199.0078 608.8994 m
188.8545 599.5112 175.0098 595.7339 165.6216 592.7612 c
146.5459 586.7192 118.3135 580.6743 109.4663 560.8696 c
104.8877 550.626 107.1143 537.7275 114.2925 528.6904 C
110.0391 537.9932 110.0508 544.4429 110.9077 548.5552 c
111.9165 553.3979 114.5308 556.5601 119.0654 557.875 c
147.4805 566.1118 159.7114 574.0908 171.3062 582.0791 c
185.1729 591.6348 191.2974 599.0171 199.0078 608.8994 C
Bb
1 (New Gradient Swatch 1) 99.6504 530.7739 45 134.007 1 0 0 1 0 0 Bg
94.7573 94.7573 30.7779 -30.7779 82.6172 547.8071 Xm
5647.499 5647.499 30.7779 -30.7779 -5564.8818 -5099.6924 Bc
17.035 17.035 30.7779 -30.7779 82.6172 547.8071 Bm
15.9704 15.9704 30.7779 -30.7779 99.6523 564.8423 Bm
13.8409 13.8409 30.7779 -30.7779 115.6226 580.8125 Bm
15.9703 15.9703 30.7779 -30.7779 129.4634 594.6533 Bm
15.9704 15.9704 30.7779 -30.7779 145.4336 610.6235 Bm
15.9703 15.9703 30.7779 -30.7779 161.4043 626.5942 Bm
5647.499 5647.499 30.7779 -30.7779 177.3745 642.5645 Bc
f
0 BB
/BBAccumRotation (0.318474) XT
0 XR
165.562 633.6929 m
161.1621 609.8589 137.9844 609.7505 138.4917 572.8535 C
165.9297 585.6592 165.1958 610.5923 165.562 633.6929 C
Bb
1 (New Gradient Swatch 1) 90.6626 539.7622 45 134.0078 1 0 0 1 0 0 Bg
94.7578 94.7578 28.8467 -28.8467 77.915 552.5098 Xm
5606.9629 5606.9629 28.8467 -28.8467 -5529.0479 -5054.4531 Bc
17.0351 17.0351 28.8467 -28.8467 77.915 552.5098 Bm
15.9705 15.9705 28.8467 -28.8467 94.9502 569.5449 Bm
13.841 13.841 28.8467 -28.8467 110.9204 585.5151 Bm
15.9704 15.9704 28.8467 -28.8467 124.7617 599.3564 Bm
15.9705 15.9705 28.8467 -28.8467 140.7319 615.3267 Bm
15.9704 15.9704 28.8467 -28.8467 156.7026 631.2974 Bm
5606.9629 5606.9629 28.8467 -28.8467 172.6729 647.2676 Bc
f
0 BB
88.3604 613.25 m
85.8198 614.7207 83.479 616.5386 81.5376 618.8423 C
83.1812 613.0249 85.1733 606.7275 87.8037 601.3389 c
92.3369 592.0522 100.6592 582.4985 110.3594 577.3706 c
118.8682 572.8711 131.0845 572.7354 138.4917 572.8535 C
127.1836 594.4146 116.7651 598.4844 108.0786 603.7729 c
99.1113 609.2319 94.207 609.8652 88.3604 613.25 c
Bb
1 (New Gradient Swatch 1) 72.2964 558.1294 45 134.0056 1 0 0 1 0 0 Bg
94.7563 94.7563 54.2999 -54.2999 45.146 585.2798 Xm
5608.0703 5608.0703 54.2999 -54.2999 -5562.9243 -5022.791 Bc
17.0348 17.0348 54.2999 -54.2999 45.146 585.2798 Bm
15.9702 15.9702 54.2999 -54.2999 62.1807 602.3145 Bm
13.8408 13.8408 54.2999 -54.2999 78.1509 618.2847 Bm
15.9701 15.9701 54.2999 -54.2999 91.9917 632.1255 Bm
15.9702 15.9702 54.2999 -54.2999 107.9619 648.0957 Bm
15.9701 15.9701 54.2999 -54.2999 123.9321 664.0659 Bm
5608.0703 5608.0703 54.2999 -54.2999 139.9023 680.0361 Bc
f
0 BB
147.5156 594.8306 m
147.874 608.3091 145.3354 615.3936 145.6489 628.8354 c
145.7871 634.7759 146.6533 640.3501 148.2358 643.5444 C
141.6943 636.2109 132.873 625.229 129.8921 610.0581 c
127.1074 595.8989 131.7188 582.7759 138.4917 572.8535 C
144.0605 579.4858 147.2725 585.6812 147.5156 594.8306 c
Bb
1 (New Gradient Swatch 1) 82.7949 547.6294 45 134.0077 1 0 0 1 0 0 Bg
94.7577 94.7577 33.3018 -33.3018 66.144 564.2803 Xm
5601.3994 5601.3994 33.3018 -33.3018 -5535.2554 -5037.1191 Bc
17.0351 17.0351 33.3018 -33.3018 66.144 564.2803 Bm
15.9705 15.9705 33.3018 -33.3018 83.1792 581.3154 Bm
13.841 13.841 33.3018 -33.3018 99.1494 597.2856 Bm
15.9704 15.9704 33.3018 -33.3018 112.9907 611.127 Bm
15.9705 15.9705 33.3018 -33.3018 128.9609 627.0972 Bm
15.9704 15.9704 33.3018 -33.3018 144.9312 643.0674 Bm
5601.3994 5601.3994 33.3018 -33.3018 160.9019 659.0381 Bc
f
0 BB
U
*u
1 D
0 g
165.6216 592.7612 m
163.3379 592.0376 160.9165 591.313 158.4189 590.5654 C
158.4189 590.5664 L
159.4287 592.1816 160.9893 595.876 161.6846 597.9175 C
158.7041 595.583 155.1235 592.5005 151.1616 588.3594 C
151.1528 588.3569 151.1445 588.354 151.1357 588.3511 C
149.5566 587.8594 147.9717 587.3535 146.3784 586.8232 C
146.3662 586.8198 146.3555 586.8164 146.3438 586.812 C
148.1543 592.5942 147.3975 601.2563 147.2954 604.4214 C
143.6523 599.333 140.5566 593.1787 139.2109 584.2476 C
139.0205 584.1743 138.8296 584.1035 138.6396 584.0298 C
138.1855 592.1138 135.7104 601.188 130.332 612.0269 C
127.5977 601.0503 129.7339 590.1787 133.457 581.8555 C
133.3813 581.8208 133.3096 581.7837 133.2344 581.7485 C
129.4155 587.4834 125.7183 591.5029 122.1797 594.5151 C
123.2217 591.6426 124.6133 588.7612 126.4326 585.918 C
123.5195 589.6821 120.8379 593.5806 118.2773 597.5288 C
114.6733 600.0552 109.1509 603.1816 106.9868 604.4023 C
107.7681 599.5347 107.4941 595.6147 106.8955 592.6255 C
109.4619 595.1929 111.6616 598.1255 112.0293 601.0591 C
115.1836 595.8784 117.6587 591.6597 123.2681 585.9565 C
119.5303 587.769 114.9727 589.1592 109.2793 589.6924 c
104.0586 590.1831 99.4517 590.1479 95.3364 589.9048 C
99.5713 584.8516 104.7173 580.354 110.3594 577.3706 c
113.0435 575.9507 117.0796 574.6509 120.2778 574.1006 C
115.6519 570.499 111.8442 566.1934 109.4663 560.8696 c
104.8877 550.626 107.1143 537.7275 114.2925 528.6904 C
110.0391 537.9932 110.0508 544.4429 110.9077 548.5552 c
111.9165 553.3979 114.5308 556.5601 119.0654 557.875 c
147.4805 566.1118 159.7114 574.0908 171.3062 582.0791 c
185.1729 591.6348 191.2974 599.0171 199.0078 608.8994 C
188.8545 599.5112 175.0098 595.7339 165.6216 592.7612 c
f
158.4932 603.9023 m
159.6494 603.0601 161.1323 602.313 162.8398 601.7734 C
163.0298 602.5103 163.2051 603.2524 163.3677 603.9995 C
161.5923 603.79 159.9453 603.7583 158.4932 603.9023 C
Bb
1 (New Gradient Swatch 20) 88.8838 541.541 45 134.007 1 0 0 1 0 0 Bg
94.7573 94.7573 48.3052 -48.3052 65.0903 565.3345 Xm
5639.8862 5639.8862 48.3052 -48.3052 -5574.7959 -5074.5518 Bc
17.035 17.035 48.3052 -48.3052 65.0903 565.3345 Bm
15.9704 15.9704 48.3052 -48.3052 82.1255 582.3696 Bm
13.8409 13.8409 48.3052 -48.3052 98.0957 598.3398 Bm
15.9703 15.9703 48.3052 -48.3052 111.9365 612.1807 Bm
15.9704 15.9704 48.3052 -48.3052 127.9067 628.1509 Bm
15.9703 15.9703 48.3052 -48.3052 143.8774 644.1216 Bm
5639.8862 5639.8862 48.3052 -48.3052 159.8477 660.0918 Bc
f
0 BB
*U
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 D
0 R
0 0 0 1 ([Registration]) 0 XS
0 J 0 j 0.5 w 4 M []0 d0 XR
39 170.8896 m
12 170.8896 L
S
48 161.8896 m
48 134.8896 L
S
U
u
39 670.8896 m
12 670.8896 L
S
48 679.8896 m
48 706.8896 L
S
U
u
557 670.8896 m
584 670.8896 L
S
548 679.8896 m
548 706.8896 L
S
U
u
557 170.8896 m
584 170.8896 L
S
548 161.8896 m
548 134.8896 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
