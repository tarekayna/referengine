%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Alexandr) ()
%%Title: (simplus-07-media.eps)
%%CreationDate: 10/1/2012 2:06 PM
%%Canvassize: 16383
%%BoundingBox: 0 -1000 1000 0
%%HiResBoundingBox: 0 -1000 1000 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 500.5 -500.5 500.5 -500.5
%AI3_TileBox: 206 -884 794 -116
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1000 1000
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -602.3521 23.3823 0.6667 1619 881 282 1 0 48 116 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:100 -800
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 19448 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1FFFA8A8FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1E
%FFA8A8FD3EFFA8A8FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1E
%FFA8A8FD2AFFA8FD09FFA8FD09FFA8A8FD1EFFA8A8FD07FF7D7DFD15FFA8
%A8FD29FFA852A8FD07FFA852A8FD08FFA8A8FD0BFF7DFD06FFA87DFD0AFF
%A8A8FD07FF7D7DFD15FFA8A8FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FD0FFF7D7D7DA8FD05FFFD047DFD08FFA8A8FD0BFF7D52FD
%04FFA827FD0BFFA8A8FD07FF7D7DFD15FFA8A8FD04FF5252275252522752
%52522752525227525252275252527DFD0EFF527D52A87DFF7DFF7D7D52A8
%52FD08FFA87DFD0CFF5252FFFFFF277DFD0BFFA87DFD07FF527DFD15FFA8
%7DFFFFFFA8522727275227272752272727522727527D52275252277DFD0D
%FFA87D7D7D52A87D277DA852A87D7DA8FD07FFA8A8FD0DFF527DA8527DFD
%0CFFA8A8FD07FF7D7DFD15FFA8A8FD04FF52522752275227522752275227
%52277D527D277D52277DFD0EFF527D527D7DA827A87D7D52A852FD08FFA8
%A8FD07FF7DA87DA87DA8FD042752A87DA87DA8A8FD06FFA8A8FD07FF527D
%FD15FFA8A8FD04FF52275227522752275227522752275227522752275227
%7DFD0EFF527D52A8FFFF7DFFFF7D527D7DFD08FFA8A8FD06FF52FD062752
%2752FD0527522752A8FD05FFA8A8FD07FF5252FD15FFA8A8FD04FF527DA8
%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FF7D277DFD0EFF7D527DFFFF7D27
%7DFFA87D527DFD08FFA8A8FD05FF27272752527D5252527D5252527D5252
%27522752A8FD04FFA8A8FD07FF2752FD15FFA8A8FD04FF5252FD07FFA8A8
%7DA8FD07FFA8277DFD0FFF7DFFFFFF525252FFFFFF7DFD09FFA8A8FD04FF
%A85227A8FD0DFFA8275227A8FD04FFA8A8FD07FF5252FD15FFA8A8FD04FF
%527DFD06FF7D522752277DA8FD05FFA8277DFD13FF522752FD0DFFA8A8FD
%04FF7D277DFD0EFFA85227277DFD04FFA8A8FD05FF7D7D2752527D7D7D52
%7D7D7D527D7D7D527D7D7DA8FD04FFA8A8FD04FF5252FD05FF7D27275227
%272752FD05FFA8277DFD13FF275252FD0DFFA8A8FD04FF7D2752FD0FFF27
%7D277DFD04FFA8A8FD05FF7D2752FD0B275227272752277DFD04FFA8A8FD
%04FF527DFD05FF522752FFA8275227A8FD04FFA8277DFD12FFA8275252A8
%FD0CFFA87DFD04FF7D2752FD0EFFA8527D527DFD04FFA87DFD05FF522727
%FD0A7D522752275227277DFD04FFA87DFFFFFFA85252FD04FFA8272727FF
%FFFF522752FD04FFA8277DFD12FFA8275227A8FD0CFFA8A8FD04FF7D2752
%FD0FFF275227A8FD04FFA8A8FD05FF7D277DFFFFA8FFA8A8FFA8A8FF7D52
%527D7D5227A8FD04FFA8A8FD04FF527DFD04FFA8522752FFFFFF7D277DFD
%04FFA8277DFD12FF52A8A85252FD0CFFA8A8FD04FF7D277DFD0EFFA8527D
%527DFD04FFA8A8FD05FF7D2752FFFD05A8FFA8FFA87D277D52527D5252A8
%FFFFFFA8A8FD04FF5252FD05FF272727FF7D5227277DFD04FFA8277DFD11
%FFA8527D7D2752FD0CFFA8A8FD04FF7D2752FD0FFF277D27A8FD04FFA8A8
%FD05FF7D2752527D527D527D527D527D5227527D7D7D52527DFFFFFFA8A8
%FD04FF527DFD05FF7D27527D52275227FD05FFA8277DFD11FF7D272752FF
%27A8FD0BFFA8A8FD04FF7DF87DFD0EFFA85227277DFD04FFA8A8FD05FF52
%FD0C27522727527D2752277DFFFFFFA8A8FD04FF5252FD06FF7DFD0527A8
%FD05FFA8277DFD11FF527D527DFFA852FD0BFFA8A8FD04FF7D2752FD0FFF
%27A827A8FD04FFA8A8FD05FF7D2752527D5252527D5252527D5252275227
%5227A8FD04FFA8A8FD04FF527DFD08FF7D7D7DFD07FFA8277DFD10FFA852
%A87D27527D52A8FD0AFFA8A8FD04FF7DF87DFD0EFFA85227277DFD04FFA8
%A8FD05FF5227277D527D527D527D527D52522752275227277DFD04FFA8A8
%FD04FF5252FFFFFFA8FD0BFFA8FFFFA8277DFD10FF7D275227522752277D
%FD0AFFA8A8FD04FF7D2727FD0EFFA8275227A8FD04FFA8A8FD05FF7D2752
%527D527D527D527D527D2752277D7D5227A8FD04FFA8A8FD04FF52522752
%2752275227522752275227522752275227277DFD0FFFA82727277D7D7D27
%2727A8FD09FFA87DFD05FF272727FD0D7D27272752A8FD04FFA87DFD05FF
%5227277D527D527D527D527D52522727527D27277DFD04FFA87DFFFFFFA8
%5227522752FD0E7D5252277DFD0FFF5252527DFFFFFF7D275252FD09FFA8
%A8FD05FFA8FD0F275227527DFD05FFA8A8FD05FF7D27FD04527D5252527D
%525227522752275227A8FD04FFA8A8FD04FF5227275227FD0F5227277DFD
%0EFF7D275252A8FFFFFFA85252277DFD08FFA8A8FD06FFA87D52527D527D
%7D7D52FD047D52277DA8FD06FFA8A8FD05FF7DFD0E2752FD04277DFD04FF
%A8A8FD04FF7D527D527D527D527D527D527D527D527D527D527D52A8FD0E
%FF7D52527DFD05FF7D52527DFD08FFA8A8FD08FFA8FD0BFFA8A8FD08FFA8
%A8FD06FFFD13A8FD05FFA8A8FD29FFA8FD0BFFA8FD08FFA8A8FD1EFFA8A8
%FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8
%FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1EFFA8A8FD1FFF7DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DFD22
%A87DFD1FA87DFD1FA87DFD20A8FD1FFFA8A8FD1EFFA8A8FD1EFFA8A8FD3E
%FFA8A8FD1EFFA8A8FD0EFFA8A87DA8FD0CFFA8A8FD0CFFA8A87D7D7DA8FD
%2CFFA8A8FD1EFFA8A8FD0CFFA85252527D527DA8FD0AFFA8A8FD0BFFA852
%FD05277DFD2BFFA8A8FD16FFA8FD07FFA8A8FD0CFF52FD077DA8FD09FFA8
%A8FD0BFFFD04527D277D27A8FD1BFF5252FD0DFFA8A8FD13FF7D52277DFD
%07FFA8A8FD0BFF7D7D527D527D527D527DFD09FFA8A8FD0AFFA852522752
%2752275252FD1AFF7D522752A8FD0BFFA8A8FD10FFA87D2752275227FD07
%FFA8A8FD0AFFA87D7D7D527D7D7D527D7DFD09FFA8A8FD0AFF7DFD0952A8
%FD18FF7D27275227A8FD0BFFA87DFD0DFFA87DFD05275227277DFD06FFA8
%7DFD0BFF527D527D527D527D527DFD09FFA87DFD0AFF7D27FD075227FD14
%FF7DA852A8A852275227A8FD0CFFA8A8FD0AFFA8A8525227522752275227
%52277DFD06FFA8A8FD0BFF7D7D7D52FD067DFD09FFA8A8FD0AFF7DFD0652
%275252A8FD12FF52FD04277D5227277DFD0DFFA8A8FD07FFA8FFFFA87DA8
%A8A87DA8A8A87DA8A8A87DFD06FFA8A8FD0BFF527D7D7D527D527D527DFD
%09FFA8A8FD0AFF7D27FD075227FD13FF7D27522752277D7D7DFD0EFFA8A8
%FD06FF7D5227FD0F52275227A8FFFFA8A8FD0BFF52527D5252527D525252
%FD09FFA8A8FD08FFA8FF7DFD0952A8FD12FF7D27275227522752A8FD0EFF
%A8A8FFFFFF7D527D7DFD072752FD0C27A8FFFFA8A8FD08FF7D27FFFD0927
%52A8527DFD06FFA8A8FD07FFA8527D7D272727522752275227A8527DFD10
%FFA82752275227522752FD0EFFA8A8FFFFFF52277D7D2727A8527D52A8FD
%067D527D7D7D525227A8FFFFA8A8FD07FFA82752527D7DA87D7D7DA87DA8
%7D525252A8FD05FFA8A8FD07FF5227527DA87DA87DA87DA87DA85252527D
%FD10FF7D27522752275252FF7D7D7DFD0AFFA8A8FFFFFF7D277D7D2752A8
%A87D7DA8A8527D7DA87DA8527D7D522752A8FFFFA8A8FD07FFA85227A852
%7D527D527D527D527D7D5252FD06FFA8A8FD07FF7D52527D5252527D5252
%527D527D277DA8FD10FF527D52522752275252522727A8FD09FFA8A8FFFF
%FFA8277D7D5252A852FF52A87D7D27FF7DA8A85252A8A85227A8FFFFA8A8
%FD08FF7D52FFFD097DA8FF27A8FD06FFA8A8FD08FF27A87D272752275227
%522752FF527DFD10FF2727277D5227275227272752A8FD0AFFA87DFD04FF
%527D7D2752272727522752275252522752275252522727A8FFFFA87DFD08
%FF7D27FF2752275227522752277DA8277DFD06FFA87DFD07FFA8277D7D27
%5227522752272727FF527DFD0FFF5252272752FF7DA87D522752A8FD06FF
%A8FD04FFA8A8FD04FF7D7D7DFD0752275227FD05522752525227A8FFFFA8
%A8FD08FF7D52FF5227522752275227527DA827A8FD06FFA8A8FD08FF27A8
%7D522752275227522752A8527DFD0EFF5227275227FD04FF52275252FF7D
%A87DA852A852FD04FFA8A8FD04FFA87D7D27FD047DA87D7D7D52527D7DA8
%7D7D7DA85227A8FFFFA8A8FD08FF7D27FF2752275227522752277DA8277D
%FD06FFA8A8FD07FFA8277D7D275227522752272727FF527DFD0EFFA82727
%27FD05FF522752FFA8527D7DA8527D7DFD04FFA8A8FD05FFA87D27527D52
%7D527D527D2752527D527D527D525227A8FFFFA8A8FD08FF7D27A87D2752
%2752275227277DA827FD07FFA8A8FD08FF277DA827275227522752277DA8
%527DFD0FFFA827A8FD05FF7D27FFA87D7D7D52A8527D52FD04FFA8A8FD06
%FF7D2752FD047D527D5227277D7D7D527D7D7D2727A8FFFFA8A8FD09FF27
%7DA8522752FD042752FF2752FD07FFA8A8FD08FF7D27FF52272752FD0427
%A87D27A8FD17FFA8A8FFFFA87D52FF52A852A8FD04FFA8A8FD06FF7D2752
%7D7D7D527D7D7D27527D7D527D7D7D525227A8FFFFA8A8FD09FFA827A8A8
%7D2752275252FF7D27A8FD07FFA8A8FD08FFA85252FF7D5227522752A8FF
%277DFD1CFF7D7DA8527D7D52FD05FFA8A8FD06FF7D2752527D527D527D52
%52277D527D527D527D2752A8FFFFA8A8FD0AFF7D277DFD05A8FF522752FD
%08FFA8A8FD09FF7D2752FFFD06A82752A8FD1CFFA87D527DA852A8FD05FF
%A8A8FD06FF7D2752A87DA87DA87DA827527DA87DA87DA87D5227A8FFFFA8
%A8FD0BFF7D27527DA87D7D27277DFD09FFA8A8FD0AFF7D52277D7DA87D52
%277DFD1EFFA87DA87D527DFD06FFA87DFD06FF7DF8522752275227522727
%275227522752275227277DFFFFA87DFD0CFFA852522727527DA8FD0AFFA8
%7DFD0BFFA87D5227275252A8FD1FFFA87D527DA8FD07FFA8A8FD06FFA8FD
%147DFFFFFFA8A8FD0FFF5252FD0DFFA8A8FD0EFF7D52A8FD22FF7DFD0AFF
%A8A8FD1EFFA8A8FD0BFFA8FFA8A82752A8FFA8FD0AFFA8A8FD0BFFA8FFA8
%7D27FD04A8FD2AFFA8A8FD1EFFA8A8FD0BFF52275227522752272752FD09
%FFA8A8FD0AFF7D272752275227522752A8FD29FFA8A8FD1EFFA8A8FD0AFF
%A85252527D5252527D5252A8FD08FFA8A8FD09FFA87D5252527D5252527D
%527DFD29FFA8A8FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1EFF
%A8A8FD3EFFA8A8FD1EFFA8A8FD1EFFA8A8FD1FFF7DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DFD22A87DFD
%1FA87DFD1FA87DFD20A8FD1FFFA8A8FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8
%FD1EFFA8A8FD1EFFA8A8FD3EFFA8A8FD1EFFA8A8FD1EFFA8A8FD11FFA8A8
%7DA8A8FD28FFA8A8FD1EFFA8A8FD1EFFA8A8FD0FFFA85252275227527DFD
%10FFA8A8A8FD14FFA8A8FD1EFFA8A8FD1EFFA8A8FD0DFFA87D2727275227
%52272727A8FD0EFFA87D7DFD14FFA8A8FD1EFFA8A8FD10FFA87DFD04527D
%FD07FFA8A8FD0DFF7D2752275227522752275227A8FD0DFF7D7D277DFD13
%FFA87DFD0CFFA87DFD10FFA87DFD07FFA8FD067DA85227527D7DA87D5227
%7DFD05FFA87DFD0CFFA827272752FD082752FD0DFFA87D5227A8FD12FFA8
%A8FD0CFF7D527DFD0FFFA8A8FD07FF5227272752527D5252A8FD07FF5252
%FD04FFA8A8FD07FFA8527D52A8522752A8527D7D527D527D7D2752A8FD0C
%FF7D7D5227277DFD11FFA8A8FD04FFA852FD06FFA852277DFD0EFFA8A8FD
%06FFA8FD05277D7D52A8FD09FF527DFFFFFFA8A8FD06FFA8FD0427527D27
%7DA85252A852A852A8525227A8FD0CFFA87D5227522752A8FD0FFFA8A8FD
%04FF277DFD06FF7D5227527DFD0DFFA8A8FD06FFA85252A87D7D7D52A8FD
%0BFF27A8FFFFA8A8FD06FF7D2752A87DA8525227FD047DA87D7D52FF5227
%7DFD0CFF7D7D275227522727277D7D7D275252527DFD06FFA8A8FFFFFF52
%52FF5252FD04FFA82752272752A8FFFFA8FFA8FFA8FD04FFA8A8FD07FF27
%7DFFFFFFA827FD0CFF527DFFFFA8A8FD06FF7D27A8FFFFFF5227527D7D52
%7D527D527D7D5227A8FD0BFF7D527D52275227522752277D7D272752277D
%52A8FD04FFA8A8FFFFA852A8A827A8FD04FF7D522752275227527D7D2752
%277DA8FFFFFFA8A8FD06FFA8527DFFFFFF7D7DFD0CFF7D7DFFFFA8A8FD06
%FF7D277DFFFFFFA85227522752275227525252277DFD0BFF5227277D5252
%275227522727527D275227277D5252FD04FFA8A8FFFFA827FF277DA8277D
%FFFD0452275227522752522727275252A8FFFFA8A8FD07FF277DFFFFFF7D
%52FD0CFF7D7DFFFFA8A8FD06FF7D27A8FD04FF5227275227522752275227
%52A8FD0BFF5227527D52275227522752277D7D522752277D5252FD04FFA8
%A8FFFF7D7DA852A87D52FF5227527D275227522752527D2752277D527DFF
%FFA8A8FD06FFA8527DFFFFFFA852A8FD0BFF27A8FFFFA8A8FD06FF7D27A8
%FD05FF7D522752275227522752A8FD0CFF2727277D522727522752272752
%7D275227277D5252FD04FFA87DFFFF7D52FF27A85252FF52275252272752
%2752275252272727525252FFFFA87DFD06FFA8277DFD04FF5252FD0AFF52
%52FFFFFFA87DFD06FF7DF8A8FD05FFA8272727522752527DA8FD0DFFA852
%527D52275227522752277D7D522752277D277DFD04FFA8A8FFFF7D52FF52
%7DFF27A8A852527D275227522752527D2752277D52A8FFFFA8A8FD06FFA8
%527DFD05FF277DFD08FF7D52A8FFFFFFA8A8FD06FF7D27A8FD05FF522752
%A8A8FD14FF7D7D52272752FD0427527D27522727527DFD05FFA8A8FFFFA8
%27A87D27A8FFA8FFFF7D522727522727277D7D52275252A8FFFFFFA8A8FD
%06FFA8277DFD06FF277DFFFFA8FFA87D2752A8FD04FFA8A8FD06FF7D27A8
%FD04FF7D52A8FF277DFD14FFA87D522752275252A8A8FFA8A87DA87DFD07
%FFA8A8FFFFFF5252FF527DFD04FF7D522752277DA8FFFFA8527D52FD05FF
%A8A8FD06FFA8277DFD06FF7D527D5252275252A8FD06FFA8A8FD06FF7D27
%7DFD07FFA8277DFD14FF7D7D525227527DFD04FFA82752277DFD07FFA8A8
%FFFFFFA82752FFA8FD04FFA82727277DFD04FF52272752FD05FFA8A8FD07
%FF277DFD05FFA8272752FD04A8FD08FFA8A8FD06FF7D27A8FD07FFA8277D
%FD14FFA87D522752A8FD05FF52522752A8FD07FFA8A8FD04FF7D7DFD06FF
%7D5227A8FD05FF522752A8FD05FFA8A8FD06FFA8527DFD05FF527DA8FF27
%A8FD0AFFA8A8FD06FF7D5227FD075227527DFD14FF7D7D2752A8FD05FFA8
%5227277DFD08FFA8A8FD0CFF7D277DFD05FFA827277DFD06FFA8A8FD07FF
%277DFD04FFA8FFFFFF7D277DFD0AFFA8A8FD06FF7D277D7D52527D52527D
%7D277DFD14FFA87D52A8FD06FFA8275252FD09FFA8A8FD0CFFA8A8FD06FF
%7D2727FD07FFA8A8FD06FFA8527DFD08FFA827A8FD0AFFA8A8FD06FF7D27
%7DA8527D7D7D52A87D277DFD14FF7D7DA8FD07FF5227277DFD09FFA87DFD
%13FFA852277DFD07FFA87DFD06FFA8277DFFFFA8FFA8FFA8FF7D277DFD0A
%FFA87DFD06FF7D277D7D5252A852527D7D277DFD1DFFA8522752FD0AFFA8
%A8FD13FFA82752FD08FFA8A8FD06FFA8522752275252522752525227A8FD
%0AFFA8A8FD06FF7D52527D527D7D7D52A87D527DFD1DFF7D27277DFD0AFF
%A8A8FD13FFA87DA8FD08FFA8A8FD07FFFD052752522727522727A8FD0AFF
%A8A8FD06FF7D277DA87D52A87D7DA8A8277DFD1DFF522752FD0BFFA8A8FD
%1EFFA8A8FD07FF7D275252522752525227527DFD0BFFA8A8FD06FF7D2752
%7D52527D52527D52527DFD1EFF7DFD0CFFA8A8FD1EFFA8A8FD09FFA8FFA8
%FFA8FFA8FFA8FD0CFFA8A8FD06FF7D277DA87D52A8527DA87D277DFD2BFF
%A8A8FD1EFFA8A8FD1EFFA8A8FD06FFA85227522752275227522752A8FD2B
%FFA8A8FD1EFFA8A8FD1EFFA8A8FD07FFA8A87DA87DA87DA87DA8A8FD2CFF
%A8A8FD1EFFA8A8FD1EFFA8FD20FF7DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A87D7DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD20A87DFD1FA87DFD
%1FA87D522752275227522752275227522752275227522752275227522752
%2752275227FD1FFFA8A8FD1EFFA8A8FD1EFFA82752275227522752275227
%522752275227522752275227522752275227522752FD1FFFA8A8FD1EFFA8
%A8FD1EFFA852275227522752275227522752275227522752275227522752
%27522752275227FD1FFFA8A8FD1EFFA8A8FD1EFFA8272727522752275227
%5227522752275227522752275227522752275227522752FD1FFFA8A8FD1E
%FFA8A8FD1EFFA85227522752275227522752275227522752275227522752
%275227522752275227FD0CFFA87D52522752527DA8FD0AFFA8A8FD0BFF7D
%7D5252275252A8A8FD0AFFA8A8FD1EFFA827272752275227522752275227
%52275227522752275227522752275227522752FD0BFF5252272752525227
%275252FD09FFA8A8FD09FFA85252272727522752527D7DFD09FFA8A8FD1E
%FFA852275227522752275227522752275227522752275227522752275227
%52275227FD09FFA8275252277DA827FF7D27525227A8FD07FFA87DFD07FF
%A852527D27277DA8275227527D7D52FD08FFA87DFD05FFA87D527D527D52
%7D527D527D527D527D527D527D7DFD04FFA8275227522752272727522727
%2752272727522727275227272752272727522752FD08FFA8277DFF5252FF
%A852A8FF527DFF7D27A8FD06FFA8A8FD07FF7D52FF7D5252FFA852277D7D
%FFFFA852FD07FFA8A8FD05FFA82752275227522752275227522752275227
%522727A8FFFFFFA852275227525252275252522752525227525252275252
%52275252522752275227FD08FF27277D7D27FFFFA827FFFFA827A87D2727
%FD06FFA8A8FD06FF7D52FF7D5227527D522727527DA8FFFF7D52FD06FFA8
%A8FD05FF7D277DFFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA85227A8FFFFFFA8
%27522727277DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8522752
%2752FD07FF52527D52275252A87D527DA87D5227527D5252FD05FFA8A8FD
%06FF52FFFFA8A87D27522752275252A8FFFFFF7DA8FD05FFA8A8FD05FFA8
%27A8FD10FF5252A8FFFFFFA85227522752A8A8A8FD11FF7DA8A852275227
%FD06FFA8277DFFA85252522752272727525252A8FF7D27A8FD04FFA8A8FD
%05FF527DFFFFFFA852272752275252FFFFA87DFFA87DFD05FFA8A8FD05FF
%7D277DFD10FF5227A8FFFFFFA8FD042752FFA87D7DFD0FFF7DA8FFA82727
%2752FD06FF7D27FFFFFF27A8FFFFA852A8FFFFA827FFFFFF27A8FD04FFA8
%A8FD05FF52A8FFFFA827522752275227A8A87D7D7DFFFF52FD05FFA8A8FD
%05FFA827A8FD10FF5252A8FFFFFFA85227522752FFFFFFA87DFD0CFFA87D
%FFFFFFA852275227FD06FF277DFFFF7D52A8FFFFA827FFFFFFA827A8FFFF
%7D52FD04FFA8A8FD04FFA852A8A87D27522752275227527D52522752FFA8
%527DFD04FFA8A8FD05FF7D277DFD10FF5227A8FFFFFFA82727275252FD04
%FFA852A8FD09FF7D7DFD04FFA827522752FD06FF5252FFA87D27A8A8A87D
%527DA8A8A8277DA8FF5252FD04FFA8A8FD04FF7D52525227522752275227
%5227A8FFFFA8FFA8A827A8FD04FFA8A8FD05FFA827A8FD10FF5227A8FFFF
%FFA85227522752FD06FF7DA8FD06FFA87DA8FD05FF7D52275227FD06FF27
%2727522752275227272752272727522727275252FD04FFA87DFD04FFA827
%522752275227522727277DFD06FF52277DFD04FFA87DFD05FF7D277DFD10
%FF7D27A8FFFFFFA82752272752FD07FF527DA8FFFFFF7D527DFD06FFA827
%522752FD06FF527DFFFF7D27FFA8FF7D52A8FFA8A827A8A8FF7D52FD04FF
%A8A8FD04FFA85227522752275227522752FD07FFA827A8FD04FFA8A8FD05
%FFA827A8FD10FF5252A8FFFFFFA8522752277DFD06FF7DA8A87DA8FF7D7D
%A8A8A8FD05FF7D52275227FD06FF527DFFFFA827A8FFFFA827FFFFFFA852
%A8FFFF7D52FD04FFA8A8FD04FFA8272752A852272752272727FD07FF7D27
%A8FD04FFA8A8FD05FF7D277DFD10FF7D27A8FFFFFFA82752272752FD04FF
%A87DA8FFFFA87D52A8FFFFFFA87DFD04FFA827522752FD06FF7D27FFFFFF
%27A8FFFF7D52A8FFFFA827FFFFFF277DFD04FFA8A8FD05FF5227A8FFFF7D
%272752275252A85252A8FFFF7D27FD05FFA8A8FD05FFA827A8FD10FF5252
%A8FFFFFFA85227522752FFFFFFA87DFD0CFFA87DFFFFFFA852275227FD06
%FFA8277DFF7D5227522752272727522752A8FF7D27A8FD04FFA8A8FD05FF
%522752FFFFFF52272752FD05277DFFFF5252FD05FFA8A8FD05FF7D277DFD
%10FF5227A8FFFFFFA8FD042752FFA87D7DFD0FFF7DA8FFA827272752FD07
%FFFD045227527DA87D527DA87D5227FD0452FD05FFA8A8FD06FF2752A8FF
%FFFFA8522752275227527DFFA827A8FD05FFA8A8FD04FFA87D2752527D52
%7D527D527D527D527D527D527D52527DA8A8FFA8522752277DA8A8A8FD11
%FF7DA87D52275227FD08FF2727A8A827FFFFA827FFFFFF27A87D2727FD06
%FFA8A8FD06FF7D2752FFFFFFA827522752275227A8FF527DFD06FFA8A8FF
%FFA827272752FD0527FD067DA852FD04275227522752A8A827272752277D
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA85227522752FD08FFA8
%277DFF5252FFA852A8FF527DFF7D27A8FD06FFA8A8FD07FF7D27FFFFA852
%522752275227FD0452FD07FFA8A8FFFFA8FD042752272727522752275227
%522752272727522752272727FFA852275227525252275252522752525227
%52525227525252275252522752275227FD09FFA8275252277DA827FF7D27
%525227A8FD07FFA87DFD08FF7D527D272727522752FD042752FD08FFA87D
%FFFFFF7D7D527D527D527D527D527D527D527D527D527D527D527D527DFF
%A82752275227522727275227272752272727522727275227272752272727
%522752FD0BFF525227FD045227275252FD09FFA8A8FD09FFA85252275227
%5227522752A8FD09FFA8A8FD1EFFA8522752275227522752275227522752
%2752275227522752275227522752275227FD0CFFA87D52522752527DA8FD
%0AFFA8A8FD0BFF7D7DFD0552A8A8FD0AFFA8A8FD1EFFA827522752275227
%52275227522752275227522752275227522752275227522752FD1FFFA8A8
%FD1EFFA8A8FD1EFFA8522752275227522752275227522752275227522752
%2752275227522752275227FD1FFFA8A8FD1EFFA8A8FD1EFFA82727275227
%522752275227522752275227522752275227522752275227522752FD1FFF
%A8A8FD1EFFA8A8FD1EFFA852275227522752275227522752275227522752
%27522752275227522752275227FD1FFFA8A8FD1EFFA8A8FD1EFFA8272727
%5227522752275227522752275227522752275227522752275227522752FD
%1FFFA8A8FD1EFFA8A8FD1EFFA85227522752275227522752275227522752
%275227522752275227522752275227FD1FFFA87DFD1EFFA87DFD1EFFA827
%522752275227522752275227522752275227522752275227522752275227
%52
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Fade To Edge Black)
(Fade To Edge Black) 0 3 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Neon Rings Vignette)
(Neon Rings Vignette) 1 17 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
<
B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7
E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4
F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECEC
ECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDB
DAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3
C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1
>
<
B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5
B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADAB
AAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999B99979697959492939290
91908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A
69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C
3B393A3837353634323331302E2F2D2C2A2B2928292726242524
>
<
A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A
8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E
6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E
4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A2927
27262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A090807070505040403
0202000000000000000000000000000000000000000000000000
>
<
D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99
979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C
4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A1917
16151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101
01010101010101000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
<
13131313131312121212121212121212121211111111111111111111111110101010101010101010
10100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C
0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A09090909090909
09090909090808080808080808080808080707070707070707070707070606060606060606060606
05050505050505050505050504040404040404040404040403030303030303030303030302020202
0202020202020202010101010101010101010101000000000000
>
<
0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728
292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F4041414243434445
4646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162
626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E
7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B
9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE
>
<
0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485
868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5
D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
>
4 %_Br
<
B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6
A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A999898979696959594949392
92919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878
777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A5958575656
5554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C
>
<
2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A1717181616161414141412121311
1212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A0809090808080707080806070705060605
05050504040403040403040404030304020303030202030202020101010201010100010100010101
01010100010100000101000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001000001000001000001010001
>
0.000031
0.000031
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
>
<
AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BA
BABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6
C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1
D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDD
DEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6
>
<
EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB
>
4 %_Br
<
3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E
5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F80
8081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898
999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9
AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1
>
<
01000101000001000001000001000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000010100000101000101010101010001010001010102
01010102020203020203030302040303040404030404030404040505050506060507070608080707
0808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E1010101012121113121214141414161616
1817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424
>
0.000031
0.000031
<
BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695
94939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D
6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645
44434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D
1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDA
DADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCE
CECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3
C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7
B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE
>
<
FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6
F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1
F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF
>
4 %_Br
<
B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACB
CCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1
E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1
F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3
F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8
D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4
>
<
24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A
4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F7072717375747677
79797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999B999B9C
9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AF
B0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4
B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0
>
<
00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E
0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334
353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F5151525354555556575858
5A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F7171727374747576777779
79797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F90909292929294
9495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000010101010101010101010202020202030303030404
040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F202122242526
27292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E606264
6668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3
B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5
>
<
00000000000001010101010101010101010102020202020202020202020203030303030303030303
03030404040404040404040404040505050505050505050505050606060606060606060606070707
0707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A
0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101011111111
1111111111111111121212121212121212121212131313131313
>
<
AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A9998989796969594939392
9190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675
747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A5958
5857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C
3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F
1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E
>
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
<
B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C
8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D
6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A
5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A4949474746464544434342
4140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A18
1716141312100F0E0C0B0A080706050403020000
>
<
B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5
D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2
F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFD
FDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFD
FDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7
F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1
>
<
A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596
949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E
8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384
838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A78797778767775767475737371727070
6F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B
49494646444441413F3F3D3D3A3A383836363434
>
<
D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3
B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877
757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D
3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A18181616141413121110
0F0F0E0D0C0B0A0A0909080707060605040403030202020201010101010100000000000000000000
0000000000000000000000000000000000000000
>
<
131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A
3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162
636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A
8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F1010101010101011111111111111
11121212121212121313131313131314141414141414141515151515151516161616161616171717
171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C
1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F2020202020202021212121212121222222
22222222222323232323232324242424242424252525252525252526262626262626272727272727
272828282828282828292929292929292A2A2A2A
>
<
0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121
222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F303031313232333334343535
36363737383839393A3A3B3B3C3C3D3D3E3E3F3F4040414142424343444445454646474748484949
4A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D
5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171
727273737474757576767777787879797A7A7B7B
>
4 %_Br
<
00000000000000000001010101010101010101010101010101020202020202020202020202020302
02020304030404040404050505050505050505060606060606060606070707070707070809090909
090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E
0E0E0E0E0E101010101011111111
>
<
F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9
A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A78777674737270
6F6E6C6B6A686765646261605E5D
>
<
343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A191718161715131413111210
0F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304
03020302020302010202010201020201010100010000000001000000000000000000000000000000
0000000000000000000000000000
>
0.000031
<
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7
E7E7E7E7E7E6E6E6E6E6E6E6E6E6
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAF
>
<
7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F90919192939394
95959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADAD
AEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7
C8C8C9CACACBCCCCCDCDCECFCFD0
>
4 %_Br
<
1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B
0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505
05050505040404040403040302020203020202020202020202020202020101010101010101010101
0101010101000000000000000000
>
<
5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E90919394
9697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6
C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8
E9EAEBEBECECEDEDEEEFEFF0F1F1
>
<
00000000000000000000000000000000000000000000000000000000000100000000010001010102
02010201020201020302020302030403040303040404050405060505040506060708070809090A09
0A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F202021232325
2726282A292B2E2D2F2E30333234
>
0.000031
<
E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEEEEEEEEEEEEEEEEEE
>
<
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A
>
<
D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7
B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E
9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A898888878786858584
8383828181807F7F7E7E7D7C7C7B
>
4 %_Br
<
0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30
313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F
4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264
636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A
7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E
9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4
>
<
F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFA
FAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFE
FEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8
F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8
E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5
C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0
>
<
3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F
616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A
7C7B7D7C7D7D7E7E7F7F808081808281838284838483858486858685868687868887888788888988
8A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F9090
91909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C
9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5
>
<
00000000000000000000000000000000000000000000000000000000000001010101010102020202
0303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F20212223
25252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657
595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E90919394
96979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7
C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5
>
<
EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7
C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F
9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877
767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F
4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
262524232221201F1E1D1C1B1A19181716151413
>
<
2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525
252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F
1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A
1A191919191919191818181818181818171717171717171616161616161615151515151515141414
141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F
0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C
>
<
7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868
676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A595958585757565655555454
53535252515150504F4F4E4E4D4D4C4C4B4B4A4A4949484847474646454544444343424241414040
3F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C
2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818
171716161515141413131212111110100F0F0E0E
>
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
<
B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBF
BFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3
C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1
B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896
>
<
B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5
D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5
E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDE
DDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1
>
<
A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C
7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A59
5857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B29
2826252321201D1C1A1917151312100E0D0B0A09080605030200
>
<
D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A9896
93918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442
403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A080807
0605050403030302020201010101010101000000000000000000
>
<
1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30
313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D
4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B
6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E
>
<
0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E
1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F3030
30313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242
434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E
>
<
0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485
868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
>
4 %_Br
<
96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E
5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B
2928272625242221201F1E1D1C1B1A191817161514131211
>
<
D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A0
9E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A797776757574
7372706F6E6D6C6B6A6968676665646463636261605F5E5D
>
0.000031
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
<
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
<
4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273
747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF
>
<
9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2
B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5
C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0
>
4 %_Br
<
1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D
3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173
747577787A7B7D7F808283848687898A8C8D8F9092939596
>
<
5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F80818384
8586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2
B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1
>
0.000031
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
<
E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E
>
<
AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A
89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666665
64636261605F5E5D5C5B5A59585756565554535251504F4E
>
<
D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBD
BDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAA
AAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F
>
4 %_Br
<
9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BA
BABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3
C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBC
BCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4
>
<
D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3
E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3
E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECC
CCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0
>
<
000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B
3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465
666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F80818283848586878889
8A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5
>
<
00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F1012131415
17181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B
5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1
B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5
>
<
7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A696968676666656463636261
60605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A4948474746454444
43424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A2928282726
2525242322222120201F1E1D1D1C1B1A1A191817171615141413
>
<
4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C
3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A
2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
1717161616151514141313121211111110100F0F0E0E0D0D0C0C
>
<
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E
>
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs
0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 2 50 88.1542 %_BS
%_0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 2 50 88.1542 Bs
0.23563 0.002045 0.000031 0.000031 0.737255 0.901961 0.984314 2 50 88.7967 %_BS
%_0.23563 0.002045 0.000031 0.000031 0.737255 0.901961 0.984314 2 50 88.7967 Bs
0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 2 50 89.2704 %_BS
%_0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 2 50 89.2704 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs
0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 2 50 91.2834 %_BS
%_0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 2 50 91.2834 Bs
0.066621 0.365332 0.000031 0.000031 0.901961 0.686275 0.815686 2 50 92.2176 %_BS
%_0.066621 0.365332 0.000031 0.000031 0.901961 0.686275 0.815686 2 50 92.2176 Bs
0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 2 50 92.7625 %_BS
%_0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 2 50 92.7625 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs
0.589197 0.818265 0.000031 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS
%_0.589197 0.818265 0.000031 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs
0.066621 0.365332 0.000031 0.000031 0.901961 0.686275 0.815686 2 50 95.6817 %_BS
%_0.066621 0.365332 0.000031 0.000031 0.901961 0.686275 0.815686 2 50 95.6817 Bs
0.589197 0.818265 0.000031 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS
%_0.589197 0.818265 0.000031 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink Radial)
(Pink Radial) 1 2 Bd
[
0.000031
<
00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C
2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758
585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E
7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D
9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6
B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6
C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECE
CECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1
>
<
0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F1010
1112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F202122212223242524252627
27282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E
403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E50515052515352535555575658
5759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F
6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F818080828281818483
8385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E90909090909091919191
9191939292929292929294949494949494949494949595959595959595959595959595
>
0.000031
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDA
D9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8
B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B
9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A898888878786858584848383
82828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F
6F6E6E6D6D6C6C6C6B6B6A6A6A696968686867676766666665656464646363636262626261616160
60605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A5959595959585858585858575757
5757575656565656565656555555555555555555555454545454545454545454545454
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDB
DAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBA
BAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E
9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786
868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A797978787777777676757574747473
7372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A696969686868676767666666666565
6564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C
5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 31.3953 49.7076 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 31.3953 49.7076 Bs
0.000031 0.819882 0.584924 0.000031 1 0.329412 0.34902 2 50 100 %_BS
%_0.000031 0.819882 0.584924 0.000031 1 0.329412 0.34902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Water)
(Water) 0 5 Bd
[
<
D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5
>
<
5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475
>
<
3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353
>
<
02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112
>
0
<
8A89888786858484838281807F7E7D7C7B7A7978777776757473727170
>
<
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C
>
4 %_Br
<
B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1
D2D2D3D4D4D4D5
>
<
17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F41434446474749
4A4C4D4F4F5052
>
<
15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F3030313334353536373839
3A3A3B3C3D3E3F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000001010101
01010101010202
>
0
<
B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A999897969695949392919190
8F8E8D8C8C8B8A
>
<
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9
>
4 %_Br
<
7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F909091929393
9494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAA
AAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8
B8B8B9B9B9B9B9
>
<
02020202020102020201020202010202020102020101020201010202010102010101020202010302
02020303020203030303040403030404040405040404050504050505050606060507070606070707
0708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F1111111112121212141414
14151515151717
>
<
10111010121211111111101112121212121211111313121313131212141413141414131315151414
14151314151614151515141416161415151514141616141415141416161515151514141616151515
16151516171616161615151717161616171616181817171717161617171616161615151717161616
16151516171515
>
0.000031
<
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807
06050403020100
>
<
D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6
C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBC
BCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2
B2B1B1B1B1B0B0
>
<
E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3
E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDE
DEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9
D9D9D9D8D8D8D8
>
4 %_Br
<
000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223
2425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748
494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D
6E6F70707172737475
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010000010000010100010102010102
010102010202010202
>
<
00000000000000000001010101010201020201010302020202020303030303040304040304040405
0405060506050506060606060607060706060707080807080808090808080909090909080A0A0909
0A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E
101010100F0F111010
>
0.000031
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F
>
<
FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1
F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2
E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3
D3D3D2D2D1D1D1D0D0
>
<
FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8
F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1
F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEA
E9E9E9E9E9E9E8E8E8
>
4 %_Br
[
0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS
%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs
0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS
%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs
0.727382 0.088624 0.08365 0.000031 0 0.690196 0.847059 2 50 52.2472 %_BS
%_0.727382 0.088624 0.08365 0.000031 0 0.690196 0.847059 2 50 52.2472 Bs
0.459419 0.007385 0.064607 0.000031 0.498039 0.815686 0.909804 2 50 51.6854 %_BS
%_0.459419 0.007385 0.064607 0.000031 0.498039 0.815686 0.909804 2 50 51.6854 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Diamond Cubes)
(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [
%AI3_Tile
(0 O 0 R 0.175937 0.165347 0.272679 0.000031 0.827451 0.792157 0.717647 Xa
 0.175937 0.165347 0.272679 0.000031 0.827451 0.792157 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
45.9316 56.8281 m
39.3691 45.4609 L
26.2471 45.4609 L
32.8066 56.8281 L
45.9316 56.8281 L
f
45.9316 34.0957 m
39.3691 22.7305 L
26.2471 22.7305 L
32.8066 34.0957 L
45.9316 34.0957 L
f
65.6162 22.7305 m
59.0537 11.3652 L
45.9316 11.3652 L
52.4932 22.7305 L
65.6162 22.7305 L
f
65.6162 45.4609 m
59.0537 34.0977 L
45.9316 34.0977 L
52.4932 45.4609 L
65.6162 45.4609 L
f
26.2471 22.7305 m
19.6846 11.3652 L
6.5605 11.3652 L
13.123 22.7305 L
26.2471 22.7305 L
f
26.2471 45.4609 m
19.6846 34.0977 L
6.5605 34.0977 L
13.123 45.4609 L
26.2471 45.4609 L
f
45.9316 79.5586 m
39.3691 68.1924 L
26.2471 68.1924 L
32.8066 79.5586 L
45.9316 79.5586 L
f
65.6162 68.1934 m
59.0537 56.8281 L
45.9316 56.8281 L
52.4932 68.1924 L
65.6162 68.1934 L
f
85.3018 56.8281 m
78.7402 45.4609 L
65.6162 45.4609 L
72.1777 56.8281 L
85.3018 56.8281 L
f
85.3018 34.0957 m
78.7402 22.7305 L
65.6162 22.7305 L
72.1777 34.0957 L
85.3018 34.0957 L
f
85.3018 79.5586 m
78.7402 68.1924 L
65.6162 68.1924 L
72.1777 79.5586 L
85.3018 79.5586 L
f
26.2471 68.1924 m
19.6846 56.8281 L
6.5605 56.8281 L
13.123 68.1924 L
26.2471 68.1924 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa
 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
26.2471 68.1924 m
19.6846 56.8281 L
26.2471 45.4609 L
32.8066 56.8281 L
26.2471 68.1924 L
f
26.2471 45.4609 m
19.6846 34.0957 L
26.2471 22.7305 L
32.8066 34.0957 L
26.2471 45.4609 L
f
26.2471 22.7305 m
19.6846 11.3652 L
26.2471 0 L
32.8066 11.3652 L
26.2471 22.7305 L
f
45.9316 34.0957 m
39.3691 22.7305 L
45.9316 11.3652 L
52.4932 22.7305 L
45.9316 34.0957 L
f
45.9316 56.8281 m
39.3691 45.4609 L
45.9316 34.0977 L
52.4932 45.4609 L
45.9316 56.8281 L
f
6.5605 34.0957 m
0 22.7305 L
6.5605 11.3652 L
13.123 22.7305 L
6.5605 34.0957 L
f
6.5605 56.8281 m
0 45.4609 L
6.5605 34.0977 L
13.123 45.4609 L
6.5605 56.8281 L
f
26.2471 90.9238 m
19.6846 79.5586 L
26.2471 68.1924 L
32.8066 79.5586 L
26.2471 90.9238 L
f
45.9316 79.5586 m
39.3691 68.1924 L
45.9316 56.8281 L
52.4932 68.1924 L
45.9316 79.5586 L
f
65.6162 68.1924 m
59.0537 56.8281 L
65.6162 45.4609 L
72.1777 56.8281 L
65.6162 68.1924 L
f
65.6162 45.4609 m
59.0537 34.0957 L
65.6162 22.7305 L
72.1777 34.0957 L
65.6162 45.4609 L
f
65.6162 22.7305 m
59.0537 11.3652 L
65.6162 0 L
72.1777 11.3652 L
65.6162 22.7305 L
f
85.3018 34.0957 m
78.7402 22.7305 L
85.3018 11.3652 L
91.8643 22.7305 L
85.3018 34.0957 L
f
85.3018 56.8281 m
78.7402 45.4609 L
85.3018 34.0977 L
91.8643 45.4609 L
85.3018 56.8281 L
f
65.6162 90.9238 m
59.0537 79.5586 L
65.6162 68.1924 L
72.1777 79.5586 L
65.6162 90.9238 L
f
85.3018 79.5586 m
78.7402 68.1924 L
85.3018 56.8281 L
91.8643 68.1924 L
85.3018 79.5586 L
f
6.5605 79.5576 m
0 68.1924 L
6.5605 56.8281 L
13.123 68.1924 L
6.5605 79.5576 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7691 7691 m
-7511.6558 7691 L
-7511.6558 7655.8267 L
-7691 7655.8267 L
-7691 7691 L
n
u
u
0 O
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
0 R
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
0.5 w-7529.8286 7656.0781 m
-7672.8276 7656.0781 L
-7672.8276 7658.6475 L
-7529.8286 7658.6475 L
-7529.8286 7656.0781 L
b
-7672.8276 7681.4829 m
-7529.8286 7681.4829 L
-7529.8286 7678.7109 L
-7672.8276 7678.7109 L
-7672.8276 7681.4829 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-7672.8276 7658.6475 m
-7672.8276 7678.7109 L
-7529.8286 7678.7109 L
-7529.8286 7658.6475 L
-7672.8276 7658.6475 L
b
U
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-7551.1978 7690.6191 m
-7512.2544 7690.6191 L
-7514.4292 7688.3984 L
-7545.9976 7688.3984 L
-7551.1978 7690.6191 L
b
-7512.2544 7666.5854 m
-7529.8286 7666.5854 L
-7529.8286 7668.6797 L
-7514.3237 7668.6797 L
-7512.2544 7666.5854 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-7514.3237 7668.6797 m
-7529.8286 7668.6797 L
-7529.8286 7681.4829 L
-7545.9976 7688.3984 L
-7514.4292 7688.3984 L
-7524.6465 7679.1279 L
-7514.3237 7668.6797 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-7690.4019 7690.6191 m
-7651.4595 7690.6191 L
-7656.6587 7688.3984 L
-7688.2285 7688.3984 L
-7690.4019 7690.6191 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-7672.8286 7668.6797 m
-7688.3345 7668.6797 L
-7678.0112 7679.1279 L
-7688.2285 7688.3984 L
-7656.6587 7688.3984 L
-7672.8286 7681.4829 L
-7672.8286 7668.6797 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-7672.8286 7666.5854 m
-7690.4019 7666.5854 L
-7688.3345 7668.6797 L
-7672.8286 7668.6797 L
-7672.8286 7666.5854 L
b
-7651.4595 7690.6191 m
-7672.8286 7681.4829 L
S
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7551.1978 7681.4829 m
-7551.1978 7688.1836 L
-7535.5269 7681.4829 L
-7551.1978 7681.4829 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-7551.1978 7688.1836 m
-7551.1978 7690.6191 L
-7529.8286 7681.4829 L
-7535.5269 7681.4829 L
-7551.1978 7688.1836 L
b
-7672.8286 7681.4829 m
-7651.4595 7690.6191 L
-7651.4595 7688.1836 L
-7667.1294 7681.4829 L
-7672.8286 7681.4829 L
b
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7667.1294 7681.4829 m
-7651.4595 7688.1836 L
-7651.4595 7681.4829 L
-7667.1294 7681.4829 L
b
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 44)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-7686.6665 7691 m
-7691 7691 L
-7691 7687.3989 L
-7686.6665 7687.3989 L
-7686.6665 7691 L
n
u
0 Ap
0 XR
-7689.9702 7690.3359 m
-7687.6963 7690.3359 L
-7687.6963 7688.0625 L
-7689.9702 7688.0625 L
-7689.9702 7690.3359 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-7687.6963 7689.1992 m
-7687.6963 7689.8267 -7688.2056 7690.3359 -7688.8335 7690.3359 c
-7689.4614 7690.3359 -7689.9702 7689.8267 -7689.9702 7689.1992 c
-7689.9702 7688.5718 -7689.4614 7688.0625 -7688.8335 7688.0625 c
-7688.2056 7688.0625 -7687.6963 7688.5718 -7687.6963 7689.1992 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 47)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-7684.6064 7691 m
-7691 7691 L
-7691 7687.3989 L
-7684.6064 7687.3989 L
-7684.6064 7691 L
n
u
0 XR
-7688.9404 7690.3359 m
-7686.6665 7690.3359 L
-7686.6665 7688.0625 L
-7688.9404 7688.0625 L
-7688.9404 7690.3359 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-7686.6665 7689.1992 m
-7686.6665 7689.8267 -7687.1753 7690.3359 -7687.8032 7690.3359 c
-7688.4312 7690.3359 -7688.9404 7689.8267 -7688.9404 7689.1992 c
-7688.9404 7688.5718 -7688.4312 7688.0625 -7687.8032 7688.0625 c
-7687.1753 7688.0625 -7686.6665 7688.5718 -7686.6665 7689.1992 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 48)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7691 7691 m
-7683.1465 7691 L
-7683.1465 7682.5957 L
-7691 7682.5957 L
-7691 7691 L
n
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
3.86371 M-7690.1582 7682.5957 m
-7689.6812 7682.5845 -7689.2842 7682.9595 -7689.2725 7683.4375 c
-7689.2593 7683.9141 -7689.6357 7684.3101 -7690.1138 7684.3237 c
-7690.5903 7684.3359 -7690.9878 7683.96 -7690.9995 7683.4824 c
-7691.0122 7683.0054 -7690.6357 7682.6069 -7690.1582 7682.5957 c
f
-7690.1357 7683.46 m
F
U
u
-7690.1558 7684.8184 m
-7689.6782 7684.8086 -7689.2813 7685.1846 -7689.2686 7685.6621 c
-7689.2563 7686.1382 -7689.6333 7686.5356 -7690.1104 7686.5488 c
-7690.5874 7686.5615 -7690.9849 7686.1846 -7690.9971 7685.7075 c
-7691.0093 7685.23 -7690.6328 7684.8345 -7690.1558 7684.8184 c
f
-7690.1333 7685.6846 m
F
U
u
-7690.1523 7687.0469 m
-7689.6753 7687.0342 -7689.2783 7687.4102 -7689.2661 7687.8877 c
-7689.2539 7688.3638 -7689.6304 7688.7612 -7690.1074 7688.7744 c
-7690.5845 7688.7871 -7690.9814 7688.4102 -7690.9937 7687.9326 c
-7691.0068 7687.4556 -7690.6299 7687.0581 -7690.1523 7687.0469 c
f
-7690.1299 7687.9102 m
F
U
u
-7690.1499 7689.2725 m
-7689.6724 7689.2588 -7689.2754 7689.6357 -7689.2627 7690.1133 c
-7689.25 7690.5894 -7689.6274 7690.9863 -7690.1045 7691 c
-7690.5815 7691.0127 -7690.9785 7690.6357 -7690.9912 7690.1582 c
-7691.0029 7689.6816 -7690.6274 7689.2832 -7690.1499 7689.2725 c
f
-7690.1274 7690.1357 m
F
U
u
-7688.1538 7683.6665 m
-7687.6763 7683.6533 -7687.2793 7684.0293 -7687.2666 7684.5068 c
-7687.2539 7684.9829 -7687.6309 7685.3804 -7688.1084 7685.3945 c
-7688.5854 7685.4063 -7688.9824 7685.0293 -7688.9946 7684.5527 c
-7689.0068 7684.0752 -7688.6304 7683.6768 -7688.1538 7683.6665 c
f
-7688.1304 7684.5293 m
F
U
u
-7688.1499 7685.8901 m
-7687.6729 7685.8789 -7687.2764 7686.2549 -7687.2632 7686.7324 c
-7687.2515 7687.21 -7687.6274 7687.6069 -7688.1055 7687.6191 c
-7688.5825 7687.6318 -7688.9795 7687.2549 -7688.9917 7686.7773 c
-7689.0039 7686.3008 -7688.6274 7685.9023 -7688.1499 7685.8901 c
f
-7688.1274 7686.7549 m
F
U
u
-7688.1475 7688.1157 m
-7687.6699 7688.1045 -7687.2729 7688.4805 -7687.2607 7688.9595 c
-7687.2485 7689.4341 -7687.6255 7689.8325 -7688.1025 7689.8447 c
-7688.5791 7689.8574 -7688.9766 7689.4814 -7688.9888 7689.0029 c
-7689.0015 7688.5264 -7688.6245 7688.1279 -7688.1475 7688.1157 c
f
-7688.1245 7688.9805 m
F
U
u
-7686.0723 7684.7119 m
-7685.5952 7684.6997 -7685.1987 7685.0781 -7685.1865 7685.5532 c
-7685.1738 7686.0303 -7685.5508 7686.4287 -7686.0273 7686.4414 c
-7686.5054 7686.4541 -7686.9019 7686.0757 -7686.9141 7685.5996 c
-7686.9272 7685.1235 -7686.5498 7684.7261 -7686.0723 7684.7119 c
f
-7686.0503 7685.5781 m
F
U
u
-7686.0698 7686.9395 m
-7685.5928 7686.9253 -7685.1953 7687.3013 -7685.1831 7687.7788 c
-7685.1704 7688.2573 -7685.5474 7688.6543 -7686.0249 7688.6685 c
-7686.5024 7688.6797 -7686.8994 7688.3013 -7686.9116 7687.8252 c
-7686.9233 7687.3486 -7686.5469 7686.9512 -7686.0698 7686.9395 c
f
-7686.0474 7687.8013 m
F
U
u
-7684.0332 7685.7822 m
-7683.5557 7685.7695 -7683.1592 7686.1475 -7683.1465 7686.6255 c
-7683.1333 7687.1016 -7683.5103 7687.4985 -7683.9883 7687.5117 c
-7684.4653 7687.5225 -7684.8618 7687.1475 -7684.8745 7686.6685 c
-7684.8862 7686.1909 -7684.5098 7685.7949 -7684.0332 7685.7822 c
f
-7684.0103 7686.6475 m
F
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -
(rnOnPath Brush Tool/ Arrow Brush Circles/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Banner)
(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Arrow Brush Circles)
(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -
(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -
( 1 0 4 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.000031 0.993988 1 0.000031 1 0 0 Xa
(RGB Red)
Pc
0.061982 0.000031 0.965148 0.000031 1 1 0 Xa
(RGB Yellow)
Pc
0.627649 0.000031 1 0.000031 0 1 0 Xa
(RGB Green)
Pc
0.517937 0.000031 0.125399 0.000031 0 1 1 Xa
(RGB Cyan)
Pc
0.883665 0.769161 0.000031 0.000031 0 0 1 Xa
(RGB Blue)
Pc
0.269902 0.816403 0.000031 0.000031 1 0 1 Xa
(RGB Magenta)
Pc
0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0.000031 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000366 0.500664 0.985656 0.000031 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0.000214 0.348486 0.871305 0.000031 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045136 0.000031 0.931884 0.000031 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188968 0.000397 0.98233 0.000031 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501091 0.001373 0.990387 0.000031 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.761959 0.000031 0.749783 0.000031 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.6972 0.14847 0.000031 0.000031 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.875364 0.526451 0.000031 0.000031 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262547 0.245243 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0.000031 0.970001 0.204959 0.000031 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.22855 0.274266 0.39942 0.000031 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362341 0.574029 0.840574 0.226169 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To Edge Black)
Pc
Bb
0 0 0 0 Bh
2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Neon Rings Vignette)
Pc
Bb
2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Water)
Pc
Bb
0 0 0 0 Bh
2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Pink Radial)
Pc
(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Diamond Cubes)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.193668 0.150057 0.155337 0.000031 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084596 0.061311 0.065766 0.000031 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 Xa
(R=63 G=169 B=245)
Pc
0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 Xa
(R=122 G=201 B=67)
Pc
0.000031 0.508354 0.961639 0.000031 1 0.576471 0.117647 Xa
(R=255 G=147 B=30)
Pc
0.000031 0.965057 0.900572 0.000031 1 0.113725 0.145098 Xa
(R=255 G=29 B=37)
Pc
0.000031 0.661738 0.032776 0.000031 1 0.482353 0.67451 Xa
(R=255 G=123 B=172)
Pc
0.253758 0.127169 0.116762 0.000031 0.741176 0.8 0.831373 Xa
(R=189 G=204 B=212)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(mesh) Ln
0 A
u
0 O
0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa
0 J 0 j 1 w 10 M []0 d0 XR
751.417 -1000 m
748.583 -1000 L
748.583 0 L
751.417 0 L
751.417 -1000 L
f
501.417 -1000 m
498.5825 -1000 L
498.5825 0 L
501.417 0 L
501.417 -1000 L
f
251.4175 -1000 m
248.5825 -1000 L
248.5825 0 L
251.4175 0 L
251.4175 -1000 L
f
1000 -751.417 m
0 -751.417 L
0 -748.583 L
1000 -748.583 L
1000 -751.417 L
f
1000 -501.418 m
0 -501.417 L
0 -498.5825 L
1000 -498.583 L
1000 -501.418 L
f
1000 -251.418 m
0 -251.4175 L
0 -248.5825 L
1000 -248.583 L
1000 -251.418 L
f
U
1 Ap
751.417 -748.583 m
1000 -748.583 L
1000 -1000 L
751.417 -1000 L
751.417 -748.583 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 153 51 0 0 50 Lb
(icons) Ln
0 A
*u
0 Ap
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
0 J 0 j 1 w 10 M []0 d0 XR
792.1699 -921.1846 m
791.6152 -921.1846 791.0781 -921.0586 790.5879 -920.8164 C
852.2344 -874.8496 L
872.9688 -890.9102 L
874.0684 -891.7607 875.5215 -892.2305 877.0625 -892.2305 c
878.6055 -892.2305 880.0586 -891.7607 881.1563 -890.9102 C
901.8926 -874.8496 L
963.5391 -920.8164 L
963.0469 -921.0586 962.5098 -921.1846 961.9551 -921.1846 C
792.1699 -921.1846 L
f
906.1484 -871.5527 m
965.373 -825.6787 965.5977 -825.5088 V
965.5977 -915.8799 L
906.1484 -871.5527 L
f
788.5293 -825.5088 m
788.7656 -825.6904 847.9785 -871.5527 Y
788.5293 -915.8799 L
788.5293 -825.5088 L
f
877.0625 -883.6094 m
875.8711 -883.6094 874.7656 -883.2773 873.9492 -882.6738 C
790.5059 -821.1504 L
791.0176 -820.8848 791.584 -820.7451 792.1699 -820.7451 C
961.9551 -820.7451 L
962.543 -820.7451 963.1094 -820.8857 963.623 -821.1533 C
880.1777 -882.6738 L
879.3613 -883.2773 878.2559 -883.6094 877.0625 -883.6094 C
f
*U
*u
1 D
0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa
375.207 -789.8281 m
330.3965 -789.8281 294.0703 -826.1553 294.0703 -870.9648 c
294.0703 -915.7744 330.3965 -952.1016 375.207 -952.1016 c
420.0166 -952.1016 456.3438 -915.7744 456.3438 -870.9648 c
456.3438 -826.1553 420.0166 -789.8281 375.207 -789.8281 c
f
0 D
385.2354 -838.1221 m
386.6064 -837.9941 385.8184 -836.8516 386.8047 -836.7324 C
386.7949 -836.6797 388.4727 -837.5811 388.6406 -837.6104 C
388.6484 -837.9941 388.4287 -838.1045 387.998 -837.9375 C
388.0098 -838.4619 387.8975 -839.9951 388.335 -840.2598 C
387.873 -840.2139 385.7344 -842.5557 385.2119 -840.7949 C
386.9619 -841.1709 385.1826 -838.9375 385.1582 -838.752 C
385.9766 -838.6641 385.2969 -838.5303 385.2354 -838.1221 C
f
387.6963 -832.0518 m
387.9258 -831.9805 390.3184 -832.8994 390.3184 -833.2871 C
390.1523 -833.3105 390.4023 -835.2119 390.1182 -835.2627 C
390.3818 -836.1748 393.3076 -836.459 393.749 -837.7188 C
393.5586 -837.6729 393.3594 -837.625 393.1602 -837.5732 C
393.2637 -837.9355 393.9268 -838.502 394.1797 -838.8428 C
396.2959 -837.8701 394.8174 -839.543 394.7549 -840.457 C
394.9727 -840.3359 395.1953 -840.3105 395.415 -840.3838 C
395.3818 -841.0244 393.9561 -841.1846 393.5889 -841.2314 c
392.458 -841.3662 391.2109 -842.3213 389.9834 -842.8955 C
389.5762 -841.126 392.2676 -840.9951 391.8799 -840.2861 C
391.2002 -840.4639 390.5498 -840.7607 389.7744 -840.8926 C
389.6582 -840.3555 391.0859 -839.0889 389.6152 -839.4092 C
389.3096 -838.2305 390.3486 -838.4268 391.0625 -838.3281 C
391.0625 -838.4209 391.0859 -837.2139 390.8232 -837.2461 C
390.9277 -837.5957 389.5107 -836.8711 390.4844 -836.7422 C
390.3184 -836.0889 388.8379 -837.7666 388.7471 -836.6572 C
388.7168 -836.4199 388.9863 -835.502 388.4512 -835.4326 C
388.5576 -835.6484 388.4189 -835.7168 388.04 -835.6377 C
388.5254 -835.71 387.3721 -833.792 387.3936 -833.7598 C
387.582 -833.2383 387.8975 -832.835 387.6963 -832.0518 C
f
361.1123 -912.0918 m
359.0029 -913.9775 356.5518 -914.1855 357.2637 -917.126 c
357.5264 -918.1943 357.1387 -920.2178 356.6016 -921.3115 c
356.4463 -921.6387 353.918 -924.5781 353.626 -923.957 c
353.0605 -923.9551 350.9072 -924.5332 350.6572 -924.3945 c
350.6475 -924.3525 347.5322 -925.7119 347.7744 -925.7529 C
349.5127 -927.2832 347.5088 -929.4443 347.1133 -929.1572 c
346.0732 -928.3955 345.8643 -930.8467 345.708 -930.8281 C
345.8926 -931.3164 342.8174 -931.5322 341.3477 -930.458 C
341.959 -931.3955 342.8047 -932.835 343.3887 -932.9277 C
343.9971 -934.6543 339.1836 -933.3555 339.3096 -933.3799 C
339.7725 -933.6133 340.0332 -934.4004 340.252 -934.8535 C
339.9824 -934.834 339.9209 -934.8936 340.0547 -935.04 C
339.5166 -935.1133 338.7236 -934.1895 338.2305 -934.4189 C
338.3047 -934.498 338.3047 -934.5176 338.2305 -934.4844 C
338.3643 -934.6406 339.793 -935.7949 339.6348 -935.541 c
339.8867 -935.5967 340.0547 -935.7666 340.1162 -936.041 C
339.7822 -935.8867 339.5088 -935.8691 339.6973 -935.9902 C
338.9658 -935.8867 339.7402 -936.9766 339.9209 -937.209 C
338.9541 -936.9307 339.6045 -937.2979 338.8818 -937.3574 C
338.8477 -937.7969 341.1865 -939.0869 341.4043 -939.1484 C
340.6855 -939.0605 340.9805 -939.2568 341.2188 -939.9082 C
340.126 -940.1895 340.999 -939.7822 340.4082 -939.6045 C
340.5596 -940.2451 341.3467 -940.5781 341.9814 -940.9854 c
342.0049 -940.9883 342.041 -940.9932 342.0908 -940.998 c
341.9961 -940.9688 345.3008 -942.459 345.4766 -942.8438 C
345.1377 -942.6768 344.7842 -942.5645 344.418 -942.4863 C
344.5225 -942.543 344.625 -942.5947 344.7207 -942.6504 C
343.7754 -942.6045 341.9443 -941.9521 341.2852 -941.501 c
341.4688 -941.5137 340.126 -940.8965 338.9404 -940.0518 c
339.9297 -940.335 338.5039 -939.8262 338.2363 -939.6689 C
338.3047 -939.6973 338.3047 -939.6963 338.248 -939.6582 C
339.1836 -940.0898 337.9473 -939.54 338.5938 -939.7402 C
337.2871 -938.7275 336.9648 -938.5645 335.6748 -937.2871 c
335.5645 -937.2666 335.6211 -937.2598 335.6357 -937.248 c
335.6299 -937.2422 335.625 -937.2373 335.6182 -937.2305 C
335.6416 -937.2383 335.6416 -937.2432 335.6357 -937.248 c
335.6504 -937.2627 335.6611 -937.2725 335.6748 -937.2871 c
335.7168 -937.2939 335.7773 -937.3027 335.8789 -937.3154 C
335.7236 -937.0693 334.7285 -936.4023 334.4326 -936.3066 c
334.3936 -936.2627 334.2568 -936.8652 333.9404 -935.915 C
334.6963 -936.0098 334.707 -936.3428 335.2324 -936.4414 C
334.7783 -935.9551 334.5918 -935.7031 334.1602 -935.25 c
334.3936 -935.3076 334.3369 -935.2412 334.0059 -935.0723 c
334.2236 -935.1641 332 -932.2148 331.4668 -931.5439 c
329.6406 -929.2559 330.1563 -926.7861 328.1631 -923.6299 c
328.1211 -923.6162 324.9824 -915.6563 323.875 -914.2129 c
321.6807 -911.3545 320.4844 -909.0273 319.1016 -905.999 c
317.626 -902.7852 315.3389 -899.8428 315.0635 -896.2031 C
315.3281 -896.3193 314.666 -895.9248 315.3604 -896.2656 C
315.2734 -894.7744 314.707 -894.3457 315.0352 -892.7393 c
315.1689 -892.0898 315.1387 -890.9619 316.0381 -891.3389 c
316.0293 -890.1309 316.8047 -889.9961 316.9414 -888.29 c
317.0625 -886.6816 317.0352 -885.71 316.6094 -884.6514 c
316.2725 -884.4063 315.9502 -884.0459 315.6475 -883.6074 c
315.1367 -885.0596 313.0205 -882.8438 312.7266 -881.9902 c
312.7178 -882.0352 310.9336 -879.8711 311.3516 -878.8838 c
310.8057 -878.5898 310.3359 -875.9785 310.6709 -875.4863 c
308.5508 -874.4063 307.8076 -872.2168 306.8633 -869.9199 c
306.6309 -869.3477 305.6807 -868.9346 305.1123 -868.1465 c
303.8545 -866.416 303.3711 -864.2451 303.1934 -862.1543 c
302.9736 -859.3984 303.2773 -856.6123 303.749 -853.9033 c
303.9268 -852.9121 305.2266 -849.5137 304.9053 -848.7588 c
305.584 -847.2588 305.9297 -845.5059 305.7852 -844.5088 C
304.0664 -848.0332 304.0947 -852.0195 302.8574 -855.6934 C
301.9551 -854.2207 303.3936 -849.9268 303.9707 -848.4307 c
304.2305 -849.1631 305.4473 -844.3145 305.626 -843.5859 c
306.3818 -840.5215 308.1338 -837.1338 309.0537 -835.1895 c
309.458 -834.3633 311.0801 -832.4336 311.1025 -831.8398 c
312.0752 -830.2285 313.5225 -828.6943 314.7607 -827.2021 c
314.751 -827.2256 316.3555 -824.2051 316.0098 -826.2939 c
316.0176 -825.9473 318.6221 -822.3994 318.6299 -822.3896 c
318.8623 -821.2207 320.3604 -821.207 320.7383 -819.9199 C
320.3809 -820.2373 320.7803 -819.8789 320.5898 -820.0488 C
321.0938 -818.2607 320.833 -821.3701 321.543 -819.124 C
321.4824 -819.1875 321.4727 -819.1816 321.5146 -819.0947 C
321.1172 -819.3291 322.2676 -818.5996 321.21 -819.2744 C
322.1074 -818.3564 324.1133 -816.5752 323.5908 -816.998 c
323.5947 -816.9902 322.9463 -817.4883 322.9473 -817.4873 c
323.332 -817.1797 324.1338 -816.6816 324.3672 -816.2412 c
324.3057 -816.3389 324.2197 -816.377 324.1152 -816.3662 C
325.2783 -815.46 327.4053 -814.1602 328.1113 -812.8789 C
327.8477 -813.0566 327.6455 -813.1953 327.4941 -813.3027 C
327.29 -813.5449 326.6924 -813.8701 327.4941 -813.3027 C
327.543 -813.2461 327.5693 -813.1934 327.5498 -813.1582 C
327.1367 -813.5439 326.5547 -814.0879 326.3799 -814.1377 C
326.832 -813.7744 326.8799 -813.6963 326.5244 -813.9053 C
327.9932 -812.54 329.5674 -811.3271 331.0156 -809.9346 c
331.0049 -809.9463 330.9893 -809.9629 330.9785 -809.9746 C
331.1387 -809.4971 332.4805 -808.8105 332.8926 -808.4531 c
332.875 -808.4727 332.8574 -808.4922 332.8389 -808.5117 c
333.3115 -808.1846 333.1865 -808.208 333.6689 -807.8535 C
330.4502 -809.6855 334.0488 -807.6553 332.4414 -808.5889 c
332.9336 -808.3496 331.4561 -809.0811 331.3193 -809.2207 C
331.7529 -808.7803 333.0195 -807.9678 332.6016 -808.4043 c
332.5293 -808.4512 332.4551 -808.4863 332.6553 -808.3555 C
332.6387 -808.3545 332.5713 -808.3789 332.3994 -808.459 C
333.0049 -808.0801 333.5684 -807.7109 334.1924 -807.3516 c
334.0967 -807.4209 334.0967 -807.4219 334.1924 -807.3682 C
334.6455 -806.999 333.4063 -807.6943 332.6533 -808.1943 C
336.5439 -805.5371 341.1025 -803.0576 345.0762 -801.5029 c
345.0293 -801.5244 345.0078 -801.5352 345 -801.54 C
345.5078 -801.2861 344.9775 -801.5449 345.0566 -801.5215 c
345.0361 -801.5264 345.0176 -801.5342 345 -801.5449 c
345.001 -801.5469 344.9961 -801.5488 345.0039 -801.5498 C
345.002 -801.5469 345 -801.5449 344.9971 -801.543 c
344.9092 -801.585 344.7881 -801.6436 344.625 -801.7227 C
345.4121 -801.4814 343.0986 -802.4883 342.8633 -802.5967 c
344.4453 -801.9375 345.8506 -801.2197 347.6172 -800.6387 c
347.3877 -800.7549 347.1563 -800.8672 346.9229 -800.9756 c
346.9844 -800.9561 346.9844 -800.9561 346.9229 -800.9902 C
347.0078 -800.9521 346.9844 -800.9756 346.8398 -801.0557 C
347.1816 -800.9473 347.8135 -800.7363 348.1416 -800.8057 C
347.8564 -800.9316 347.8135 -800.9639 348.0156 -800.9131 C
347.9199 -800.9902 347.9424 -801.0039 348.0664 -800.9668 C
347.9482 -800.9922 347.8467 -801.0508 347.7617 -801.1416 c
347.8945 -801.1387 348.416 -800.9551 348.0254 -801.1758 c
347.8682 -801.2227 345.4072 -801.54 347.1445 -801.54 c
347.1406 -801.5557 347.1514 -801.5771 347.2695 -801.5586 C
346.2822 -802.2002 344.7207 -802.749 343.6914 -803.7725 C
343.7236 -803.8105 343.3818 -803.9609 343.8301 -803.8418 C
342.6875 -804.3457 340.9268 -805.1426 340.2422 -806.2451 C
340.6182 -806.1279 340.9678 -805.96 341.291 -805.7422 c
341.1758 -805.7773 341.0967 -805.8477 341.0508 -805.9512 c
341.3555 -805.8242 341.6475 -805.7891 342.0059 -805.6602 C
341.8213 -806.0371 340.873 -806.4717 340.334 -806.6211 C
341.3721 -806.3721 342.0654 -806.4561 343.3818 -806.0771 c
340.9639 -807.0205 341.0215 -808.3789 339.4883 -810.1807 c
339.6045 -810.0078 339.751 -809.9707 339.9209 -810.0723 C
339.4883 -810.3955 338.3467 -810.7461 338.0527 -811.2695 C
338.2363 -811.4453 338.5137 -811.9043 339.0264 -811.6133 C
339.1035 -811.792 337.3809 -813.1914 337.2441 -813.3486 C
337.6963 -813.0576 340.4434 -811.9961 340.4541 -811.8906 C
339.751 -812.2793 339.9209 -811.8818 339.3613 -812.0801 C
339.4775 -811.9873 339.4668 -811.9443 339.3213 -811.958 C
339.8467 -811.3428 340.6328 -811.8818 340.8643 -811.7539 C
340.5986 -812.2881 339.9854 -812.835 339.7881 -812.9219 c
339.9365 -812.9727 340.1855 -813.1084 340.084 -813.0947 C
339.7725 -813.293 339.8232 -813.5723 339.7109 -813.9023 C
339.6377 -813.9189 341.9961 -814.2432 341.5508 -813.6514 C
341.0137 -814.4619 341.0557 -814.6387 341.6787 -814.1816 c
341.0859 -814.2939 340.1455 -815.1943 340.0771 -815.8066 c
340.9912 -815.8066 343.1748 -813.959 342.71 -814.3369 C
342.835 -814.2363 344.7676 -813.5957 344.7207 -813.4385 c
344.4805 -813.5244 344.2295 -813.5547 343.9668 -813.5205 C
344.1445 -813.3203 344.3096 -812.957 344.4287 -812.8271 c
344.25 -812.9609 344.0713 -813.0576 343.8604 -813.123 C
344.1113 -812.9893 344.0938 -812.9609 343.7754 -813.0557 C
346.127 -811.5117 348.9707 -809.9805 350.9932 -809.4072 C
350.1738 -809.8867 342.6973 -814.6465 343.3594 -815.6875 C
343.8516 -815.3086 344.6816 -814.4668 345.3916 -814.6699 C
344.625 -815.9766 343.1387 -815.7002 342.8018 -817.2021 C
342.9307 -817.1924 342.9404 -817.2256 342.833 -817.3223 C
344.501 -818.1572 346.3047 -814.002 347.627 -815.0908 C
347.2012 -815.3711 346.124 -816.7197 345.748 -817.4258 c
345.2373 -818.3838 343.585 -818.1426 342.9932 -818.8535 c
342.9932 -818.4424 343.1602 -818.3145 343.1387 -818.0313 C
343.0439 -818.1064 342.7061 -819.1055 342.3525 -818.9648 C
342.2451 -818.7354 342.2451 -818.5059 342.3721 -818.2813 C
341.9541 -818.2813 341.1055 -819.3594 340.8008 -819.1836 C
341.3447 -818.6758 340.4434 -818.5723 340.5693 -818.1055 C
340.2754 -818.2529 339.9668 -818.3623 339.6455 -818.4346 C
340.8555 -819.6553 340.2568 -819.1611 339.0479 -820.0107 c
339.1035 -819.8623 339.0156 -819.5654 339.0264 -819.5527 C
336.9512 -818.3271 329.5771 -824.377 331.3213 -826.3281 c
332.0801 -827.1768 331.8916 -829.4639 332.4521 -830.6592 c
333.0254 -831.8818 332.1963 -834.3291 331.0771 -835.4404 c
332.5107 -836.2656 336.834 -830.9004 337.1641 -830.0176 c
337.2861 -829.6924 339.0664 -826.2637 339.3828 -826.5781 C
339.917 -825.9053 340.3828 -825.1885 340.9561 -824.5449 c
342.2109 -823.1357 342.3545 -825.0381 343.7568 -824.1934 c
344.2656 -824.9814 344.3105 -825.7617 343.8916 -826.5342 C
344.1758 -826.5557 344.459 -826.5771 344.7422 -826.5986 c
342.6133 -825.8867 343.8203 -830.1035 Y
344.3945 -829.8887 346.3145 -827.6367 346.9023 -828.0303 C
346.127 -829.0605 346.3447 -829.8105 345.9375 -830.6895 C
346.1348 -830.6992 346.3145 -830.7656 346.4834 -830.875 C
345.0479 -832.2861 345.9561 -834.498 346.7881 -835.9414 c
347.0176 -835.9063 347.248 -835.8594 347.4912 -835.8096 C
347.333 -836.0684 347.4033 -836.2285 347.6895 -836.2969 C
347.4736 -836.8076 344.7432 -836.9707 344.8359 -837.3223 c
345.0215 -838 352.8379 -837.3184 344.8887 -839.9473 c
343.1416 -840.5254 341.5 -839.6914 339.8975 -839.9316 c
337.626 -840.2725 335.9766 -841.6309 334.0674 -842.8281 c
335.2871 -843.2461 337.7695 -840.8809 339.04 -840.6182 c
342.085 -839.9883 338.0967 -842.9727 338.125 -842.9063 c
338.3975 -842.9785 338.6699 -843.0498 338.9424 -843.1221 C
338.8496 -842.8359 338.7119 -845.5938 338.7236 -845.5713 c
339.2773 -845.7334 339.8467 -845.8027 340.4307 -845.7773 C
339.54 -847.5684 340.4961 -845.5508 340.4229 -846.5176 C
339.4609 -846.2988 336.9922 -848.4111 336.375 -848.0391 c
334.3418 -846.8115 338.9355 -845.999 338.9219 -846.0361 c
338.4482 -845.9033 336.9473 -846.0342 337.0859 -845.3613 c
336.0479 -846.166 331.5078 -846.5098 332.2314 -848.6953 C
330.6738 -848.2021 329.7197 -848.7617 328.6406 -849.8203 C
328.2773 -850.4092 327.8076 -850.5674 327.2295 -850.2959 C
326.8955 -850.9697 327.1104 -851.959 326.1064 -852.1221 c
326.332 -851.5547 325.8838 -851.542 325.7754 -851.8486 C
325.8545 -851.625 326.3408 -849.7012 326.1475 -849.8516 c
325.6055 -850.2764 324.2861 -854.2852 325.1504 -854.6025 c
324.8379 -855.4414 324.6582 -854.25 324.4717 -854.3242 C
324.2354 -854.6465 324.0537 -854.9971 323.9258 -855.375 c
323.2139 -855.1074 320.6738 -856.957 319.9727 -857.2539 c
319.9092 -859.1543 319.457 -862.9775 317.8848 -864.6563 C
318.083 -863.877 317.626 -861.0391 317.3604 -861.2197 c
317.3105 -860.9326 315.9141 -855.1611 315.3086 -856.8291 c
315.2314 -856.6416 315.1689 -856.4561 315.1289 -856.2637 C
314.9844 -856.6514 314.3516 -856.0508 313.8164 -856.1045 C
314.2764 -856.3623 314.1318 -857.3242 313.8994 -857.6406 C
313.6807 -857.2354 313.5146 -856.8164 313.3857 -856.3828 c
313.1113 -857.1172 311.1025 -855.2031 310.8701 -854.7236 C
310.5146 -855.6904 309.6729 -855.2637 309.1279 -855.5049 c
308.3008 -855.8633 307.8281 -858.5557 307.5859 -859.2803 c
306.9248 -861.2764 306.2354 -862.624 306.4551 -864.5723 c
306.5811 -865.7441 306.959 -867.4434 308.0811 -868.0918 c
308.2285 -867.4053 308.8145 -868.0615 308.8984 -868.335 C
308.9297 -868.1514 310.9971 -866.0996 310.9736 -866.168 C
312.0664 -866.8984 312.7061 -865.8633 312.2959 -867.5439 C
312.168 -867.4727 311.2891 -869.9238 311.2666 -870.1689 c
310.3984 -869.6748 310.3662 -872.5879 311.1025 -873.0879 c
312.6953 -874.168 313.6885 -874.3125 313.4092 -876.2617 c
312.8105 -875.9463 313.8936 -881.0615 315.6475 -883.6074 C
315.6982 -883.4648 315.7383 -883.2988 315.7539 -883.0791 C
316.1445 -883.6689 316.4141 -884.168 316.6094 -884.6514 C
317.3359 -885.1797 318.1309 -885.168 318.9434 -884.1924 c
319.8574 -883.0996 318.9023 -883.1289 320.3408 -882.6357 c
320.916 -882.8721 321.21 -882.8203 321.2227 -882.4883 c
321.3232 -882.5283 321.5557 -882.5664 321.5664 -882.46 C
322.0391 -882.6191 323.6963 -881.4023 321.9883 -883.1592 c
322.3926 -883.3086 321.8271 -885.9102 322.4063 -885.5674 c
324.082 -884.5479 327.0723 -885.4307 327.4697 -885.5674 c
328.0811 -885.7676 330.0703 -886.0313 329.6729 -885.9141 c
330.418 -886.0977 331.6963 -887.0449 331.7285 -887.3779 C
333.4199 -887.7354 331.0186 -888.7461 330.7041 -888.7988 C
331.9502 -889.0977 335.3281 -888.8438 334.3936 -891.4746 c
334.3994 -890.9893 338.0527 -893.5391 338.0723 -892.3838 c
338.8711 -892.7676 339.3955 -892.8018 340.0986 -893.6123 c
340.8828 -894.5283 342.1836 -894.9883 342.6729 -896.1689 c
342.7373 -896.3125 342.875 -898.0215 343.21 -898.0723 c
343.21 -898.4424 343.7881 -898.5156 343.1602 -899.4121 C
343.5156 -899.4795 343.4521 -899.0176 343.9766 -899.2031 C
343.9229 -899.6914 343.7568 -899.8027 343.4941 -899.54 C
343.6123 -899.7656 343.7236 -899.9824 343.8604 -900.1982 C
342.9824 -900.0723 342.9932 -900.208 342.2568 -900.0928 C
342.2666 -900.2314 342.2275 -900.4199 342.1016 -900.4063 C
342.1641 -901.8906 342.6348 -901.1328 342.6348 -901.2188 c
343.2529 -901.3135 343.2012 -902.3076 343.9375 -902.4102 c
343.9229 -902.2041 345.6035 -902.1133 345.877 -902.1318 c
345.8135 -900.3574 348.8535 -902.5752 349.3887 -902.9668 c
350.8555 -904.0498 349.8799 -903.7803 351.5791 -903.9688 c
351.6221 -904.7285 364.9512 -908.6221 361.1123 -912.0918 c
359.0029 -913.9775 364.9512 -908.6221 361.1123 -912.0918 c
f
374.5488 -810.2549 m
374.7139 -810.6895 375.0088 -811.0332 375.4365 -811.2734 C
375.0811 -811.2988 373.9707 -811.084 374.5361 -811.9502 C
374.6201 -811.751 374.8818 -813.5313 375.4688 -813.7539 C
375.1436 -814.3662 374.7461 -814.3584 374.293 -813.7158 C
374.126 -814.4395 374.3662 -814.707 375.0088 -814.5049 C
374.9785 -814.5088 372.6045 -815.626 372.2393 -815.6758 C
372.7646 -815.748 375.5479 -817.8789 373.8027 -818.2529 C
373.4395 -818.0811 373.0762 -817.9102 372.7129 -817.7383 c
372.4482 -818.165 372.3867 -818.6084 372.5264 -819.0684 C
373.7441 -819.4053 373.4971 -819.6885 373.7168 -819.8018 c
371.0488 -822.5488 363.3096 -823.3008 362.6738 -827.4609 C
362.7793 -826.8555 360.1426 -830.4492 359.6855 -830.835 c
359.5459 -830.9658 355.3486 -827.2676 356.3848 -825.959 c
356.3828 -825.4658 356.6484 -825.207 357.1816 -825.1826 C
356.5576 -824.6416 356.9844 -821.252 358.626 -821.332 C
358.4316 -821.3203 357.373 -821.0527 357.5264 -820.9424 c
360.6543 -818.6992 359.6387 -819.3896 357.8281 -817.8643 C
358.3984 -818.3486 361.2354 -817.7285 360.9326 -816.627 C
360.5566 -815.9717 360.0811 -815.8652 359.5088 -816.3086 c
361.3965 -813.3887 362.9053 -810.8545 358.751 -810.3848 c
359.1514 -810.043 358.9209 -809.2256 359.7393 -809.1191 C
359.6641 -809.165 361.1943 -809.207 361.4561 -809.1201 C
360.7119 -809.1279 360.3936 -808.8623 360.499 -808.3242 C
361.0615 -807.8447 364.5156 -807.6563 364.4785 -806.793 C
364.04 -806.584 363.7363 -806.2432 363.5654 -805.7715 C
363.6045 -806.4492 368.2354 -805.085 368.5254 -805.1475 c
368.3848 -805.3359 368.2207 -805.5039 368.0342 -805.6514 c
368.1143 -805.6318 368.2109 -805.6191 368.3457 -805.624 C
368.3457 -805.7607 368.3174 -805.8516 368.3701 -806.0313 C
368.3672 -806.0186 370.1104 -804.2852 369.0566 -805.2734 c
368.9893 -805.6797 369.5205 -806.3516 369.5117 -806.3408 C
368.3633 -805.3164 373.1221 -804.0684 373.2041 -804.0381 c
373.2881 -804.0938 373.2256 -804.2686 373.1084 -804.4678 C
373.3955 -804.8047 373.6836 -805.1426 373.9707 -805.4795 C
373.3008 -805.3145 372.7441 -805.502 372.3008 -806.042 c
372.5029 -805.9697 372.9717 -805.917 373.8848 -805.9033 C
373.9111 -806.1504 372.0059 -806.3711 372.3008 -806.042 c
371.9443 -806.1709 376.0479 -806.4883 375.835 -806.1807 c
373.8672 -806.3291 374.8721 -809.7891 374.5488 -810.2549 C
374.7139 -810.6895 374.8721 -809.7891 374.5488 -810.2549 C
f
445.2881 -899.9482 m
445.2705 -899.9863 445.2383 -900.0313 445.167 -900.0928 c
445.2188 -900.0488 445.25 -899.9971 445.2881 -899.9482 C
445.3672 -899.7734 445 -899.8047 445.0605 -899.8115 C
443.707 -901.5566 443.0898 -906.1133 441.8896 -908.5439 c
441.7998 -908.7158 439.7002 -911.7998 439.5947 -911.0996 C
439.2393 -911.3545 439.5947 -910.4385 439.4688 -910.5293 C
439.7627 -909.7871 439.3535 -908.2529 440.4648 -907.4893 C
440.4873 -907.4141 441.4531 -904.6982 441.3779 -904.751 C
441.7998 -903.5898 443.5088 -901.7305 443.6436 -901.1152 C
444.4414 -900.4893 445.167 -897.791 445.417 -896.8887 C
445.332 -897.3691 445.6367 -897.4355 445.585 -898.0967 C
445.2559 -898.375 445.7451 -899.3486 445.2881 -899.9482 C
f
448.0264 -849.6924 m
447.9863 -850.1201 447.9639 -852.1172 447.5225 -849.9629 C
447.3252 -850.5615 446.9043 -850.0742 446.5898 -849.4248 C
446.0449 -850.8525 445.0605 -851.3281 444.126 -852.5254 C
443.9375 -852.165 443.4648 -851.9297 443.2969 -851.5684 C
442.9004 -852.0654 442.249 -855.0107 441.1484 -852.5205 C
441.002 -852.6602 439.6465 -850.3574 438.7998 -851.0391 c
437.8877 -851.7695 441.126 -855.5488 441.7764 -855.7998 C
441.7295 -855.4697 441.7227 -855.1299 441.7607 -854.793 c
441.751 -854.7471 441.751 -854.7139 441.7656 -854.7002 C
441.7617 -854.7305 441.7637 -854.7617 441.7607 -854.793 c
441.8271 -855.1084 442.4004 -856.0723 442.5098 -856.2354 C
443.4258 -855.0352 443.7285 -854.5361 443.5918 -852.6191 C
444.2607 -854.252 444.7949 -853.8271 445.585 -854.4805 c
445.8457 -854.1289 446.7168 -857.627 446.7266 -857.7539 c
446.7793 -859.1406 446.5283 -860.5371 446.1719 -861.8643 c
445.292 -865.0557 443.3604 -868.8672 441.3281 -870.2529 C
440.0771 -866.5605 437.458 -865.4053 436.3662 -862.0322 c
436.2109 -862.1201 431.876 -858.1104 431.8447 -858.002 C
429.7607 -859.0967 433.8691 -862.3506 434.3213 -863.3271 c
435.6338 -862.624 436.7637 -867.8838 437.498 -868.0781 c
438.2637 -868.2793 438.3262 -868.1113 438.5381 -868.9922 c
437.4453 -869.6484 440.9268 -870.9326 440.96 -870.9639 c
441.4961 -871.4277 442.8164 -874.1963 442.9824 -874.0762 C
444.1055 -874.2207 444.8613 -870.3545 446.2539 -870.4512 C
444.5449 -872.0566 444.2188 -876.1133 443.7617 -878.2344 c
442.8682 -882.3223 442.1553 -886.4414 441.4824 -890.5645 c
441.3584 -891.4033 441.002 -896.8887 440.6133 -897.1221 c
440.3945 -898.9063 441.2529 -900.2363 440.3398 -902.2861 c
438.8096 -905.7148 436.0605 -907.7471 435.0322 -911.3633 c
434.834 -911.4795 434.0186 -914.4092 433.041 -915.2559 c
431.2998 -916.7598 431.207 -918.6465 429.7686 -920.3574 c
428.1338 -922.3096 425.8369 -923.5459 423.6563 -924.7764 c
421.8818 -925.7822 419.5967 -926.7266 418.0664 -927.3691 C
419.0117 -925.0283 419.042 -924.4443 417.6592 -922.6133 c
417.6875 -922.4736 417.4473 -921.3682 417.625 -921.3125 c
418.7158 -916.96 414.9199 -915.3721 417.5635 -910.9951 c
420.3936 -906.3145 418.4883 -902.3506 414.374 -899.4072 C
414.5752 -899.4277 414.7207 -899.3486 414.7949 -899.1758 C
414.5654 -899.2373 414.0518 -898.749 413.8496 -898.7969 C
413.7783 -896.5977 415.666 -894.999 414.7627 -892.626 C
414.1738 -892.7617 413.7861 -893.2256 413.8916 -892.3457 c
413.4834 -892.4492 413.2744 -892.6992 412.9688 -892.7617 c
412.9912 -893.0029 408.7441 -893.666 410.2227 -892.4619 c
409.9707 -891.4727 408.0508 -891.6426 407.3809 -891.7744 C
407.4102 -891.6807 407.4639 -891.5996 407.5488 -891.5342 C
406.6445 -891.7285 405.5117 -893.0137 404.7676 -893.0068 c
404.7373 -892.2852 404.665 -892.6221 403.7207 -892.6299 c
404.6113 -893.0498 399.4326 -895.085 398.2793 -894.8574 c
397.0723 -894.6191 394.0928 -896.3652 393.2793 -896.0059 c
393.2793 -896.1836 387.0869 -892.0244 386.1982 -890.873 c
385.8184 -890.3848 384.1943 -889.0996 384.1738 -888.5156 c
382.7363 -888.6689 382.6455 -886.4189 381.8135 -885.5322 c
385.2529 -885.2324 380.2734 -875.6807 383.1357 -875.5342 c
383.0195 -873.9873 387.7578 -868.418 389.0283 -867.6602 c
390.2646 -866.915 388.377 -865.9727 389.4355 -864.8135 c
389.5107 -864.5723 391.3232 -862.2246 391.3887 -862.6768 c
391.7637 -862.6348 392.4268 -861.7129 392.416 -861.3975 c
392.3623 -858.9434 393.8105 -860.7051 394.7871 -860.2734 c
394.9111 -860.9668 401.2998 -857.2852 402.1279 -857.3477 c
403.9854 -857.4902 407.1494 -855.8809 409.4033 -855.709 C
409.4883 -856 409.7832 -857.3975 409.9824 -857.3867 c
410.5684 -858.4404 409.6689 -858.0938 409.8867 -858.9482 C
409.4473 -859.0547 414.8271 -860.1416 414.8564 -860.167 c
415.7598 -861.1328 416.7686 -860.667 417.8369 -860.9688 c
418.8535 -861.2578 421.0244 -860.2676 419.4932 -859.3125 c
417.5342 -858.0898 422.6494 -857.5566 422.7754 -857.5234 c
423.0566 -859.0801 429.709 -855.707 429.7168 -855.6934 C
430.5996 -853.3359 430.0195 -850.4873 428.6885 -848.6035 C
427.6016 -849.1904 426.0586 -850.6914 424.5801 -851.3486 C
424.4854 -850.6133 422.124 -851.46 421.7471 -849.7578 c
422.4619 -849.8701 421.7266 -848.1699 421.0449 -848.7734 C
420.71 -848.0557 422.124 -846.1885 422.7432 -846.1367 c
421.1689 -845.5508 424.6953 -844.1709 425.29 -843.252 c
425.7119 -843.8701 427.7148 -843.3936 428.2061 -842.9424 c
430.6826 -840.6494 424.5908 -839.2373 424.3174 -839.625 c
423.8359 -838.8174 425.0293 -838.5742 423.8242 -837.8887 c
424.0215 -837.6387 424.3174 -836.9063 424.3174 -836.5986 c
424.3174 -836.9023 422.5977 -838.9395 422.0078 -839.0889 C
423.2041 -840.9189 425.3145 -838.2246 422.9971 -841.3848 C
422.5977 -840.9326 422.5684 -840.3076 421.8633 -840.6592 C
421.8301 -840.2441 421.9961 -839.9424 422.3672 -839.7451 C
421.6748 -838.8311 421.1611 -840.6074 420.5938 -839.7041 C
420.9268 -839.5488 420.9395 -839.4844 420.4902 -839.2373 C
420.5615 -839.3691 420.0586 -842.0645 420.2266 -842.6367 c
420.9492 -845.2383 422.8271 -845.7246 420.6455 -847.9121 C
420.4561 -847.542 418.7695 -847.1113 418.4541 -847.6758 c
418.2949 -847.9727 419.0938 -848.1875 419.1699 -848.332 C
419.0518 -848.3496 418.5605 -848.6758 418.8643 -848.8887 C
418.5166 -848.8096 418.2324 -848.6455 417.9922 -848.3955 C
418.3389 -848.8975 418.5889 -849.3311 419.0938 -849.8857 C
418.9268 -849.8877 418.7695 -849.874 418.6104 -849.8496 C
418.6729 -849.9844 418.793 -850.4063 418.8047 -850.4854 C
418.7578 -850.3164 420.2871 -850.3486 420.8047 -850.9043 C
420.7412 -850.915 420.7295 -850.9443 420.7715 -850.9922 C
420.2383 -850.8184 419.7012 -850.6533 419.1553 -850.5098 C
419.5869 -850.8047 419.9766 -851.1436 420.332 -851.5234 C
419.8604 -851.502 419.9658 -851.3672 419.5771 -851.5117 C
419.6914 -851.7109 419.8604 -851.8408 420.0811 -851.9121 C
419.752 -852.0273 418.9688 -853.0654 418.874 -852.8428 C
417.124 -852.8545 418.7998 -851.5518 419.2715 -851.4102 C
417.5977 -851.9932 415.3633 -849.25 414.9121 -848.1875 c
414.5527 -848.3115 412.2236 -846.29 411.293 -846.9258 c
411.418 -847.2354 408.9199 -845.1973 408.9102 -845.1924 C
409.0156 -845.751 408.7031 -845.8486 408.8252 -846.1719 C
408.8477 -846.2402 408.0713 -845.0059 408.0508 -844.9482 C
408.1367 -845.1416 407.1826 -845.5195 407.1084 -845.5391 C
407.4541 -846.3926 408.335 -847.1943 408.9941 -847.7949 c
410.2422 -848.9189 413.8076 -848.9912 414.418 -850.5313 C
413.6924 -850.7666 412.8252 -850.4189 412.7813 -850.0098 c
412.833 -850.5137 415.1416 -853.3379 413.1885 -853.5879 C
412.1738 -852.0273 413.2744 -852.2246 411.4609 -851.4902 c
410.2646 -851.0029 409.2568 -850.0957 408.25 -849.3193 c
407.3281 -848.6113 406.2686 -847.7207 405.0723 -847.543 c
403.583 -847.3213 404.9893 -848.1172 403.8789 -848.3438 c
404.1406 -849.0625 401.5498 -849.291 401.1816 -849.3164 c
399.9316 -849.4092 400.6475 -850.4453 400.585 -851.1787 c
397.6602 -851.7354 398.6016 -856.0322 396.8506 -857.6006 c
394.7236 -859.5195 391.6709 -857.7646 389.165 -858.6455 C
388.1377 -856.4082 389.1426 -854.2441 387.8867 -851.6348 C
389.1211 -851.4961 389.7617 -850.7168 391.3887 -850.6406 c
392.4863 -850.5918 394.6494 -850.9336 395.5625 -850.2871 c
396.9941 -849.2871 393.8633 -846.2813 393.3652 -846.0801 c
393.25 -846.0488 391.0127 -845.3105 391.0195 -845.3232 C
391.2393 -845.2744 391.7549 -844.8027 390.9678 -844.6689 C
391.1592 -844.6885 393.5273 -843.9648 393.5273 -843.9932 c
393.5273 -843.5342 393.4131 -843.1035 393.1699 -842.6992 C
393.6328 -842.3848 396.5693 -842.9863 395.7842 -840.6016 c
396.5889 -840.3428 397.1113 -840.1621 397.8896 -839.8906 c
397.2402 -838.0732 398.5938 -837.2607 400.0986 -837.6846 c
399.957 -837.4893 400.877 -835.7168 400.335 -835.835 c
400.0293 -835.1621 398.3408 -833.6563 398.499 -833.0479 C
398.8125 -832.9248 399.126 -832.8242 399.4434 -832.752 C
398.9375 -831.6777 398.9375 -832.9121 398.499 -832.0381 C
398.8242 -831.959 399.3799 -831.332 399.3994 -831.0088 C
399.6396 -831.4082 399.7275 -831.8213 399.4102 -832.0693 C
399.4844 -832.1406 399.5059 -832.1357 399.4717 -832.0518 C
399.7568 -832.084 400.5928 -832.6035 400.585 -832.9346 c
400.5742 -833.7021 400.335 -834.1484 400.7002 -834.6025 C
401.0967 -834.9941 401.5381 -836.2148 402.5156 -835.8213 C
402.1328 -835.3252 406.0811 -834.29 406.8281 -833.752 C
406.7598 -833.7363 406.7314 -833.7002 406.793 -833.6221 C
406.835 -833.7197 406.876 -833.7061 406.9502 -833.5723 C
406.9746 -833.6221 406.9229 -833.6836 406.8281 -833.752 C
407.0078 -833.793 407.4844 -833.6807 407.54 -833.7002 C
407.8838 -832.8369 407.0664 -832.999 407.4844 -832.1357 C
407.5576 -832.2617 407.6006 -832.3467 407.6299 -832.4121 C
407.6279 -832.3203 407.666 -832.209 407.8418 -832.1514 C
407.6553 -831.8682 406.3408 -829.457 406.625 -829.4502 C
407.002 -829.4287 407.3701 -829.918 407.7793 -829.7588 c
408.6279 -829.4375 406.5947 -827.4268 406.4473 -827.1416 c
406.1855 -826.6309 407.9375 -826.2705 407.6318 -825.8828 c
407.8613 -825.8877 408.0928 -825.8828 408.3252 -825.8613 C
408.0928 -825.3877 408.4814 -824.9502 409.0889 -824.8428 C
408.7441 -824.7871 407.1299 -824.4102 407.2764 -824.3535 C
406.7725 -823.8018 406.1328 -825.9385 405.9336 -826.0215 C
406.2256 -826.4199 405.0938 -825.8057 405.1367 -825.791 C
405.1885 -825.8291 405.1885 -825.8535 405.1367 -825.8613 c
405.3027 -826.0947 405.3564 -826.0801 405.125 -826.2529 C
404.9053 -825.9736 404.6211 -825.9629 405.1367 -825.6621 C
405.0186 -825.5156 403.7129 -824.8701 404.4531 -825.5811 C
403.1748 -826.0674 401.2549 -821.0078 401.876 -820.5537 c
400.9824 -819.5693 400.3643 -820.1553 399.5898 -819.7305 C
399.9863 -820.2471 401.0371 -824.8408 400.6182 -824.9648 c
401.3613 -826.0674 405.4717 -828.3516 402.5352 -829.0234 c
403.0195 -829.8154 403.9521 -831.3066 404.0986 -831.1172 C
404.1719 -831.2324 403.1846 -833.2686 402.7754 -833.4463 c
402.4941 -833.5762 399.7969 -830.084 399.0967 -829.6816 c
399.001 -829.6299 397.5762 -831.2568 397.5342 -831.2646 C
398.1006 -832.3057 394.8574 -829.7998 395.6143 -829.8887 c
394.9111 -829.8027 395.6143 -830.2861 395.3193 -830.3418 C
395.2109 -830.1172 394.5449 -828.2725 394.0352 -828.1777 C
394.0127 -828.2344 393.9736 -828.2783 393.8213 -828.2607 C
393.8877 -828.1875 393.96 -828.1641 394.0352 -828.1777 c
394.0781 -828.0693 394.0625 -827.917 394.623 -828.0479 C
394.2568 -827.8418 392.8301 -826.6475 394.2559 -826.4912 c
394.2402 -826.3584 394.2412 -826.2324 394.2656 -826.1318 c
394.2246 -826.2041 394.2217 -826.2002 394.2842 -826.0547 c
394.2744 -826.0762 394.2715 -826.1055 394.2656 -826.1318 C
394.3643 -825.9561 394.6914 -825.3223 394.917 -825.0723 c
394.4375 -824.502 394.6631 -824.2803 395.5957 -824.4102 c
395.6885 -824.3301 395.7842 -824.2529 395.8643 -824.1777 C
395.8896 -823.9453 395.2568 -823.2236 395.3926 -823.1865 c
395.4746 -823.3135 396.0127 -821.9678 396.1152 -821.2754 C
396.0996 -821.2539 396.085 -821.2324 396.0645 -821.207 C
396.0898 -821.2129 396.1055 -821.2188 396.125 -821.2246 C
396.1377 -821.123 396.1406 -821.0371 396.1279 -820.9766 c
396.0762 -820.7266 394.4814 -816.1943 394.6494 -816.123 C
394.5557 -816.0234 395.1113 -816.3193 395.1113 -816.29 C
395.0576 -815.9238 394.3662 -815.6816 395.2363 -815.8477 c
394.8789 -815.7803 394.9014 -815.7285 395.5723 -815.6816 c
395.2891 -815.5967 395.8545 -815.3633 y
394.7432 -814.2412 396.4502 -814.8691 397.0283 -815.2441 C
396.8506 -815.1377 396.5156 -814.0928 396.6426 -813.7598 C
396.1475 -812.5537 401.0557 -814.1777 401.5195 -814.5898 c
401.2354 -814.3662 407.1826 -815.7803 406 -816.5771 C
406.0693 -816.6367 405.9844 -816.8086 406.0791 -816.8838 C
405.2754 -817.2441 403.0908 -817.167 402.3271 -816.9082 c
403.2598 -817.7295 407.3477 -820.0947 408.4502 -819.4756 C
408.46 -818.5459 407.7891 -817.9824 406.4365 -817.7842 c
407.0469 -818.291 407.6689 -818.3447 408.3027 -817.9463 c
407.5674 -817.3555 406.9805 -816.75 406.4365 -815.9961 C
406.5039 -815.9551 406.7002 -816.0547 406.8604 -816.1543 C
406.79 -816.1035 406.7158 -816.0498 406.6045 -815.9678 C
406.9189 -816.1328 407.2461 -816.209 407.6016 -816.209 C
406.2988 -815.1973 405.3232 -814.3311 404.0039 -813.4941 C
405.4912 -812.4717 407.0127 -815.8613 407.7793 -815.2861 C
407.624 -813.8701 407.0752 -812.6826 406.1328 -811.7246 c
406.5361 -812.2422 407.001 -812.3574 407.5254 -812.0703 c
406.708 -810.8193 406.9707 -810.5264 408.3154 -811.1914 c
402.9004 -810.2285 407.3311 -808.7061 409.2061 -809.5752 c
409.1641 -809.6367 401.7051 -806.4727 401.4668 -805.4502 c
405.7861 -805.6025 404.2979 -806.2217 405.1689 -806.0293 C
405.3232 -806.0898 404.9268 -805.7217 405.1992 -805.7559 C
405.0049 -805.667 402.7109 -805.0762 402.8076 -804.6387 c
403.9785 -804.0215 405.2441 -804.3604 406.6045 -805.6563 c
406.457 -805.5205 406.2988 -805.4121 406.1211 -805.332 C
406.9805 -805.6602 406.7822 -805.3408 407.2979 -805.2129 C
405.2207 -804.4512 402.1787 -804.5977 399.7354 -802.7441 C
399.7998 -802.7607 399.9814 -802.7578 400.1318 -802.7354 C
399.8428 -802.7178 391.4863 -799.5664 391.3379 -799.3477 c
390.3848 -799.2861 393.2461 -799.3154 393.085 -799.2969 c
392.584 -798.8789 392.0283 -798.6982 391.4199 -798.7549 c
392.9092 -797.9414 401.29 -800.9131 399.5469 -800.5391 c
398.4688 -800.0371 397.3564 -799.6475 396.2109 -799.3701 c
396.2744 -799.3877 396.3359 -799.4004 396.3994 -799.417 C
396.1787 -799.2705 395.9561 -799.1982 395.7188 -799.0811 c
395.7764 -799.0889 395.8193 -799.0967 395.8701 -799.1045 C
395.457 -798.8438 394.9775 -798.6436 394.5137 -798.499 c
399.3398 -799.082 395.1729 -798.5527 395.1406 -798.5391 c
395.0703 -798.5293 395.0791 -798.5293 395.1357 -798.5361 C
395.0869 -798.5176 395.0957 -798.5156 395.1826 -798.5293 C
395.1777 -798.4844 395.1709 -798.4385 395.1631 -798.3936 c
394.4102 -798.2891 394.7236 -798.1992 393.7666 -797.8652 C
394.7012 -797.9971 393.4961 -797.7236 394.292 -797.8125 C
393.9971 -797.6904 393.6934 -797.6074 393.3799 -797.5645 c
393.9336 -797.7236 393.8438 -797.6855 393.5879 -797.6465 C
393.6396 -797.6631 393.6436 -797.665 393.5713 -797.6436 C
393.5771 -797.6445 393.582 -797.6455 393.5879 -797.6465 C
390.9219 -796.79 391.1729 -796.7432 386.542 -796.124 c
386.6328 -796.1318 386.6914 -796.1357 386.7441 -796.1396 C
386.1514 -796.0469 386.1514 -796.0469 386.7441 -796.1396 c
402.2695 -798.2979 416.7539 -805.5576 428.1357 -816.2256 C
428.1221 -816.207 428.1133 -816.1924 428.1221 -816.1895 C
428.7568 -816.7275 428.5137 -816.5635 428.3018 -816.3838 c
429.6162 -817.623 430.8994 -818.8955 432.127 -820.2227 c
442.4912 -831.4121 451.3203 -847.3389 452.4131 -862.6104 c
452.0752 -858.1582 450.3135 -854.4199 448.5195 -850 C
448.7637 -850.8633 448.9287 -851.7354 449.0234 -852.6191 C
448.3281 -851.6348 448.3096 -850.8184 448.0264 -849.6924 C
447.9863 -850.1201 448.3096 -850.8184 448.0264 -849.6924 C
f
*U
*u
1 D
427.458 -75.8223 m
397.2383 -75.6318 L
395.5957 -73.7788 393.6582 -72.249 391.5908 -70.896 C
409.3291 -46.7578 L
410.5146 -45.1719 410.1758 -42.8804 408.5566 -41.6943 c
406.9551 -40.5083 404.666 -40.8589 403.4756 -42.4678 C
384.8945 -67.7383 L
382.458 -66.9761 379.9297 -66.4385 377.2354 -66.4385 c
374.5449 -66.4385 372.0137 -66.9761 369.5693 -67.7383 C
350.9805 -42.4678 L
349.793 -40.8589 347.5137 -40.5083 345.9092 -41.6943 c
344.292 -42.8804 343.9453 -45.1719 345.1309 -46.7578 C
362.8809 -70.896 L
360.8184 -72.249 358.8701 -73.7788 357.2412 -75.6318 C
322.9639 -75.6318 L
306.9424 -75.6318 293.9004 -88.6758 293.9004 -104.7026 C
293.9004 -170.8076 L
293.9004 -186.4619 306.3438 -199.2568 321.8506 -199.8447 C
323.6816 -205.957 L
329.4336 -205.957 L
331.251 -199.8877 L
419.2109 -200.0439 L
420.9814 -205.957 L
426.7324 -205.957 L
428.5068 -200.0332 L
444.042 -199.4775 456.5137 -186.6816 456.5137 -171.0068 C
456.5137 -104.8823 L
456.5137 -88.8599 443.4775 -75.8223 427.458 -75.8223 C
f
0 D
429.6045 -169.7793 m
429.6045 -177.5498 423.2822 -183.8691 415.5186 -183.8691 C
324.4268 -183.8691 L
316.6475 -183.8691 310.3359 -177.5498 310.3359 -169.7793 C
310.3359 -105.7329 L
310.3359 -97.9536 316.6475 -91.6392 324.4268 -91.6392 C
415.5186 -91.6392 L
423.2822 -91.6392 429.6045 -97.9536 429.6045 -105.7329 C
429.6045 -169.7793 L
f
442.6543 -165.7246 m
439.3809 -165.7246 436.7256 -163.0723 436.7256 -159.7979 c
436.7256 -156.5283 439.3809 -153.8721 442.6543 -153.8721 c
445.9199 -153.8721 448.584 -156.5283 448.584 -159.7979 c
448.584 -163.0723 445.9199 -165.7246 442.6543 -165.7246 c
f
442.6543 -145.541 m
439.3809 -145.541 436.7256 -142.8916 436.7256 -139.6201 c
436.7256 -136.3477 439.3809 -133.6973 442.6543 -133.6973 c
445.9199 -133.6973 448.584 -136.3477 448.584 -139.6201 c
448.584 -142.8916 445.9199 -145.541 442.6543 -145.541 c
f
442.6543 -124.9131 m
439.3809 -124.9131 436.7256 -122.2573 436.7256 -118.9785 c
436.7256 -115.7153 439.3809 -113.0547 442.6543 -113.0547 c
445.9199 -113.0547 448.584 -115.7153 448.584 -118.9785 c
448.584 -122.2573 445.9199 -124.9131 442.6543 -124.9131 c
f
*U
*u
1 D
68.6719 -595.5371 m
53.0947 -600.6221 L
50.1304 -601.5889 47.7065 -604.9297 47.7065 -608.0449 C
47.7065 -622.6006 L
47.7065 -625.7168 50.1304 -629.0576 53.0947 -630.0244 C
68.6719 -635.1074 L
68.6719 -686.1523 L
73.772 -686.1523 L
73.772 -544.4912 L
68.6719 -544.4912 L
68.6719 -595.5371 L
f
144.8032 -677.085 m
135.894 -702.9238 L
132.7954 -710.8955 141.8711 -712.7461 v
144.3994 -713.2637 146.3218 -713.5547 147.6938 -713.8496 c
150.644 -714.4834 152.3218 -711.3115 Y
169.771 -678.748 L
185.853 -648.7344 L
154.5791 -648.7344 L
144.8032 -677.085 L
f
79.438 -544.4912 m
78.4106 -544.4912 L
78.4106 -686.1523 L
79.438 -686.1523 L
104.1396 -641.2334 146.3003 -640.8301 V
146.3003 -589.8145 L
104.1396 -589.4111 79.438 -544.4912 Y
f
209.5747 -615.3223 m
209.5747 -600.3867 200.4146 -591.957 196.2598 -591.957 C
196.2598 -638.7324 L
200.8887 -638.7324 209.5747 -630.2666 209.5747 -615.3223 c
f
0 D
151.7788 -587.5381 m
190.7813 -587.5381 L
190.7813 -643.2549 L
151.7788 -643.2549 L
151.7788 -587.5381 L
f
*U
*u
u
1 D
137.1035 -87.1577 m
131.3682 -87.1577 L
131.3682 -77.1772 L
135.0117 -76.022 137.6514 -72.6177 137.6514 -68.5933 c
137.6514 -63.6172 133.6162 -59.584 128.6396 -59.584 c
123.665 -59.584 119.6299 -63.6172 119.6299 -68.5933 c
119.6299 -72.6177 122.2705 -76.022 125.9111 -77.1772 C
125.9111 -87.1577 L
120.1787 -87.1577 L
120.1787 -146.2427 77.2344 -209.8794 Y
103.7158 -209.8794 L
118.0137 -183.3667 L
139.2666 -183.3667 L
153.5654 -209.8794 L
180.0469 -209.8794 L
137.1035 -146.2427 137.1035 -87.1577 V
f
0 D
128.0781 -95.3032 m
129.2041 -95.3032 L
129.4258 -99.0283 129.8008 -102.7524 130.292 -106.4619 C
126.7002 -108.5488 L
127.3379 -104.1479 127.8154 -99.7261 128.0781 -95.3032 C
f
124.8594 -119.0356 m
131.6543 -115.0913 L
132.3203 -118.7222 133.1025 -122.3267 133.9668 -125.8921 C
124.8076 -119.3052 L
124.8252 -119.2153 124.8408 -119.1265 124.8594 -119.0356 C
f
122.8184 -127.9092 m
137.0664 -138.1553 L
116.3135 -150.207 L
116.0391 -150.0093 L
118.5771 -142.9248 120.8936 -135.5122 122.8184 -127.9092 C
f
98.8545 -201.7344 m
91.8184 -201.7344 L
93.7783 -198.353 108.3721 -184.0874 Y
98.8545 -201.7344 L
f
104.9707 -176.6436 m
107.7012 -170.8477 110.4531 -164.5557 113.0684 -157.9063 C
123.8643 -165.6699 L
104.9707 -176.6436 L
f
123.6396 -175.2202 m
131.1104 -170.8813 L
137.1426 -175.2202 L
123.6396 -175.2202 L
f
123.5615 -155.4189 m
139.8301 -145.9688 L
143.501 -156.7539 147.7324 -166.8525 151.9268 -175.8174 C
123.5615 -155.4189 L
f
148.5527 -183.4253 m
163.7383 -198.7617 165.4629 -201.7344 V
158.4258 -201.7344 L
148.5527 -183.4253 L
f
U
147.1953 -69.541 m
147.9004 -66.106 146.4844 -62.7192 143.8467 -60.7446 c
142.8438 -59.9932 142.1016 -57.5581 143.1748 -56.4092 c
145.3877 -54.0518 148.3691 -55.9146 149.5137 -57.083 c
152.9521 -60.5879 154.6406 -65.6758 153.582 -70.8477 c
152.9561 -73.8984 151.46 -76.543 149.4092 -78.5869 c
148.2734 -79.7192 145.1318 -81.3496 143.1816 -79.146 c
141.832 -77.623 143.1641 -75.4126 144.3057 -74.438 c
145.7383 -73.2148 146.79 -71.5239 147.1953 -69.541 c
f
152.8066 -47.2202 m
152.9082 -47.1265 L
154.2031 -45.8867 156.4063 -45.7944 157.8047 -46.9155 C
157.9707 -47.0508 159.1563 -48.3022 v
165.2891 -54.7974 168.2803 -64.0728 166.3525 -73.4644 c
165.2109 -79.0391 162.4941 -83.895 158.7637 -87.667 c
157.6748 -88.7651 157.6748 -88.7651 Y
156.3467 -89.8154 154.2002 -89.6621 152.9033 -88.4243 C
152.8027 -88.3291 L
151.5078 -87.0903 151.5176 -85.3037 152.832 -84.3594 C
152.832 -84.3594 153.8838 -83.3271 v
156.8789 -80.3921 159.0625 -76.5669 159.9658 -72.1577 c
161.499 -64.6826 158.9893 -57.3027 153.9414 -52.2876 c
152.8818 -51.2373 152.8818 -51.2373 Y
151.5449 -50.2637 151.5107 -48.457 152.8066 -47.2202 C
f
162.4873 -42.374 m
161.1426 -41.2412 161.1035 -39.3042 162.4004 -38.0674 C
162.4395 -38.0298 L
163.7373 -36.7891 165.9043 -36.7446 167.252 -37.9248 C
167.3418 -38.0034 168.5039 -39.2251 v
177.5371 -48.708 181.9482 -62.3091 179.125 -76.0825 c
177.459 -84.2188 173.4912 -91.3052 168.0449 -96.8125 c
167.0146 -97.8555 167.0146 -97.8555 Y
165.791 -98.9067 163.7324 -98.7563 162.4346 -97.519 C
162.3906 -97.478 L
161.0957 -96.2393 160.9531 -94.4683 162.0762 -93.5391 C
162.0762 -93.5391 163.0264 -92.6064 v
167.8066 -87.9204 171.2959 -81.8149 172.7422 -74.7759 c
175.1396 -63.0688 171.3369 -51.5161 163.5947 -43.5166 c
162.4873 -42.374 162.4873 -42.374 Y
f
88.7754 -96.3994 m
79.7441 -86.9155 75.334 -73.3149 78.1572 -59.541 c
79.8223 -51.4048 83.7881 -44.3188 89.2373 -38.8115 c
90.2676 -37.7676 90.2676 -37.7676 Y
91.4902 -36.7163 93.5488 -36.8677 94.8467 -38.1045 C
94.8906 -38.1455 L
96.1846 -39.3843 96.3271 -41.1558 95.2051 -42.085 C
95.2051 -42.085 94.2549 -43.0176 v
89.4746 -47.7031 85.9854 -53.8086 84.5391 -60.8486 c
82.1426 -72.5537 85.9443 -84.1084 93.6875 -92.106 c
94.793 -93.2505 94.793 -93.2505 Y
96.1387 -94.3828 96.1787 -96.3213 94.8809 -97.5571 C
94.8418 -97.5938 L
93.5449 -98.8345 91.377 -98.8789 90.0313 -97.6997 C
89.9404 -97.6216 88.7754 -96.3994 v
f
90.9277 -62.1597 m
92.0693 -56.5845 94.7871 -51.7285 98.5176 -47.9561 c
99.6045 -46.8589 99.6045 -46.8589 Y
100.9336 -45.8086 103.0811 -45.9614 104.3779 -47.1987 C
104.4785 -47.2939 L
105.7764 -48.5337 105.7637 -50.3188 104.4492 -51.2651 C
104.4492 -51.2651 103.3975 -52.2964 v
100.4033 -55.2319 98.2188 -59.0571 97.3154 -63.4668 c
95.7813 -70.9419 98.292 -78.3218 103.3418 -83.3379 c
104.3994 -84.3862 104.3994 -84.3862 Y
105.7354 -85.3608 105.7705 -87.1665 104.4746 -88.4038 C
104.374 -88.498 L
103.0781 -89.7368 100.875 -89.8296 99.4756 -88.708 C
99.3105 -88.5728 98.125 -87.3213 v
91.9922 -80.8262 89.002 -71.5527 90.9277 -62.1597 c
f
103.7002 -64.7754 m
104.3262 -61.7251 105.8213 -59.0801 107.8721 -57.0366 c
109.0088 -55.9028 112.1494 -54.2739 114.1006 -56.4785 c
115.4492 -57.9995 114.1182 -60.2104 112.9756 -61.186 c
111.543 -62.4087 110.4922 -64.0996 110.0869 -66.0845 c
109.3809 -69.519 110.7979 -72.9043 113.4346 -74.8794 c
114.4365 -75.6323 115.1807 -78.0664 114.1045 -79.2139 c
111.8936 -81.5723 108.9111 -79.7104 107.7666 -78.541 c
104.3281 -75.0361 102.6416 -69.9468 103.7002 -64.7754 c
f
*U
*u
u
1 D
645.3154 -660.3828 m
645.3154 -688.2656 L
574.207 -688.2656 L
574.207 -581.2139 L
604.4502 -581.2139 L
605.6514 -578.1768 607.1367 -575.2578 608.8867 -572.4834 C
600.1729 -572.4834 L
599.0977 -572.4834 598.2178 -571.7012 598.2178 -570.7451 c
598.2178 -569.7881 599.0977 -569.0059 600.1729 -569.0059 C
611.2773 -569.0059 L
613.9346 -565.4307 617.043 -562.1426 620.5313 -559.1963 C
575.2129 -559.1963 L
567.6924 -559.1963 561.54 -565.3506 561.54 -572.8701 C
561.54 -696.6104 L
561.54 -704.1309 567.6924 -710.2832 575.2129 -710.2832 C
644.5547 -710.2832 L
652.0762 -710.2832 658.2285 -704.1309 658.2285 -696.6104 C
658.2285 -655.3135 L
657.2188 -655.2256 656.2119 -655.126 655.2119 -654.9961 C
652.1211 -656.8369 648.7588 -658.6543 645.3154 -660.3828 C
f
0 D
609.7617 -703.3096 m
607.2119 -703.3096 605.1455 -701.2432 605.1455 -698.6934 c
605.1455 -696.1436 607.2119 -694.0752 609.7617 -694.0752 c
612.3115 -694.0752 614.3779 -696.1436 614.3779 -698.6934 c
614.3779 -701.2432 612.3115 -703.3096 609.7617 -703.3096 c
f
U
1 D
664.5088 -548.1416 m
632.4561 -548.1416 606.3799 -570.8125 606.3799 -598.6797 c
606.3799 -614.8418 615.1514 -629.2559 628.7725 -638.5146 C
629.0713 -651.2373 620.5859 -657.291 613.1475 -666.0205 C
619.5361 -665.3457 640.3311 -656.8936 654.0508 -648.3994 C
657.4453 -648.9365 660.9404 -649.2188 664.5088 -649.2188 c
696.5645 -649.2188 722.6406 -626.5469 722.6406 -598.6797 c
722.6406 -570.8125 696.5645 -548.1416 664.5088 -548.1416 c
f
0 D
664.5088 -641.2188 m
661.4199 -641.2188 658.3232 -640.9756 655.3027 -640.4971 C
652.3672 -640.0322 L
649.8398 -641.5967 L
645.7412 -644.1338 640.6191 -646.8652 635.0801 -649.4775 C
636.3066 -645.9443 636.8623 -642.2578 636.7695 -638.3271 C
636.6738 -634.2119 L
633.2695 -631.8984 L
621.2646 -623.7383 614.3799 -611.6309 614.3799 -598.6797 c
614.3799 -575.2236 636.8672 -556.1416 664.5088 -556.1416 c
692.1514 -556.1416 714.6406 -575.2236 714.6406 -598.6797 c
714.6406 -622.1357 692.1514 -641.2188 664.5088 -641.2188 c
f
*U
*u
u
1 D
889.0605 -636.2783 m
889.0605 -658.1543 L
822.4492 -658.1543 L
822.4492 -581.084 L
847.1572 -581.084 L
847.0664 -579.8838 847.0049 -578.6787 847.0049 -577.4639 c
847.0049 -573.2197 847.583 -569.0938 848.6416 -565.1299 C
823.4082 -565.1299 L
815.2441 -565.1299 808.5605 -571.8105 808.5605 -579.9766 C
808.5605 -714.3438 L
808.5605 -722.5107 815.2441 -729.1924 823.4082 -729.1924 C
888.1006 -729.1924 L
896.2686 -729.1924 902.9482 -722.5107 902.9482 -714.3438 C
902.9482 -631.1064 L
901.7266 -631.0166 900.5068 -630.9014 899.2988 -630.748 C
896.1738 -632.6025 892.6738 -634.4824 889.0605 -636.2783 C
f
0 D
841.0381 -716.1328 m
841.0381 -717.0107 840.3242 -717.7227 839.4482 -717.7227 C
823.2754 -717.7227 L
822.3965 -717.7227 821.6855 -717.0107 821.6855 -716.1328 C
821.6855 -711.1826 L
821.6855 -710.3057 822.3965 -709.5908 823.2754 -709.5908 C
839.4482 -709.5908 L
840.3242 -709.5908 841.0381 -710.3057 841.0381 -711.1826 C
841.0381 -716.1328 L
f
841.0381 -702.3457 m
841.0381 -703.2217 840.3242 -703.9365 839.4482 -703.9365 C
823.2754 -703.9365 L
822.3965 -703.9365 821.6855 -703.2217 821.6855 -702.3457 C
821.6855 -697.3945 L
821.6855 -696.5176 822.3965 -695.8037 823.2754 -695.8037 C
839.4482 -695.8037 L
840.3242 -695.8037 841.0381 -696.5176 841.0381 -697.3945 C
841.0381 -702.3457 L
f
841.0381 -688.5576 m
841.0381 -689.4346 840.3242 -690.1484 839.4482 -690.1484 C
823.2754 -690.1484 L
822.3965 -690.1484 821.6855 -689.4346 821.6855 -688.5576 C
821.6855 -683.6064 L
821.6855 -682.7305 822.3965 -682.0166 823.2754 -682.0166 C
839.4482 -682.0166 L
840.3242 -682.0166 841.0381 -682.7305 841.0381 -683.6064 C
841.0381 -688.5576 L
f
841.0381 -674.7695 m
841.0381 -675.6475 840.3242 -676.3613 839.4482 -676.3613 C
823.2754 -676.3613 L
822.3965 -676.3613 821.6855 -675.6475 821.6855 -674.7695 C
821.6855 -669.8184 L
821.6855 -668.9414 822.3965 -668.2285 823.2754 -668.2285 C
839.4482 -668.2285 L
840.3242 -668.2285 841.0381 -668.9414 841.0381 -669.8184 C
841.0381 -674.7695 L
f
865.4316 -716.1328 m
865.4316 -717.0107 864.7188 -717.7227 863.8408 -717.7227 C
847.6689 -717.7227 L
846.791 -717.7227 846.0771 -717.0107 846.0771 -716.1328 C
846.0771 -711.1826 L
846.0771 -710.3057 846.791 -709.5908 847.6689 -709.5908 C
863.8408 -709.5908 L
864.7188 -709.5908 865.4316 -710.3057 865.4316 -711.1826 C
865.4316 -716.1328 L
f
865.4316 -702.3457 m
865.4316 -703.2217 864.7188 -703.9365 863.8408 -703.9365 C
847.6689 -703.9365 L
846.791 -703.9365 846.0771 -703.2217 846.0771 -702.3457 C
846.0771 -697.3945 L
846.0771 -696.5176 846.791 -695.8037 847.6689 -695.8037 C
863.8408 -695.8037 L
864.7188 -695.8037 865.4316 -696.5176 865.4316 -697.3945 C
865.4316 -702.3457 L
f
865.4316 -688.5576 m
865.4316 -689.4346 864.7188 -690.1484 863.8408 -690.1484 C
847.6689 -690.1484 L
846.791 -690.1484 846.0771 -689.4346 846.0771 -688.5576 C
846.0771 -683.6064 L
846.0771 -682.7305 846.791 -682.0166 847.6689 -682.0166 C
863.8408 -682.0166 L
864.7188 -682.0166 865.4316 -682.7305 865.4316 -683.6064 C
865.4316 -688.5576 L
f
865.4316 -674.7695 m
865.4316 -675.6475 864.7188 -676.3613 863.8408 -676.3613 C
847.6689 -676.3613 L
846.791 -676.3613 846.0771 -675.6475 846.0771 -674.7695 C
846.0771 -669.8184 L
846.0771 -668.9414 846.791 -668.2285 847.6689 -668.2285 C
863.8408 -668.2285 L
864.7188 -668.2285 865.4316 -668.9414 865.4316 -669.8184 C
865.4316 -674.7695 L
f
889.8262 -716.1328 m
889.8262 -717.0107 889.1123 -717.7227 888.2344 -717.7227 C
872.0625 -717.7227 L
871.1846 -717.7227 870.4707 -717.0107 870.4707 -716.1328 C
870.4707 -711.1826 L
870.4707 -710.3057 871.1846 -709.5908 872.0625 -709.5908 C
888.2344 -709.5908 L
889.1123 -709.5908 889.8262 -710.3057 889.8262 -711.1826 C
889.8262 -716.1328 L
f
889.8262 -702.3457 m
889.8262 -703.2217 889.1123 -703.9365 888.2344 -703.9365 C
872.0625 -703.9365 L
871.1846 -703.9365 870.4707 -703.2217 870.4707 -702.3457 C
870.4707 -697.3945 L
870.4707 -696.5176 871.1846 -695.8037 872.0625 -695.8037 C
888.2344 -695.8037 L
889.1123 -695.8037 889.8262 -696.5176 889.8262 -697.3945 C
889.8262 -702.3457 L
f
889.8262 -688.5576 m
889.8262 -689.4346 889.1123 -690.1484 888.2344 -690.1484 C
872.0625 -690.1484 L
871.1846 -690.1484 870.4707 -689.4346 870.4707 -688.5576 C
870.4707 -683.6064 L
870.4707 -682.7305 871.1846 -682.0166 872.0625 -682.0166 C
888.2344 -682.0166 L
889.1123 -682.0166 889.8262 -682.7305 889.8262 -683.6064 C
889.8262 -688.5576 L
f
889.8262 -674.7695 m
889.8262 -675.6475 889.1123 -676.3613 888.2344 -676.3613 C
872.0625 -676.3613 L
871.1846 -676.3613 870.4707 -675.6475 870.4707 -674.7695 C
870.4707 -669.8184 L
870.4707 -668.9414 871.1846 -668.2285 872.0625 -668.2285 C
888.2344 -668.2285 L
889.1123 -668.2285 889.8262 -668.9414 889.8262 -669.8184 C
889.8262 -674.7695 L
f
U
1 D
908.0869 -529.2334 m
877.4971 -529.2334 852.6123 -550.8691 852.6123 -577.4639 c
852.6123 -592.8887 860.9834 -606.6455 873.9814 -615.4814 C
874.2666 -627.624 866.1689 -633.4004 859.0713 -641.7314 C
865.167 -641.0869 885.0137 -633.0205 898.1064 -624.915 C
901.3457 -625.4287 904.6816 -625.6963 908.0869 -625.6963 c
938.6797 -625.6963 963.5654 -604.0596 963.5654 -577.4639 c
963.5654 -550.8691 938.6797 -529.2334 908.0869 -529.2334 c
f
0 D
878.9238 -592.7451 m
875.7637 -592.7451 872.6436 -591.9248 871.084 -591.0625 C
872.3564 -585.8906 L
874.04 -586.7529 876.625 -587.6143 879.2939 -587.6143 c
882.167 -587.6143 883.6855 -586.4248 883.6855 -584.6182 c
883.6855 -582.8945 882.3721 -581.9092 879.0469 -580.7188 c
874.4502 -579.1182 871.4541 -576.5732 871.4541 -572.5508 c
871.4541 -567.8311 875.3945 -564.2178 881.9209 -564.2178 c
885.04 -564.2178 887.3389 -564.875 888.9805 -565.6143 C
887.585 -570.6631 L
886.4766 -570.1289 884.5059 -569.3486 881.7969 -569.3486 c
879.0879 -569.3486 877.7744 -570.5811 877.7744 -572.0166 c
877.7744 -573.7822 879.335 -574.5615 882.9053 -575.917 c
887.79 -577.7227 890.0889 -580.2676 890.0889 -584.167 c
890.0889 -588.8057 886.5176 -592.7451 878.9238 -592.7451 c
f
918.125 -592.335 m
917.7148 -581.7451 L
917.5918 -578.4209 917.4688 -574.3975 917.4688 -570.376 C
917.3457 -570.376 L
916.4834 -573.9053 915.334 -577.8457 914.2666 -581.0889 C
910.9014 -591.8838 L
906.0166 -591.8838 L
903.0615 -581.1709 L
902.1582 -577.9277 901.2139 -573.9873 900.5576 -570.376 C
900.4756 -570.376 L
900.3115 -574.1104 900.1885 -578.3799 899.9824 -581.8271 C
899.4902 -592.335 L
893.7031 -592.335 L
895.4678 -564.6699 L
903.7998 -564.6699 L
906.5088 -573.9053 L
907.3711 -577.1064 908.2334 -580.5547 908.8486 -583.7979 C
908.9717 -583.7979 L
909.752 -580.5957 910.6963 -576.9424 911.5986 -573.8643 C
914.5537 -564.6699 L
922.7227 -564.6699 L
924.2412 -592.335 L
918.125 -592.335 L
f
935.8203 -592.7451 m
932.6602 -592.7451 929.54 -591.9248 927.9805 -591.0625 C
929.2529 -585.8906 L
930.9365 -586.7529 933.5215 -587.6143 936.1904 -587.6143 c
939.0635 -587.6143 940.582 -586.4248 940.582 -584.6182 c
940.582 -582.8945 939.2686 -581.9092 935.9434 -580.7188 c
931.3467 -579.1182 928.3506 -576.5732 928.3506 -572.5508 c
928.3506 -567.8311 932.291 -564.2178 938.8174 -564.2178 c
941.9365 -564.2178 944.2354 -564.875 945.877 -565.6143 C
944.4814 -570.6631 L
943.373 -570.1289 941.4023 -569.3486 938.6934 -569.3486 c
935.9844 -569.3486 934.6709 -570.5811 934.6709 -572.0166 c
934.6709 -573.7822 936.2314 -574.5615 939.8018 -575.917 c
944.6865 -577.7227 946.9854 -580.2676 946.9854 -584.167 c
946.9854 -588.8057 943.4141 -592.7451 935.8203 -592.7451 c
f
*U
*u
1 D
727.5293 -913.001 m
712.0391 -913.001 L
712.0391 -813.25 L
712.0391 -810.2227 709.5762 -807.7607 706.5508 -807.7607 C
557.6289 -807.7607 L
554.6035 -807.7607 552.1406 -810.2227 552.1406 -813.25 C
552.1406 -913.001 L
536.6504 -913.001 L
532.6611 -913.001 529.4131 -916.2471 529.4131 -920.2402 C
529.4131 -926.9336 L
529.4131 -930.9229 532.6611 -934.1689 536.6504 -934.1689 C
727.5293 -934.1689 L
731.5186 -934.1689 734.7666 -930.9229 734.7666 -926.9336 C
734.7666 -920.2402 L
734.7666 -916.2471 731.5186 -913.001 727.5293 -913.001 C
f
0 D
663.2939 -918.9375 m
663.2939 -920.4541 662.0596 -921.6885 660.542 -921.6885 C
603.6377 -921.6885 L
602.1201 -921.6885 600.8857 -920.4541 600.8857 -918.9375 C
600.8857 -916.3945 L
600.8857 -916.1641 600.9229 -915.9434 600.9766 -915.7295 C
663.2031 -915.7295 L
663.2578 -915.9434 663.2939 -916.1641 663.2939 -916.3945 C
663.2939 -918.9375 L
f
695.3184 -926.5273 m
694.0449 -926.5273 693.0127 -925.4941 693.0127 -924.2217 c
693.0127 -922.9482 694.0449 -921.915 695.3184 -921.915 c
696.5908 -921.915 697.624 -922.9482 697.624 -924.2217 c
697.624 -925.4941 696.5908 -926.5273 695.3184 -926.5273 c
f
697.9287 -908.9453 m
566.251 -908.9453 L
566.251 -820.8457 L
566.251 -820.7578 566.375 -820.6201 566.541 -820.6201 C
697.6387 -820.6201 L
697.8047 -820.6201 697.9287 -820.7578 697.9287 -820.8457 C
697.9287 -908.9453 L
f
705.958 -926.5273 m
704.6855 -926.5273 703.6523 -925.4941 703.6523 -924.2217 c
703.6523 -922.9482 704.6855 -921.915 705.958 -921.915 c
707.2305 -921.915 708.2637 -922.9482 708.2637 -924.2217 c
708.2637 -925.4941 707.2305 -926.5273 705.958 -926.5273 c
f
716.5977 -926.5273 m
715.3252 -926.5273 714.293 -925.4941 714.293 -924.2217 c
714.293 -922.9482 715.3252 -921.915 716.5977 -921.915 c
717.8711 -921.915 718.9043 -922.9482 718.9043 -924.2217 c
718.9043 -925.4941 717.8711 -926.5273 716.5977 -926.5273 c
f
*U
*u
1 D
356.1572 -601.2402 m
343.2183 -605.4639 L
340.7559 -606.2666 338.7432 -609.041 338.7432 -611.6309 C
338.7432 -623.7197 L
338.7432 -626.3086 340.7559 -629.084 343.2183 -629.8867 C
356.1572 -634.1094 L
356.1572 -676.5068 L
360.3936 -676.5068 L
360.3936 -558.8418 L
356.1572 -558.8418 L
356.1572 -601.2402 L
f
419.394 -668.9766 m
411.9937 -690.4385 L
409.4199 -697.0596 416.9575 -698.5986 v
419.0586 -699.0273 420.6553 -699.2686 421.7949 -699.5137 c
424.2456 -700.04 425.6387 -697.4063 Y
440.1318 -670.3584 L
453.4907 -645.4277 L
427.5137 -645.4277 L
419.394 -668.9766 L
f
365.0996 -558.8418 m
364.2466 -558.8418 L
364.2466 -676.5068 L
365.0996 -676.5068 L
385.6177 -639.1973 420.6372 -638.8613 V
420.6372 -596.4863 L
385.6177 -596.1523 365.0996 -558.8418 Y
f
473.1943 -617.6748 m
473.1943 -605.2686 465.5864 -598.2666 462.1348 -598.2666 C
462.1348 -637.1201 L
465.979 -637.1201 473.1943 -630.0889 473.1943 -617.6748 c
f
0 D
425.187 -594.5977 m
457.584 -594.5977 L
457.584 -640.877 L
425.187 -640.877 L
425.187 -594.5977 L
f
u
u
301.4375 -653.4844 m
303.0786 -655.1914 303.0786 -655.1914 y
305.0747 -656.8848 305.1206 -659.7646 303.1812 -661.5967 c
303.126 -661.6523 l
301.1875 -663.4902 297.9663 -663.5459 295.9673 -661.7822 c
295.8325 -661.6641 294.1104 -659.8408 v
280.731 -645.6816 274.2476 -625.4277 278.5293 -604.957 c
281.0542 -592.8633 286.9956 -582.3457 295.1294 -574.1865 c
296.6709 -572.6396 296.6709 -572.6396 y
298.4951 -571.084 301.5562 -571.3213 303.4771 -573.1689 c
303.542 -573.2295 l
305.4614 -575.0791 305.6631 -577.7148 303.9883 -579.0908 c
303.9883 -579.0908 302.5718 -580.4727 v
295.4312 -587.4141 290.2061 -596.4746 288.0161 -606.9385 c
284.3828 -624.335 289.9683 -641.542 301.4375 -653.4844 c
f
/BBAccumRotation (2.352282) XT
U
u
315.8486 -640.4961 m
317.418 -642.0625 317.418 -642.0625 y
319.3984 -643.5195 319.4419 -646.207 317.5059 -648.04 c
317.3569 -648.1758 l
315.4214 -650.0137 312.1421 -650.1377 310.0684 -648.4629 c
309.8242 -648.2598 308.0698 -646.3926 v
298.9844 -636.6963 294.5894 -622.8848 297.5103 -608.9248 c
299.2432 -600.6377 303.313 -593.4307 308.8838 -587.8438 c
310.5059 -586.2158 310.5059 -586.2158 y
312.4863 -584.6621 315.6797 -584.9033 317.6006 -586.75 c
317.7544 -586.8926 l
319.6738 -588.7432 319.647 -591.4004 317.6855 -592.7988 c
317.6855 -592.7988 316.1167 -594.3271 v
311.6436 -598.6768 308.3711 -604.3516 307.002 -610.9063 c
304.6782 -622.0137 308.3682 -633.0059 315.8486 -640.4961 c
f
/BBAccumRotation (2.352282) XT
U
u
331.8843 -634.4258 m
328.5815 -637.9209 324.1567 -635.1338 322.4604 -633.3896 c
317.3682 -628.1563 314.8857 -620.5781 316.4917 -612.8906 c
317.4399 -608.3584 319.6792 -604.4307 322.7412 -601.4043 c
324.439 -599.7256 329.1206 -597.3193 332.0127 -600.6084 c
334.0059 -602.8789 332.0127 -606.1631 330.3105 -607.6055 c
328.1714 -609.4141 326.5981 -611.9248 325.9834 -614.873 c
324.916 -619.9785 327.001 -625.0215 330.9111 -627.9746 c
332.3999 -629.0996 333.4888 -632.7246 331.8843 -634.4258 c
f
/BBAccumRotation (2.352282) XT
U
U
*U
*u
839.4609 -352.5601 m
914.7344 -352.5601 L
914.7344 -381.7808 L
914.7344 -401.1548 899.0273 -416.8599 879.6563 -416.8599 C
874.5391 -416.8599 L
855.168 -416.8599 839.4609 -401.1548 839.4609 -381.7808 C
839.4609 -352.5601 L
f
u
914.7344 -303.6743 m
914.7344 -346.894 L
839.4609 -346.894 L
839.4609 -303.6743 L
839.4609 -284.3003 855.168 -268.5942 874.5391 -268.5942 C
879.6563 -268.5942 L
899.0273 -268.5942 914.7344 -284.3003 914.7344 -303.6743 C
f
1 D
853.9609 -336.4888 m
853.9609 -333.9292 852.333 -331.854 850.3281 -331.854 c
848.3213 -331.854 846.6963 -333.9292 846.6963 -336.4888 c
846.6963 -339.0493 848.3213 -341.1235 850.3281 -341.1235 c
852.333 -341.1235 853.9609 -339.0493 853.9609 -336.4888 c
f
853.9609 -315.77 m
853.9609 -313.2095 852.333 -311.1343 850.3281 -311.1343 c
848.3213 -311.1343 846.6963 -313.2095 846.6963 -315.77 c
846.6963 -318.3296 848.3213 -320.4048 850.3281 -320.4048 c
852.333 -320.4048 853.9609 -318.3296 853.9609 -315.77 c
f
853.9609 -295.0503 m
853.9609 -292.4917 852.333 -290.4165 850.3281 -290.4165 c
848.3213 -290.4165 846.6963 -292.4917 846.6963 -295.0503 c
846.6963 -297.6099 848.3213 -299.687 850.3281 -299.687 c
852.333 -299.687 853.9609 -297.6099 853.9609 -295.0503 c
f
862.8848 -326.1304 m
862.8848 -323.5708 861.2559 -321.4937 859.25 -321.4937 c
857.2441 -321.4937 855.6201 -323.5708 855.6201 -326.1304 c
855.6201 -328.689 857.2441 -330.7642 859.25 -330.7642 c
861.2559 -330.7642 862.8848 -328.689 862.8848 -326.1304 c
f
862.8848 -305.4106 m
862.8848 -302.8501 861.2559 -300.7759 859.25 -300.7759 c
857.2441 -300.7759 855.6201 -302.8501 855.6201 -305.4106 c
855.6201 -307.9712 857.2441 -310.0454 859.25 -310.0454 c
861.2559 -310.0454 862.8848 -307.9712 862.8848 -305.4106 c
f
862.8848 -284.6919 m
862.8848 -282.1313 861.2559 -280.0571 859.25 -280.0571 c
857.2441 -280.0571 855.6201 -282.1313 855.6201 -284.6919 c
855.6201 -287.2515 857.2441 -289.3267 859.25 -289.3267 c
861.2559 -289.3267 862.8848 -287.2515 862.8848 -284.6919 c
f
871.8086 -336.4888 m
871.8086 -333.9292 870.1797 -331.854 868.1738 -331.854 c
866.168 -331.854 864.5439 -333.9292 864.5439 -336.4888 c
864.5439 -339.0493 866.168 -341.1235 868.1738 -341.1235 c
870.1797 -341.1235 871.8086 -339.0493 871.8086 -336.4888 c
f
871.8086 -315.77 m
871.8086 -313.2095 870.1797 -311.1343 868.1738 -311.1343 c
866.168 -311.1343 864.5439 -313.2095 864.5439 -315.77 c
864.5439 -318.3296 866.168 -320.4048 868.1738 -320.4048 c
870.1797 -320.4048 871.8086 -318.3296 871.8086 -315.77 c
f
871.8086 -295.0503 m
871.8086 -292.4917 870.1797 -290.4165 868.1738 -290.4165 c
866.168 -290.4165 864.5439 -292.4917 864.5439 -295.0503 c
864.5439 -297.6099 866.168 -299.687 868.1738 -299.687 c
870.1797 -299.687 871.8086 -297.6099 871.8086 -295.0503 c
f
880.7314 -326.1304 m
880.7314 -323.5708 879.1035 -321.4937 877.0977 -321.4937 c
875.0908 -321.4937 873.4658 -323.5708 873.4658 -326.1304 c
873.4658 -328.689 875.0908 -330.7642 877.0977 -330.7642 c
879.1035 -330.7642 880.7314 -328.689 880.7314 -326.1304 c
f
880.7314 -305.4106 m
880.7314 -302.8501 879.1035 -300.7759 877.0977 -300.7759 c
875.0908 -300.7759 873.4658 -302.8501 873.4658 -305.4106 c
873.4658 -307.9712 875.0908 -310.0454 877.0977 -310.0454 c
879.1035 -310.0454 880.7314 -307.9712 880.7314 -305.4106 c
f
880.7314 -284.6919 m
880.7314 -282.1313 879.1035 -280.0571 877.0977 -280.0571 c
875.0908 -280.0571 873.4658 -282.1313 873.4658 -284.6919 c
873.4658 -287.2515 875.0908 -289.3267 877.0977 -289.3267 c
879.1035 -289.3267 880.7314 -287.2515 880.7314 -284.6919 c
f
889.6533 -336.4888 m
889.6533 -333.9292 888.0273 -331.854 886.0215 -331.854 c
884.0156 -331.854 882.3887 -333.9292 882.3887 -336.4888 c
882.3887 -339.0493 884.0156 -341.1235 886.0215 -341.1235 c
888.0273 -341.1235 889.6533 -339.0493 889.6533 -336.4888 c
f
889.6533 -315.77 m
889.6533 -313.2095 888.0273 -311.1343 886.0215 -311.1343 c
884.0156 -311.1343 882.3887 -313.2095 882.3887 -315.77 c
882.3887 -318.3296 884.0156 -320.4048 886.0215 -320.4048 c
888.0273 -320.4048 889.6533 -318.3296 889.6533 -315.77 c
f
889.6533 -295.0503 m
889.6533 -292.4917 888.0273 -290.4165 886.0215 -290.4165 c
884.0156 -290.4165 882.3887 -292.4917 882.3887 -295.0503 c
882.3887 -297.6099 884.0156 -299.687 886.0215 -299.687 c
888.0273 -299.687 889.6533 -297.6099 889.6533 -295.0503 c
f
898.5771 -326.1304 m
898.5771 -323.5708 896.9512 -321.4937 894.9453 -321.4937 c
892.9385 -321.4937 891.3125 -323.5708 891.3125 -326.1304 c
891.3125 -328.689 892.9385 -330.7642 894.9453 -330.7642 c
896.9512 -330.7642 898.5771 -328.689 898.5771 -326.1304 c
f
898.5771 -305.4106 m
898.5771 -302.8501 896.9512 -300.7759 894.9453 -300.7759 c
892.9385 -300.7759 891.3125 -302.8501 891.3125 -305.4106 c
891.3125 -307.9712 892.9385 -310.0454 894.9453 -310.0454 c
896.9512 -310.0454 898.5771 -307.9712 898.5771 -305.4106 c
f
898.5771 -284.6919 m
898.5771 -282.1313 896.9512 -280.0571 894.9453 -280.0571 c
892.9385 -280.0571 891.3125 -282.1313 891.3125 -284.6919 c
891.3125 -287.2515 892.9385 -289.3267 894.9453 -289.3267 c
896.9512 -289.3267 898.5771 -287.2515 898.5771 -284.6919 c
f
907.501 -336.4888 m
907.501 -333.9292 905.873 -331.854 903.8672 -331.854 c
901.8613 -331.854 900.2363 -333.9292 900.2363 -336.4888 c
900.2363 -339.0493 901.8613 -341.1235 903.8672 -341.1235 c
905.873 -341.1235 907.501 -339.0493 907.501 -336.4888 c
f
907.501 -315.77 m
907.501 -313.2095 905.873 -311.1343 903.8672 -311.1343 c
901.8613 -311.1343 900.2363 -313.2095 900.2363 -315.77 c
900.2363 -318.3296 901.8613 -320.4048 903.8672 -320.4048 c
905.873 -320.4048 907.501 -318.3296 907.501 -315.77 c
f
907.501 -295.0503 m
907.501 -292.4917 905.873 -290.4165 903.8672 -290.4165 c
901.8613 -290.4165 900.2363 -292.4917 900.2363 -295.0503 c
900.2363 -297.6099 901.8613 -299.687 903.8672 -299.687 c
905.873 -299.687 907.501 -297.6099 907.501 -295.0503 c
f
U
928.9688 -335.7993 m
923.7188 -335.7993 923.5645 -339.5581 Y
923.5645 -381.7808 L
923.5645 -383.2935 923.4873 -384.7896 923.3369 -386.2642 c
921.085 -408.3774 902.3535 -425.689 879.6563 -425.689 C
874.541 -425.689 L
851.8438 -425.689 833.1123 -408.3774 830.8604 -386.2642 c
830.71 -384.7896 830.6328 -383.2935 830.6328 -381.7808 C
830.6328 -339.5581 L
830.4785 -335.7993 825.2285 -335.7993 v
819.9785 -335.7993 819.6328 -339.5581 Y
819.6328 -381.7808 L
819.6328 -384.4829 819.8291 -387.1392 820.208 -389.7378 c
823.8711 -414.854 844.6064 -434.4966 870.2178 -436.5024 C
870.2178 -452.2261 L
843.3838 -452.2261 L
833.3838 -466.5601 L
920.8135 -466.5601 L
910.8135 -452.2261 L
883.9795 -452.2261 L
883.9795 -436.5024 L
909.5908 -434.4966 930.3262 -414.854 933.9893 -389.7378 c
934.3682 -387.1392 934.5645 -384.4829 934.5645 -381.7808 C
934.5645 -339.5581 L
934.2188 -335.7993 928.9688 -335.7993 v
f
1 Ap
837.5625 -344.6431 m
832.5635 -344.6431 L
832.5635 -354.6431 L
837.5625 -354.6431 L
837.5625 -344.6431 L
f
921.5625 -344.6431 m
916.5635 -344.6431 L
916.5635 -354.6431 L
921.5625 -354.6431 L
921.5625 -344.6431 L
f
941.5625 -344.6431 m
936.5635 -344.6431 L
936.5635 -354.6431 L
941.5625 -354.6431 L
941.5625 -344.6431 L
f
817.5625 -344.6431 m
812.5635 -344.6431 L
812.5635 -354.6431 L
817.5625 -354.6431 L
817.5625 -344.6431 L
f
*U
*u
0 Ap
0 D
676.5898 -354.6431 m
671.5908 -354.6431 L
671.5908 -344.6431 L
676.5898 -344.6431 L
676.5898 -354.6431 L
f
1 D
594.4883 -381.7808 m
594.4883 -401.1548 610.1953 -416.8599 629.5664 -416.8599 C
634.6836 -416.8599 L
654.0547 -416.8599 669.7617 -401.1548 669.7617 -381.7808 C
669.7617 -365.2681 L
594.4883 -365.2681 L
594.4883 -381.7808 L
f
669.7617 -360.3931 m
669.7617 -352.5601 L
594.4883 -352.5601 L
594.4883 -360.3931 L
669.7617 -360.3931 L
f
669.7617 -303.6743 m
669.7617 -295.9702 667.2715 -288.8511 663.0615 -283.064 C
663.0615 -332.3892 L
663.0615 -333.4888 662.1611 -334.3892 661.0615 -334.3892 C
660.2734 -334.3892 L
659.1738 -334.3892 658.2734 -333.4888 658.2734 -332.3892 C
658.2734 -277.7124 L
656.2188 -275.8442 653.9404 -274.2183 651.4854 -272.8755 C
651.4854 -332.3892 L
651.4854 -333.4888 650.585 -334.3892 649.4854 -334.3892 C
648.6973 -334.3892 L
647.5977 -334.3892 646.6973 -333.4888 646.6973 -332.3892 C
646.6973 -270.7075 L
644.5273 -269.9155 642.2568 -269.3345 639.9102 -268.9839 C
639.9102 -332.3892 L
639.9102 -333.4888 639.0098 -334.3892 637.9102 -334.3892 C
637.1221 -334.3892 L
636.0225 -334.3892 635.1221 -333.4888 635.1221 -332.3892 C
635.1221 -268.73 L
635.1221 -268.687 635.1318 -268.6479 635.1348 -268.606 C
634.9834 -268.604 634.835 -268.5942 634.6836 -268.5942 C
629.5664 -268.5942 L
629.1494 -268.5942 628.7363 -268.6108 628.3223 -268.6255 C
628.3242 -268.6606 628.333 -268.6938 628.333 -268.73 C
628.333 -332.3892 L
628.333 -333.4888 627.4326 -334.3892 626.333 -334.3892 C
625.5459 -334.3892 L
624.4463 -334.3892 623.5459 -333.4888 623.5459 -332.3892 C
623.5459 -269.1196 L
621.1943 -269.5269 618.9238 -270.1675 616.7578 -271.0181 C
616.7578 -332.3892 L
616.7578 -333.4888 615.8574 -334.3892 614.7578 -334.3892 C
613.9697 -334.3892 L
612.8701 -334.3892 611.9697 -333.4888 611.9697 -332.3892 C
611.9697 -273.3325 L
609.5 -274.769 607.2217 -276.4956 605.1816 -278.4702 C
605.1816 -332.3892 L
605.1816 -333.4888 604.2813 -334.3892 603.1816 -334.3892 C
602.3936 -334.3892 L
601.2939 -334.3892 600.3936 -333.4888 600.3936 -332.3892 C
600.3936 -284.1948 L
596.665 -289.7681 594.4883 -296.4663 594.4883 -303.6743 C
594.4883 -346.894 L
669.7617 -346.894 L
669.7617 -303.6743 L
f
592.5898 -344.6431 m
587.5908 -344.6431 L
587.5908 -354.6431 L
592.5898 -354.6431 L
592.5898 -344.6431 L
f
691.5908 -344.6431 m
691.5908 -354.6431 L
696.5898 -354.6431 L
696.5898 -344.6431 L
691.5908 -344.6431 L
f
683.9961 -335.7993 m
678.7461 -335.7993 678.5918 -339.5581 Y
678.5918 -381.7808 L
678.5918 -383.2935 678.5146 -384.7896 678.3643 -386.2642 c
676.1123 -408.3774 657.3809 -425.689 634.6836 -425.689 C
629.5684 -425.689 L
606.8711 -425.689 588.1396 -408.3774 585.8877 -386.2642 c
585.7373 -384.7896 585.6602 -383.2935 585.6602 -381.7808 C
585.6602 -339.5581 L
585.5059 -335.7993 580.2559 -335.7993 v
575.0059 -335.7993 574.6602 -339.5581 Y
574.6602 -381.7808 L
574.6602 -384.4829 574.8564 -387.1392 575.2354 -389.7378 c
578.8984 -414.854 599.6338 -434.4966 625.2451 -436.5024 C
625.2451 -452.2261 L
598.4111 -452.2261 L
588.4111 -466.5601 L
675.8408 -466.5601 L
665.8408 -452.2261 L
639.0068 -452.2261 L
639.0068 -436.5024 L
664.6182 -434.4966 685.3535 -414.854 689.0166 -389.7378 c
689.3955 -387.1392 689.5918 -384.4829 689.5918 -381.7808 C
689.5918 -339.5581 L
689.2461 -335.7993 683.9961 -335.7993 v
f
567.5908 -354.6431 m
572.5898 -354.6431 L
572.5898 -344.6431 L
567.5908 -344.6431 L
567.5908 -354.6431 L
f
*U
*u
0 D
128.6406 -952.2168 m
127.3472 -952.2168 126.0371 -952.1836 124.6362 -952.1162 c
102.5581 -951.0381 81.5723 -940.7471 67.0601 -923.8828 c
65.2974 -921.835 63.6221 -919.6816 62.0801 -917.4824 c
53.2793 -904.9258 48.2344 -890.2256 47.4902 -874.9697 c
47.4229 -873.5967 47.3887 -872.249 47.3887 -870.9648 c
47.3887 -869.6807 47.4229 -868.333 47.4902 -866.96 c
48.2471 -851.4434 53.4414 -836.5342 62.5112 -823.8428 c
64.0845 -821.6416 65.7788 -819.502 67.5479 -817.4834 c
82.2422 -800.7197 102.5166 -790.8926 124.6357 -789.8135 C
125.6846 -789.7627 L
125.6846 -789.8906 L
126.7124 -789.7715 127.6875 -789.7129 128.6406 -789.7129 c
129.5938 -789.7129 130.5688 -789.7715 131.5967 -789.8906 C
131.5967 -789.7627 L
132.6455 -789.8135 L
154.7646 -790.8926 175.0391 -800.7197 189.7334 -817.4834 c
191.5024 -819.502 193.1968 -821.6416 194.77 -823.8428 c
203.8398 -836.5342 209.0342 -851.4434 209.791 -866.96 c
209.8584 -868.333 209.8926 -869.6807 209.8926 -870.9648 c
209.8926 -872.249 209.8584 -873.5967 209.791 -874.9697 c
209.0469 -890.2256 204.002 -904.9258 195.2012 -917.4824 c
193.6592 -919.6816 191.9839 -921.835 190.2212 -923.8828 c
175.709 -940.7471 154.7231 -951.0381 132.6455 -952.1162 c
131.2441 -952.1836 129.9341 -952.2168 128.6406 -952.2168 C
f
1 D
133.5967 -941.5459 m
143.2188 -938.6299 152.1753 -927.1777 157.8525 -910.4736 C
150.1143 -908.6807 141.9653 -907.6201 133.5967 -907.3174 C
133.5967 -941.5459 L
f
99.4287 -910.4736 m
105.106 -927.1777 114.0625 -938.6299 123.6846 -941.5459 C
123.6846 -907.3174 L
115.3159 -907.6201 107.167 -908.6807 99.4287 -910.4736 C
f
167.5483 -913.1943 m
164.4272 -922.5869 160.2334 -930.7646 155.2969 -937.1162 C
165.1392 -933.1338 174.0342 -926.9561 181.2495 -919.0742 C
177.1714 -916.8389 172.5723 -914.8643 167.5483 -913.1943 C
f
76.0317 -919.0742 m
83.2471 -926.9561 92.1421 -933.1338 101.9844 -937.1162 C
97.0479 -930.7646 92.854 -922.5869 89.7329 -913.1943 C
84.709 -914.8643 80.1099 -916.8389 76.0317 -919.0742 C
f
170.2832 -903.5098 m
176.6782 -905.5928 182.4849 -908.1406 187.5693 -911.0977 C
194.7183 -900.6357 198.9336 -888.5146 199.8042 -875.9209 C
173.8555 -875.9209 L
173.5488 -885.5205 172.3486 -894.793 170.2832 -903.5098 C
f
57.4771 -875.9209 m
58.3477 -888.5146 62.563 -900.6357 69.7119 -911.0977 C
74.7964 -908.1406 80.603 -905.5928 86.998 -903.5098 C
84.9326 -894.793 83.7324 -885.5205 83.4258 -875.9209 C
57.4771 -875.9209 L
f
133.5967 -897.3936 m
142.9912 -897.6943 152.0757 -898.8496 160.6274 -900.833 C
162.5098 -892.916 163.6201 -884.5449 163.9316 -875.9209 C
133.5967 -875.9209 L
133.5967 -897.3936 L
f
93.3496 -875.9209 m
93.6611 -884.5449 94.7715 -892.916 96.6538 -900.833 C
105.2056 -898.8496 114.29 -897.6943 123.6846 -897.3936 C
123.6846 -875.9209 L
93.3496 -875.9209 L
f
199.8042 -866.0088 m
198.9146 -853.1318 194.5396 -840.7793 187.106 -830.1621 C
182.0654 -833.0449 176.3457 -835.5283 170.0781 -837.5547 C
172.269 -846.5117 173.5386 -856.0742 173.8555 -866.0088 C
199.8042 -866.0088 L
f
163.9316 -866.0088 m
163.6094 -857.0791 162.4243 -848.4131 160.4063 -840.2188 C
151.9229 -842.1699 142.9136 -843.3086 133.5967 -843.6055 C
133.5967 -866.0088 L
163.9316 -866.0088 L
f
123.6846 -866.0088 m
123.6846 -843.6055 L
114.3677 -843.3086 105.3584 -842.1699 96.875 -840.2188 C
94.8569 -848.4131 93.6719 -857.0791 93.3496 -866.0088 C
123.6846 -866.0088 L
f
83.4258 -866.0088 m
83.7427 -856.0742 85.0122 -846.5117 87.2031 -837.5547 C
80.9355 -835.5283 75.2158 -833.0449 70.1753 -830.1621 C
62.7417 -840.7793 58.3667 -853.1318 57.4771 -866.0088 C
83.4258 -866.0088 L
f
133.5967 -833.6816 m
141.8447 -833.3838 149.896 -832.3457 157.5596 -830.5908 C
151.8774 -814.377 143.0322 -803.248 133.5967 -800.3838 C
133.5967 -833.6816 L
f
99.7217 -830.5908 m
107.3853 -832.3457 115.4365 -833.3838 123.6846 -833.6816 C
123.6846 -800.3838 L
114.249 -803.248 105.4038 -814.377 99.7217 -830.5908 C
f
155.2974 -804.8145 m
160.0947 -810.9834 164.1943 -818.8721 167.2769 -827.8975 C
172.1792 -826.2822 176.6816 -824.3818 180.6909 -822.2344 C
173.5898 -814.6572 164.8892 -808.6943 155.2974 -804.8145 C
f
76.5903 -822.2344 m
80.5996 -824.3818 85.1021 -826.2822 90.0044 -827.8975 C
93.0869 -818.8721 97.1865 -810.9834 101.9839 -804.8145 C
92.3921 -808.6943 83.6914 -814.6572 76.5903 -822.2344 C
f
*U
*u
u
149.6748 -388.0034 m
151.6484 -385.5864 151.292 -382.021 148.873 -380.0444 c
148.7959 -379.9829 148.7119 -379.9292 148.6309 -379.8735 C
160.3809 -366.4438 169.2578 -361.647 Y
157.1094 -351.7251 142.3477 -355.7837 131.9707 -365.1646 C
130.4531 -357.5083 L
131.9883 -355.6274 L
132.5859 -354.895 133.0029 -353.5239 132.9043 -352.5786 C
132.3857 -347.4243 L
132.2891 -346.481 131.6123 -345.2231 130.877 -344.6226 C
95.2979 -315.5649 L
94.5625 -314.9644 93.1904 -314.5503 92.2461 -314.644 C
87.0938 -315.1655 L
86.1514 -315.2603 84.8867 -315.9399 84.2881 -316.6724 C
78.9326 -323.231 L
76.6494 -311.728 L
60.3486 -331.688 L
72.0752 -331.6265 L
66.7148 -338.1899 L
66.1182 -338.9214 65.707 -340.2944 65.8027 -341.2358 C
66.3203 -346.3901 L
66.417 -347.3345 67.0947 -348.5972 67.8301 -349.1978 C
103.4102 -378.2554 L
104.1455 -378.856 105.5146 -379.2651 106.459 -379.1714 C
111.6133 -378.6489 L
112.5586 -378.5571 113.8174 -377.8774 114.415 -377.145 C
115.9512 -375.2651 L
123.7559 -375.2241 L
116.6406 -387.2603 115.6113 -402.5366 127.7598 -412.4595 C
131.3975 -402.3267 141.5508 -388.6548 V
141.6064 -388.7065 141.6553 -388.7612 141.7148 -388.8091 c
144.1348 -390.7847 147.7002 -390.4214 149.6748 -388.0034 c
f
152.1543 -304.8071 m
131.3779 -287.8394 L
106.2129 -318.6538 L
126.9883 -335.6206 L
152.1543 -304.8071 L
f
47.8721 -390.0913 m
68.6475 -407.0571 L
93.8154 -376.2407 L
73.0391 -359.2739 L
47.8721 -390.0913 L
f
U
u
u
0 D
202.2588 -385.0415 m
202.1221 -383.1831 202.0869 -382.9604 y
201.791 -381.0522 203.123 -379.3706 205.0479 -379.2192 c
205.0713 -379.2192 l
206.998 -379.0698 208.7988 -380.4702 209.0732 -382.3306 c
209.0732 -382.3306 209.2129 -384.0278 v
210.7363 -402.645 203.3916 -421.6802 187.8506 -434.3481 c
178.7715 -441.7476 168.1279 -445.9595 157.2695 -447.1479 c
155.7168 -447.312 155.7168 -447.312 y
154.0039 -447.3979 152.4082 -445.9019 152.1729 -443.981 c
152.166 -443.9448 l
151.9277 -442.0269 153.2529 -440.397 155.1211 -440.3218 c
155.1211 -440.3218 156.8047 -440.1274 v
166.2559 -439.0376 175.5098 -435.3374 183.4121 -428.8989 c
196.9707 -417.8521 203.4492 -401.2876 202.2588 -385.0415 c
f
U
u
1 D
174.5361 -418.0054 m
168.5313 -422.8979 161.4531 -425.6167 154.2705 -426.271 c
152.8398 -426.4009 152.8398 -426.4009 y
151.2734 -426.4097 150.1787 -427.9849 150.415 -429.9009 c
150.4248 -429.9673 l
150.6631 -431.8843 152.2783 -433.4106 154.0156 -433.3677 c
154.0156 -433.3677 155.5908 -433.2036 v
163.8936 -432.3179 172.0313 -429.106 178.9736 -423.4487 c
190.7236 -413.8745 196.3086 -399.5142 195.2354 -385.4399 c
195.1016 -383.6294 195.0791 -383.4985 y
194.7539 -381.5933 192.918 -380.1567 190.9883 -380.3032 c
190.9297 -380.312 l
189.0039 -380.4604 187.7109 -382.1021 188.0654 -383.9663 c
188.0654 -383.9663 188.2148 -385.6763 v
189.2207 -397.6353 184.5166 -409.8696 174.5361 -418.0054 c
f
U
u
165.6523 -407.1118 m
161.8955 -410.1763 157.46 -411.8804 152.9629 -412.2915 c
151.3818 -412.4351 151.3818 -412.4351 y
149.6387 -412.3267 148.4121 -413.8071 148.6484 -415.728 c
148.6699 -415.8765 l
148.9072 -417.7944 150.5957 -419.3853 152.4209 -419.4136 c
152.4209 -419.4136 154.0762 -419.2378 v
159.7637 -418.6362 165.3428 -416.4321 170.0957 -412.5552 c
178.1094 -406.0308 181.9355 -396.2476 181.2461 -386.6411 c
181.1074 -384.7896 181.0615 -384.5659 y
180.6582 -382.6763 178.7559 -381.2505 176.8281 -381.4058 c
176.6787 -381.4116 l
174.7568 -381.561 173.5547 -383.0923 174.0039 -384.8169 c
174.0039 -384.8169 174.1768 -386.4146 v
174.9688 -394.0474 172.0342 -401.9155 165.6523 -407.1118 c
f
U
u
159.9795 -386.5923 m
160.834 -390.0425 159.709 -393.8296 156.7773 -396.2153 c
155.0859 -397.5981 153.0566 -398.2935 151.0234 -398.3354 c
149.4082 -398.3735 146.793 -399.314 146.8779 -401.5015 c
147.0029 -404.6733 150.7373 -405.4526 152.457 -405.2808 c
155.5615 -404.9741 158.6143 -403.7856 161.2178 -401.6646 c
165.627 -398.0688 167.6875 -392.6714 167.207 -387.3989 c
167.0527 -385.644 165.8281 -382.0601 162.373 -382.5151 c
160.6963 -382.7437 159.6533 -385.2837 159.9795 -386.5923 c
f
U
U
*U
*u
u
0 D
444.96 -321.6797 m
336.2559 -321.6797 L
431.8975 -286.3345 L
444.96 -321.6797 L
f
1 D
280.0547 -342.4497 m
301.7354 -401.1152 L
301.7354 -334.437 L
280.0547 -342.4497 L
f
319.3652 -448.8198 m
320.0342 -448.5728 L
319.2734 -448.5728 L
319.3652 -448.8198 L
f
U
0 D
470.3594 -328.4253 m
470.3594 -441.8271 L
308.4805 -441.8271 L
308.4805 -328.4253 L
470.3594 -328.4253 L
f
1 D
443.9697 -362.2407 m
443.9697 -363.7671 442.1641 -364.7734 438.748 -364.7734 c
435.5771 -364.7734 432.502 -364.0449 430.5029 -363.3164 C
428.9893 -367.6875 L
430.8447 -368.4165 434.5527 -369.1099 438.3096 -369.1099 c
447.3359 -369.1099 451.5811 -365.7788 451.5811 -361.8599 c
451.5811 -358.564 448.8496 -356.4131 443.043 -354.8867 c
438.7969 -353.7422 436.9434 -353.083 436.9434 -351.5913 c
436.9434 -350.377 438.5049 -349.3364 441.7246 -349.3364 c
444.9453 -349.3364 447.2871 -349.9956 448.6045 -350.4463 C
450.2646 -346.1797 L
448.3125 -345.5552 445.5811 -345 441.8701 -345 c
434.1133 -345 429.4287 -348.0532 429.4287 -352.042 c
429.4287 -355.4419 432.9902 -357.5928 438.4561 -358.9458 c
442.4082 -359.9517 443.9697 -360.7837 443.9697 -362.2407 c
f
360.9238 -368.7627 m
381.9053 -368.7627 L
381.9053 -364.4263 L
368.3896 -364.4263 L
368.3896 -358.876 L
380.4912 -358.876 L
380.4912 -354.5747 L
368.3896 -354.5747 L
368.3896 -349.7178 L
381.2236 -349.7178 L
381.2236 -345.3813 L
360.9238 -345.3813 L
360.9238 -368.7627 L
f
327.2578 -368.7627 m
334.0898 -368.7627 L
334.0898 -361.7202 L
334.0898 -357.9048 333.9922 -354.6094 333.7979 -351.5215 C
333.9434 -351.4873 L
335.5537 -354.2275 337.7012 -357.2456 339.6523 -359.7432 C
346.6787 -368.7627 L
354.4854 -368.7627 L
354.4854 -345.3813 L
347.6543 -345.3813 L
347.6543 -352.2158 L
347.6543 -355.7197 347.7998 -358.876 348.2891 -361.9639 C
348.1426 -361.9639 L
346.6787 -359.3267 344.7266 -356.4131 342.7754 -353.9502 C
335.9443 -345.3813 L
327.2578 -345.3813 L
327.2578 -368.7627 L
f
382.9492 -424.4058 m
323.6113 -424.4058 L
323.6113 -430.3022 L
382.9492 -430.3022 L
382.9492 -424.4058 L
f
382.9492 -410.6523 m
323.6113 -410.6523 L
323.6113 -416.5488 L
382.9492 -416.5488 L
382.9492 -410.6523 L
f
382.9492 -396.8984 m
323.6113 -396.8984 L
323.6113 -402.7954 L
382.9492 -402.7954 L
382.9492 -396.8984 L
f
382.9492 -383.145 m
323.6113 -383.145 L
323.6113 -389.0415 L
382.9492 -389.0415 L
382.9492 -383.145 L
f
392.6396 -368.7627 m
400.7871 -368.7627 L
403.9102 -358.7021 L
404.6914 -356.3438 405.2275 -354.1235 405.8135 -351.4873 C
405.9121 -351.4873 L
406.3027 -354.1582 406.8389 -356.3438 407.4727 -358.7021 C
410.2549 -368.7627 L
418.3057 -368.7627 L
426.7969 -345.3813 L
419.2324 -345.3813 L
416.5498 -354.9561 L
415.8652 -357.7314 415.1348 -360.4717 414.6445 -363.0737 C
414.5479 -363.0737 L
414.0596 -360.4717 413.5234 -357.9741 412.791 -355.2339 C
410.1563 -345.3813 L
402.2529 -345.3813 L
399.4707 -354.9561 L
398.6416 -357.8354 397.8604 -360.6455 397.3242 -363.1777 C
397.2256 -363.1777 L
396.6895 -360.8188 396.0059 -357.8008 395.2744 -355.0254 C
392.7852 -345.3813 L
384.832 -345.3813 L
392.6396 -368.7627 L
f
455.2285 -424.4058 m
395.8896 -424.4058 L
395.8896 -430.3022 L
455.2285 -430.3022 L
455.2285 -424.4058 L
f
455.2285 -410.6523 m
395.8896 -410.6523 L
395.8896 -416.5488 L
455.2285 -416.5488 L
455.2285 -410.6523 L
f
455.2285 -396.8984 m
395.8896 -396.8984 L
395.8896 -402.7954 L
455.2285 -402.7954 L
455.2285 -396.8984 L
f
455.2285 -383.145 m
395.8896 -383.145 L
395.8896 -389.0415 L
455.2285 -389.0415 L
455.2285 -383.145 L
f
*U
*u
0 D
911.0566 -60.0034 m
922.8359 -60.0029 L
922.8359 -68.127 L
911.0547 -68.1274 L
911.0566 -60.0034 L
f
u
964.002 -47.2261 m
964.002 -199.7222 L
790.125 -199.7222 L
790.125 -47.2261 L
964.002 -47.2261 L
f
1 D
941.0176 -63.1274 m
936.3613 -67.7817 L
938.2715 -69.6919 L
942.9277 -65.0371 L
947.582 -69.6919 L
949.4922 -67.7822 L
944.8359 -63.1274 L
949.4922 -58.4722 L
947.582 -56.562 L
942.9258 -61.2173 L
938.2715 -56.5625 L
936.3613 -58.4722 L
941.0176 -63.1274 L
f
908.3555 -70.8281 m
925.5371 -70.8286 L
925.5371 -54.9619 L
908.3555 -54.9619 L
908.3555 -70.8281 L
f
809.7695 -180.729 m
807.498 -180.729 L
807.498 -190.3833 L
809.7695 -190.3833 L
809.7695 -180.729 L
f
814.0273 -180.729 m
811.7559 -180.729 L
811.7559 -190.3833 L
814.0273 -190.3833 L
814.0273 -180.729 L
f
946.6289 -183.4165 m
845.209 -183.4165 L
845.209 -180.6782 L
842.9375 -180.6782 L
842.9375 -183.4165 L
822.2852 -183.4165 L
822.2852 -187.6953 L
842.9375 -187.6953 L
842.9375 -190.3325 L
845.209 -190.3325 L
845.209 -187.6953 L
946.6289 -187.6953 L
946.6289 -183.4165 L
f
952.0137 -79.0278 m
802.1133 -79.0278 L
802.1133 -172.1602 L
952.0137 -172.1602 L
952.0137 -79.0278 L
f
U
u
0 D
911.7227 -125.5942 m
911.7227 -144.7358 896.2051 -160.2534 877.0625 -160.2534 c
857.9219 -160.2534 842.4043 -144.7358 842.4043 -125.5942 c
842.4043 -106.4521 857.9219 -90.9346 877.0625 -90.9346 c
896.2051 -90.9346 911.7227 -106.4521 911.7227 -125.5942 c
f
1 D
898.9258 -125.5942 m
867.125 -104.3638 L
867.125 -146.8242 L
898.9258 -125.5942 L
f
U
*U
*u
0 D
621.4688 -135.2358 m
618.8584 -135.2358 L
618.8584 -128.0566 L
621.4688 -128.0566 L
621.4688 -135.2358 L
f
1 D
632.3105 -125.3589 m
629.6982 -125.3589 L
629.6982 -137.9336 L
632.3105 -137.9336 L
632.3105 -125.3589 L
f
643.1484 -128.0566 m
640.5381 -128.0566 L
640.5381 -135.2358 L
643.1484 -135.2358 L
643.1484 -128.0566 L
f
610.6309 -125.3589 m
608.0186 -125.3589 L
608.0186 -137.9336 L
610.6309 -137.9336 L
610.6309 -125.3589 L
f
599.791 -128.0566 m
597.1797 -128.0566 L
597.1797 -135.2358 L
599.791 -135.2358 L
599.791 -128.0566 L
f
578.1113 -128.0566 m
575.5 -128.0566 L
575.5 -135.2358 L
578.1113 -135.2358 L
578.1113 -128.0566 L
f
u
0 D
701.4033 -159.563 m
706.8682 -159.563 L
706.8682 -205.0322 L
550.7773 -205.0322 L
550.7773 -105.0249 L
563.5664 -105.0249 L
563.5664 -82.0786 L
565.8223 -82.0786 L
565.8223 -54.6157 L
567.2295 -54.6157 L
567.2295 -31.916 L
572.3125 -31.916 L
572.3125 -54.6157 L
573.7891 -54.6157 L
573.7891 -82.0786 L
576.0449 -82.0786 L
576.0449 -105.0249 L
706.8682 -105.0249 L
706.8682 -131.5884 L
701.4033 -131.5884 L
701.4033 -159.563 L
f
1 D
650.0049 -187.772 m
568.1982 -187.772 L
568.1982 -191.063 L
650.0049 -191.063 L
650.0049 -187.772 L
f
650.0049 -178.3687 m
568.1982 -178.3687 L
568.1982 -181.6597 L
650.0049 -181.6597 L
650.0049 -178.3687 L
f
650.0049 -168.9658 m
568.1982 -168.9658 L
568.1982 -172.2568 L
650.0049 -172.2568 L
650.0049 -168.9658 L
f
650.0049 -159.563 m
568.1982 -159.563 L
568.1982 -162.854 L
650.0049 -162.854 L
650.0049 -159.563 L
f
650.4756 -120.5396 m
568.1738 -120.5396 L
568.1738 -142.6367 L
650.4756 -142.6367 L
650.4756 -120.5396 L
f
685.1104 -179.3091 m
685.1104 -177.1187 683.6973 -175.2759 681.7412 -174.5923 C
681.7412 -170.2144 L
678.4502 -170.2144 L
678.4502 -174.5923 L
676.4932 -175.2759 675.0791 -177.1187 675.0791 -179.3091 c
675.0791 -181.4995 676.4932 -183.3418 678.4502 -184.0259 C
678.4502 -188.8745 L
681.7412 -188.8745 L
681.7412 -184.0259 L
683.6973 -183.3418 685.1104 -181.4995 685.1104 -179.3091 c
f
692.7891 -138.876 m
692.7891 -131.8652 687.1064 -126.1816 680.0957 -126.1816 c
673.085 -126.1816 667.4014 -131.8652 667.4014 -138.876 c
667.4014 -145.8867 673.085 -151.5698 680.0957 -151.5698 c
687.1064 -151.5698 692.7891 -145.8867 692.7891 -138.876 c
f
U
588.9512 -125.3589 m
586.3398 -125.3589 L
586.3398 -137.9336 L
588.9512 -137.9336 L
588.9512 -125.3589 L
f
704.4033 -134.625 m
704.4033 -156.375 L
714.501 -156.375 L
714.501 -134.625 L
704.4033 -134.625 L
f
680.0508 -130.9092 m
675.6563 -130.9092 672.0928 -134.4722 672.0928 -138.8672 c
672.0928 -143.2622 675.6563 -146.8252 680.0508 -146.8252 c
684.4453 -146.8252 688.0088 -143.2622 688.0088 -138.8672 c
688.0088 -134.4722 684.4453 -130.9092 680.0508 -130.9092 c
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
