%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (papa) ()
%%Title: (newspaper-02.eps)
%%CreationDate: 6/2/2010 11:00 AM
%%Canvassize: 16383
%%BoundingBox: 8 4 1354 1105
%%HiResBoundingBox: 8.34277 4.18359 1353.2129 1104.2388
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 691.5 573.5 691.5 573.5
%AI3_TileBox: 385.5 177.5 997.5 969.5
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1383 1147
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -411 1229 0.5 1226 645 18 0 0 9 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 36 1 36 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 108 8
%%BeginData: 18649 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD59FFA8A8A8FD7BFFA8A7FD04A8FD78FFA8A8A8FFA8FFA8CFFD77
%FFA8A8A8FFA8FFA8FFA8FD76FFA8FFA8FFFFFFA8FFFFFFA8FD72FFA8A8A8
%FFA8FFA8FFA8FFA8FFA8A8A8FD70FFA8CAA8FFA8FFFFFFA8FFFFFFA8FFA8
%A8FD6DFFFD05A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8CFFD6BFFA8A8A8FD05
%FFA8FFFFFFA8A8A8FFA8FFCFFFA8FD68FFFD05A8FFA8FFA8FFA8FFA8FFA7
%A8A8FFA8FFA8FFA8A8A8FD0BFFA8FFA8A87DFD56FFA8A8A8FFFFFFA8FFFF
%FFA8FFA8A8A7FFFFFFA8FFCFFFA8FFA8A8FD08FFA8A87DA87DFD04A8FD52
%FFCFA8A1A8A8FFA8FFA8FFA8FFA8FFA7A8A8FFA8FFA8FFA8A8A8CFA8FFA8
%A8FFFFA8A87DA87D7D7DA8A7FD05A8FD51FFA8A8A8FFFFFFCFFFFFFFA8FF
%FFCFA8CFCFFFA8FFFFFFA8A87DA8A8FFA8A87DA8A7A87DA8A8CFA8FFA8FF
%A8CFA8CFA7FD50FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8
%7D7D52A8A7A77DA87DA8A7A8A8CFA8FFFD06A8A7FD04A8FD4CFFA8FFA8CF
%A8FFFFFFA8FFCFFFA8FFA8A8A8FFA8FFA8FFA8A87C7D7DA87DFD04A8FFA8
%FFA8FFA8CAA8CAA8A8A8CFA8A8A8FFA8CAFD4BFFA8A8A8FFA8FFA8FFA8FF
%A8FFA8A87DFD07A87DA87DFD04A8CFA8FFA8CFFD04A8A7FD0EA8FD4AFFA8
%A8A8FFFFFFCFFFFFFFA8FFA8A8A8FFA8A8A7FD04A8CFA8FFA8FFFFFFA8FF
%A8CFA8FFA8CFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8A8FD47FFA8A8A8FFA8
%FFA8FFA8FFA8FFA8A87DA8A7A87DA87DA8A8CFA8FFA8FFA8CFA8CFA8A8A8
%CAA8CAA8FFA8A8A8CFA8A8A8CFA8A8A8CFA8A8A8CF7DFD46FFA8A8A8FFA8
%FFA8FFA8FFA8CFA8A87DA8A1FD04A8FFFFFFA8FFA8FFA8CFA8CFA8FFCFFF
%A8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFFD05A8FD42FFA8A87DA8A8FF
%FD06A87DA87DA8A7A8A8FFA8FFA8FFA8FFA8A8A8CFA8CFA8FFA8FFA8A8A8
%CFA8CFA8A8A8CFA8A8A8CFFD0AA8A7A8FD41FFA8A8A8FFA8FFA8CFFD05A8
%CFA8FFA8FFFFFFCFFFA8FFA8FFA8FFA8FFCFFFFFCA7D7D527D51A8CFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8CFA8FD40FFA8A8A8FFA8A87D
%A8A1A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A87DFFCF7D277DA8
%A87D5252FFA8FFA8CFA8FFA8CAA8CFA8A8A8CFA8A8A8CFFD04A8FD3DFFA8
%A87DA8A8A87DA8A8CFA8FFFFFFCFFFA8FFA8FFA8FFA8FD05FFA8FFA87D52
%7DCFA8277DFD04FFA87DA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CF
%A8CFA7FD38FFA8FFA8A87DA87DA8A7A8A8FFA8FFA8FFA8FFA8A8A8CFA8FF
%A8FFA8FFA8A87D7D7CFFA8FFA852A8FF524B277DA7A8A8FFA8FFA8CFA8FF
%A8CFA8CFA8A8A8CFFD0BA8FD36FFA8A8A7A8A7A8A8FFA8FFFFFFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FFA8FF7D52275227A8FD04FF52FFFFA82752275252
%7D7CA8CFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD30FFA8
%FFA8A87DA87DA8A1CFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFCFFFA87D7C
%5227A8A8FF7D52275252FFCFFF7D7DFFFFA87D274B275227512776A8FFA8
%FFA8CFA8FFA8CFA8CFA8A8A8CFFD07A8FD2CFFFD04A87DFD04A8FFCFFFA8
%FFA8FFA8FFA8CFA8FD05FFA8A87CA8FFA8525151527DFFFFFFA1FD0452FF
%FF7D7DFFCFFFFFA87D7D52522752277DFFFFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FFA8CFA8CFA8A8FD25FFA8FFA8A8A7A87DA87DFD04A8FFA8CFA8CFFD05
%A8CFA8FFCFFFA8A87D7D5252522752FFFFFF525227517DFFA8FF27522727
%7DFF52A8A8FFA8A8A8FFA8CFA87D272752FFA8CFA8FFA8CFA8CFA8A8A8CF
%FD06A8A7CFA7FD24FFA8A87DA87DA8A8CFA8FFCFFFA8FFA8CFA8FFA8FFA8
%FFFFFFA8CAA8A1525251527DFFFFFFA852A8FFFFFF52522752A8FF7D7D7D
%5251527D7DA8FFFFFF7DA8FFFFCFFFFF7D27A8FFFFA8FFA8FFA8FFA8FFA8
%FFFD04A8A7A8A8CFA8A8A8FD1EFFA8A87DA87DA77DFD04A8FFFD07A8CFA8
%CFA8FFA8FFA8A7525252CFA87D275227A8FFA8A7FF7DFFCFFFFFA8275227
%52FF7D7DFF525227277CFFA8FFFFA727A7A8FFA8A7277DA8FFA8FFA8FFA8
%FFA8CAA8A87DA87DA8A8CFA8A8A8CFA8A8FD19FFA8CFA8A87DA87DA8A8CF
%A8FFA8FFA8CFA8CFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA87D51FFCFFFA852
%27527DFF7D7DFFFFCFFD04FFA82752277D52FFFFFF525227A8FFFFA8FFA8
%522752527D52A8FFFFA8FFCAFFFD04A8A1A8A8CFA8FFA8A8A8FFA8A8A8FF
%A8FD19FFA87CA8A7A8A8CFFD06A8A7FD04A8CFA8A8A8CF7D7C52522752A7
%FFA8FFA852A8FFA8FF5252277DA85252FFA8FFA8FFA8FFFF7D27522752FF
%FFFFA82752A8FFA8FFA8FF7DFD04A8FFA8FFA8A87DA87DA8A7A8A8CFA8CA
%A8A87DA77DA8A8CFFD05A8FD18FFA8A8A8CFA8CFA8A8A8CFA8CFA8FFA8FF
%A8FFA8FFA8FFA8A87D52275227527DFFFFFF52A8FFFFFF7D2752527D5152
%CFFD08FF7D27527DFD04FF7D52FD0BFFFD05A8CFA8FFCFFFA8A8A7A87DA7
%7DA77D7D7DFFA8CFA8FFA8FD1AFF7DA8A8A8A7FD04A8CFA8A8A8CFA8A8A8
%CFA8A8A8FFA8FF52522752275252A8FF7D7CFFA8FF7D522752A8FF52A8FF
%FF52FFFFFFA8FFA85227A8FFFFA8FFA8A8A8FFFFFFA8FFA8A87DA8A7A8A8
%FFA8FFA8A8A7A7FD097DA8A7A8A8CFFD05A8FD19FFA7A8CFA8A8A8CFA8CF
%A8CFA8CFA8FFA8CFA8FFA8FFA8FFFF7D7DCF52522752517D7D7DFFFFCFFF
%515227A8FFA8A8FFA852A8FD05FFA87DCFFD07FFA8CFA8A8A7A8A8FFA8FF
%FFFFA8A87DA77DA77D7D7DA77DA8A7CFA8FFA8FFA8FFA8FFA8CFA8A8FD19
%FF7DFD0EA8CFA8A8A8CFA8A8A8FF7D7CA8FF7D522752275227FFA8FFA852
%27277DFFFFFF7D5227FFA8FFA8FFA8FFFFFFA8FFA8A8A7A87DA8A8FFA8FF
%A8FFA8A87DA77D7D7CFD047DA87DA8A8CFA8CFA8FFA8CFA8CFFD06A87DFD
%19FFA87DFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFA852FFFF
%FFA87D27525152A8FFCFFF7D522776A77D525252A8FD08FFFD05A8FD05FF
%CACFA7A87DA77DA77DA77DA8A7A8A8FFCFFFA8FFCFFFA8FFA8A8A7A87D7D
%7DFFA8CFA8A8FD19FFA8A7FD09A8CFA8A8A8CFA8A8A8FFA8CFA8FFA852A8
%FFA8FFA8A8525127A8FFFFA87D2752527D7DA8A8FFFFFFA8FFA8A8A1FD04
%A8FFFFFFA8FFA8A87DA1FD077DFD04A8FFA8FFA8FFA8FFA8CFA8A77D7D7C
%7D7DFD07A8A7FD1AFF7DFD04A8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FF
%A8FF52A7CFFFA8FFFFFF7D517CFFA87D7DA8A8FD05FFA8CFA8A8A7A8A8FD
%05FFA8A87DA77DA77D7D7DA77DA8A8FFA8FD05FFCFFFFFFFA8A87D7D7C7D
%7DA8A8FFA8A87DA87DA8A8CFA8A8A8FD19FFA8A7A8A7FD0CA8CFA8A8A8CF
%A8CFA87D52FFA8FFA8FFA8FF7D7DA8FFCFFFFFFFA8A8A7A87DA8A8FFA8FF
%FFFFA8A87DA77D7D7CFD047DA8A1A8A8FFA8FFA8FFA8FFA8FFA8A87D7D7C
%7D7CA77DA8A8A8A7A77D7D7C7D7DA8A8A8A7FD04A8FD18FFA8A8A8CFA8CF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D5276A8CFFFA8FD05FFCFFF
%FD05A8FD07FFA8A87DA77DA77D7D7DA8A7A8A8FD0BFFA8A87D7D7DA8A7A8
%A8FFA8A87DA77D7D7DA8A8CFA8A87DA8A8CFA8FFA8FD17FFA87DA87DFD06
%A8CFA8A8A8CFA8A8A8CFA8CAA8FFA8CF7D7D7DA8A8FFA8FFA8FFA8A87DA8
%A7A8A8FFFFFFA8FFA8A8FD047D7CFD047DA8A8FFA8FD07FFA8FFA8A87D7D
%7C7D7DA8A8FFA8A87D7D7C7D7DA7A7CFA8A87DA87D7D7C7DA7FD06A8FD14
%FFA8A8A8FFFD05A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFCAFFFF
%FFA8CAA8A8A7A8A8FFA8FFFFFFA8A8A7A77DA77D7D7DA77DA8A8FD0BFFA8
%A8A8FFFFA87DA8A8FFCAFFA8A87D7D7DFD04A8FFA8A8FD057DA8A8CFA8A8
%A8CFA8FFA8A8FD13FFA8A8A8FFA8FF7DFD0CA8CFA8A8A8CFA8CFA8FFA8A8
%7DA87DA8A7A8A8FFA8FFA8FFA8FFA77D7CFD047DA8A7A8A8FD09FFA8A87D
%7D7C7D7DA8FFFFA8FFA8A87D7D7C7D7DA8A8CFA8A87D7D527D7DA8A7A8A8
%A87D7D7C7D7CFD06A8FD10FFCFFFA8FFFFFFA8FFA8A8A8CFA8CFA8CFA8FF
%A8CFA8FFA8FFA8FFA8CFFD05A8CFA8FFCFFFA8CAA7A87DA8FD04FF7DA8A7
%A8A8FD0BFFA8A87D7D7DA8A8FFFFFFA8FFFFFF7D7D7DA8A8FFA8FFA8A87D
%7D7DA8A8FFA8FFA8A87D7D7DA77DA8A8FFA8FFA8FFA8A8FD0FFFA8A8A8FF
%CFFFA8FFA8FF7DFD04A8CAA8A8A8CFFD06A87DA87DA8A8FFA8FFA8CFA7A8
%FD047D7C7D7DFFA8FFA8CFA8FD07FFA8FFA8A8FD057DFFA8FFA8A87D7D52
%7DA8FFA8FFA8CFA8A87D7D7CA17DA8A8FFA8A87D7D7C7D7DFD05A87D7D52
%FD04A8CFA7FD0EFFA8CFA8FFCFFFFFFFA8FFFFA87DFFA8A8A8FFA8CFA8A8
%A7A87DFD04A8FFA8FFA8A8A7A77DA77D7D7DA77D7D7DA8FFFFCFFD07FFA8
%A8FD057DA8A8FFFFFFA8A87D7D7DA8A8FFA8FFFFFFFD057DA8A8FFA8A8A7
%FD047DA8A8FFA8A8A7A87D7D7DA7A1A8A8FFFD05A8FD0AFFA8A8A8CFA8FF
%A8FFA8FFA8CAA8A87D7DFD04A87DA87DA87DFD04A8CFA8A87DA8FD0E7D7C
%FFA8FFA8FFA8A87D7D7C7D7DA8A8FFA8FFA8A87D7D7C7D7DFFA8FFA8A87D
%7D7DFFA8A8A8FFA8A87DA77D7D7C7D7DA8A8CFA8A87D7D7C7D7DFD05A87D
%7DA7A8A8A8A7A8FD09FFA8A8A8FD05FFCFFFFFFFA8A8A7CF7DCFFD05A8CF
%A8FFFD04A8A7A87DA87DA87DA87DA77DA87DA77DA7FD047DA8FD04FFA77D
%A8A8FFCFFFA8A87D7D7DA7A1FFFFFFCFFFA8A77D7D7DA8A8FFFFFFA8A87D
%7D7DA7A7A8A8FFA8A87DA77D7D7DA8A8FFA8CFA8A77D7D7DA7A7FFA8A8A8
%CFA8FD09FFA8A1FFA8FFA8FFA8FFA8FFA8A8A8FFA8A87DCFFD06A87DA87D
%A77DA87DA77DA77D7D7DA7FD0A7D52A8FFFFA8FFA8FFA8A87D7D7C7D7DA8
%A8FFA8FFA8A87D7D7DA8A8FFA8FFA8A87DFFFFA87DA8A8FFA8A8A77D7C7D
%7DA7A1CAA8A8A7A87D7D7C7D7DA8A8CFA8A87DCFFD04A8FD0AFFA8A8FFFF
%FFA8FFCFA8A7FFFFFFA8FFA8A8A8CFA8CFA7A8A7A87DA8A7A87DA87DA87D
%A87DA77DA77DA77DA7FD077DFFFFFF7DA77D7D7DA8A8FFCFFFA8A87D7D7D
%A7A7FFFFFFA8A8FD057DA8FD04FFA8A87D7D7DFD04A8FFA8A8FD057DA8A8
%CFA8A8FD057DA8A8CFA8CFA7FD0AFFA8A8A8FFA8FFA8CFA8FFA8FFFD04A8
%7DFD05A87DA87DA77DA87DA77DA77D7D7DA7FD067D7C7D7C7D527D767DA8
%FFA87D7DA8A8FFA8A87D7D527D7DA8A8FFA8A87D7D7C7D7DA8A8FFA8FFA8
%A8A8FF7D7D7DA8A8CFA8A87D7D527D7DA7A7A8A8A87DA77D7D527D7DA8A8
%CFFD07A8FD0AFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFA8A7A8FFA8CFA8A8A7
%A8A1A8A7A87DA87DA87DA87DA77DA8FD0A7D7CFFFFFFA8FFA8A77D7D7DA8
%A8FFFFFFA8A87D7D7DA8A8FFCFFFA8A87DA17D7DA8FFFFFFA8FFA8A87D7D
%7DA8A8FFA8FFA8A8FD057DA8A8FFA8FFA8FFA8FFA8FFA8CFA8FD0CFF7DFF
%A8FFA8FFA8FFA8FFA8A87D527CFD05A87DA87DA87DA87DA77DA77DA17DA7
%FD067D7C7D7C7D527D7C7C7DFFA87D7CA8A8CFA8FFA8A87D7D7C7D7DA8A8
%FFA8A87D7D7C7D7DA8A8FFA8A8A8FFA87D7C7D7DA8A8FFA8A87D7D7C7D7D
%A8A7A8A8FFA8FFA8FFA8A87DA77DFD05A8A7FD0BFFA8A8FFCFFFA8FFA8FF
%A8A87D7D7DA8A7CFA8CFA8A87DA8A7A87DA87DA87DA87DA77DA7FD0A7D7C
%7D76A8FFFFA8FFA8A8FD057DA8A8FFFFFFA8A87D7D7DA8A8FFA8FFA8A87D
%7D7DFFFFFFA8FFA8FFA8A77D7D7DA7A1CFA8FFA8FFCFFFA8FFA8A8FD057D
%A8A8CFA8CFA8A8FD0BFFA8A8A8FFA8FFA8FFA87D52A8A8A752A8A8A8A7A8
%7DA77DA87DA77DA77D7D7DA7FD067D7C7D7C7D527D527D527D7CFFA8A87C
%7D7DA8A8CFA8FFA8A87D7D7C7D7DA8A8FFA8A87D7D527D7DA8A8FFA8FFA8
%A87D7D527D7DA8A8FFA8FFA8FFA8CFA8A87D7D527D7DA17DA8A8A87DA7A8
%A8A7CAA7FD0CFFA8CFFFFFA8FFFFA87DFFA87D52A8A7CFA8CFA8A87DA8A7
%A87DA87DA87DA87DA87DA7FD0A7D7C7D7C7DA8FFA8CFA8FFA8A87DA17D7D
%7DA8A8FFA8FFA8A77D7D7DA8A8FFFFFFA8A87DA8FFFFA7A8A8FD07FFA8CF
%A7A77D7D7DA7A7CFA8CFA8A8FD057DCFA8CFA8A8A8FD0CFF7DFFA8FFA8FF
%A8A87D7D7DA87D7DA8A8A7CFA7A77DA87DA77DA87DA17DA77D7D7C7D7D7D
%7C7D7C7D527D527D527D52A8CAFFA77D7C7D7DA8A8FFA8CFA8A87D7D7CA7
%A7A8A8FFA8A87D7D7C7D7DA8A8FFA8FFFFFFA8FFA8A8A7A87D7D7C7D7DA8
%A8CFA8A87D7D7C7D7DA8A7FD05A8A7A8A8A8FD0CFFA8A8FFA8FFA8FFA77D
%A8CF7D527DCFFD04A8A7A87DA87DA87DA87DA77DA7FD067D7C7D7D7D7C7D
%7C7D527DA1FFA8A8A8FFA8FFA8A8FD057DCFA8FFA8CFA1FD047DA8A8FFCF
%FFA8A8A8FFA8FFA8A8FD057DA8A8FFA8CFA7A77D7D7DA7A7CFA8A8A7A87D
%7D7CFD04A8CFA8FD0DFFA8A8FFA8CFA8FFA87D527DA8A77DCFFD04A87DA7
%7DA77DA17DA77D7D7C7D7C7D767D7C7D527D527D527D527C527DA8FFA8A8
%7D7D527D7DA8A8FFA8A87DA77D7D7CFD04A8FFA8A87D7D7C7D7DFFA8CF7C
%7D7DA77DA8A8A8A1A87D7D527D7DFD05A87D7D7C7D7DA8A7A8A7FD06A8FD
%0CFFA8A8CFFFA8FFCFA87DFFA87D52A8A8CFA8FFA7A87DA87DA87DA87DA7
%7DA7FD0A7D7C7D7C7D527D7CFFFFA87DA8A8FFFFFFA8A87D7D7DA8A8FFA8
%FFA8A87DA77D7D7DA8A8FFA8CFA8FFA8FFA8FFA8A87D7D7DA77DA8A8FFA8
%A87DA77D7D7DA8A8CFA8CFA8A87DA7A8CFA8FFA8FD0EFF7DCFA8CFA8FFA8
%A87D7D52A87DFD05A87DA77DA87DA77DA77D7D7C7D7D7D7C7D7C7D527D52
%7D527D527C527DA8FFA8FFA8A87D7D7C7D7DA8A8FFA8A87D7D7C7D7DA8A8
%FFA8CFA8A87D7D52A8CFFFA77D7C7D7DFD05A8A7FD067DA8A8A8A7A87D7D
%527D7DA8A7CFFD05A8FD0EFF7DFFA8FFA8FFA87DA8A87D7DA8CFA8CFA7A8
%7DA87DA87DA1FD087D7C7D7D7D767D7C7D527D527D52A8FFFF7D7D7DA8A8
%FFCFFFA8A87D7D7DA8A8CFA8FFA8A8FD057DA8A8FFA8FFFFA87DFFA8FFA8
%A8FD057DA8A8FFA8A87DA17D7D7DFD05A8A77DA7FFFD04A8FD0EFFA8A8FF
%A8A8A8CFA8A8527D7DFD05A8FD087D7C7D7C7D527D7C7D527D527D527D52
%7C527D52527DFFA8A8A8FFA8A87D7D7C7D7DA8A8FFA8A87D7D527D7DA8A8
%FFA8A87DA77C7DA8FFA8A87D7D7C7D7DFD05A87D7D7CFD047DA8A8A87DA7
%7D7D527D7DFD05A87DFD0EFFA8A8A8FFA8FFA8A87DA8A87D7DFFA8CFA8A8
%7DA77DA7FD0A7D7C7D7D7D7C7D7C7D527D527D527DFFFFA8FD047DA8A8FF
%A8FFA8A87D7D7DA8A8FFCFFFA8A87D7D7DA7A7A8A8FFFFFF7DA8A8FFA8FF
%A8A87D7D7DA77DA8A8CFA8A8FD057DA8A8CFA8A87DCFFD04A8FD0FFF7DFD
%04A8CFA8A87D7D52A7FD04A8FD087D7C7D7C7D527D7C7D527D527D527D52
%7C527D525252FFCFA8A7FFA8CFA8A87D7D7C7D7DA8A8FFA8A87D7D7C7D7D
%A8A8CFA8A87D7D7DFFA8CFA8A87D7D767D7DA8A8CFA8A87D7D7C7D7DA8A7
%A8A8A87D7D7C7D7C7DFD04A8A7CFFD0FFF7DFFA8FFA8FFA87D7DA87DFD05
%A87DA7FD0A7D7C7D7D7D527D7C7D527D527D527D527CA8FFFFA8FD057DA8
%A8FFA8CFA7A17D7D7DA8A8FFA8FFA8A87D7D7DA77DCFA8FFA77D7DA8A8FF
%A8CFA8A77D7D7DA77DA8A8CAA8A8FD057DFD0AA8FD0FFFA87DCFFD06A852
%7DA8A8A7A87D7D7C7D7D7D7C7D7C7D527D527D527D527D527D527C527C52
%52527652A7A8FF7DA7A8FFA8A87DA77D7D767D7DA8A8FFA8A87D7D7C7D7D
%A8A8CFA8FFA8FFA8CFA8A8A7A87D7D527D7DFD05A87D7D7C7D7DA8A7A8A7
%A87D7D527D7DA8A1FD04A8FD0FFFA8A8FFA8FFA8CF7C7D7DA8A8CFA8A87D
%A7FD0A7D7C7D7D7D527D7C7D527D527D527D52527DFFFFFFA8A87D7D7DA7
%A7A8A8FFA8A87DA77D7D7DA8A8FFCFFD05FFA8CFA8FFA8FD047DA8A8FFA8
%A87DA87D7D7DFD05A8A7A7FD057DFD04A8CAA8CFA7FD10FFFD05A8CFA8A8
%A7A87DFD04A87D7C7D7D7D7C7D7C7D527D767D527D527D527D527C527D52
%52527C5252A8FFA77D7DA8A8CFA8A87D7D7CFD047DA8A8FFA8FFCFFFA8FF
%A8A87D7D7CA8A8FFA8A8A8CAA7A7FD057DA8A8A8A7A77D7D527D7DA8A7A8
%A7A87D7D7DA8A7FD04A8FD10FF7DFFA8CFA8FFA8A87DFD04A8CFFD0A7D7C
%7D7C7D527D7C7D527D527D527D527C525227A8CAFFA8CFA8A87D7D7DA7A7
%A8A8FD07FFA8A87D7D7C7D7DA8A8FFA8FFA8A8FD057DA8A8CFA8A87D7D7C
%7D7DFD05A8FD057DA8A7FD06A8CAFD10FFA87DCFA8A8A8CF7D5252FD05A8
%7C7D7C7D7C7D527D527D527D527D527D527C527C5252527C525227277DFF
%A87D527D7DA8A8CFA8FFA8FFA8FFA8A87D7D7C7D7CA7A1A8A8CFA8A87CA1
%A8FF7DFD05A87D7D527D7C7D7DA8A8A87DA77D7D7C7D7DA8A7A87D7D277D
%A8A87DA8A8FD11FFA8A8CFA8FFA8A87DA8A8CFA8FFA8FD057D7C7D7C7D52
%7D7C7D767D7C7D527D527D527D52522752277DFFFFA8FFA8FD05FFA8CFA8
%A87D7D7DA8A7A8A8FFA8A8FD057DA8A8FFA8FFA7A8FD057DA8A8CAA8A87D
%7D7DA77DA8A8CAA77D52522752527DFD06A8FD11FFFD07A8A752FD05A87D
%7D527C52525152525251FD095251522752FD042752FFA8FFA8FFA8FFA8A8
%7D7D7C7D7DA8A8CFA8A87D7D7C7D7DA7A7CFA8A8A1A8A8FFA87D7DFD05A8
%7D7D7C7D7DA8A8A8A7A852522752275252A87DA87D7DA7A87DA87DFD12FF
%7DFD04A8CFA77D7DFFA8A8A87DFD0A525152515227525152275227522752
%27522752A8FFA8A8FD057DA8A8FFA8CFA7A87D7D7DFD04A8FFA8A8FD057D
%FFA8FFA8A8A7A77D7D7DA8A7CFA8A87D7D52522752527D7DA87D7D525227
%5252FD06A8FD11FFCF7DFD05A87D7DA8A8A7A8FD04525152515227522752
%2752275227522751275227272751272727A8A8A87CA77DA8A8CFA8A87D7D
%7C7D7DFD05A87D7D527D7DA8A7A8A8A8A1FFA87D52A17DA8A8A87D7D5252
%2752527D7DA87D7D5252275227527DA87D7D7DA87DA87DA8FD12FFA8A8CF
%A8CFA8A87DCFFD04A852525276FD0A525152515227522752275227522727
%7DFFA8FFA8A87DA77D7D7DA8A8FFA8CFA8A77D7D7DA8A8FFA8FFA8A87D7D
%7DA8CFFFA8CFA8A752522752527D7DA8A7A87D7DFD04527CA8A7A87D7D52
%5227A7A8A8A7A8A8FD12FFFD06A8A77D7DCFA8A87D525252515252522752
%515227522752275227512752272727512727277DA8FF7D7D7DA7A7CFA8A8
%A1A87D7D7C7D7DA8A8CFA8A87D7D7C7D7DA8A8A87DA8A8A82752275276A8
%7DA87D7D52522752527D7DA87D7D5252275227FD047DA87DA8A8FD14FFFD
%06A87DFD05A8FD0852515252522752515227522752275227522752272727
%FFA8CAA8FFA8A8FD057DA8A8FFA8A8A1FD047DA8A8CFA8A87D7D52527DCF
%A87D7DA87D7D52522752527D7DA87DA87D5227FD0452A77DFD04A8FFA8FD
%18FF7DA8A8A87DA87DA8A7A8A85227525152275227522752275227522751
%275227272751FD0627A8FFA87D527D7DA7A7A8A8A87DA77D7D7CA77DA8A8
%A87D7D51522752527D7DA8A1A87D52275227527CA87DA77D7D2752275252
%7D7DA8A7A8A7FFA8FFA8FD1BFFCFA7CAA8CAA7A8A8CFA8CF7DFD0B524B52
%515227522752275227272752527D7DFFCFCFA7FFA8CFA8A87D7D7DA8A7A8
%A8FFA87D52522752527D7DA8A7A87D5252A8A87D52A8A7A87D7D52522752
%527D7DFD04A8FFA8FD22FFFD06A87DFD04A87D2752525227525152275227
%5227522751FD0527527C7DA8FFA8FFA8FFA8A87D7D7C7D7DFD05A8765227
%5227527DA87DA87D7D52522752527DA7A8A77D5252275227527D7D7DFD04
%A8FD28FFFD04A8A7A8A7CFA8CFA7FD055251525252275227522752515252
%7DA8CFA8FFFFFFA8A87DA8A8FFA1A8A8CFA8A87D7D525227527DA77DA87D
%7D52522752527D7DA87DA752A8A8A8525252A77DFD04A8FFA8FD2CFF7DA8
%A8A87DA8A8A8A7A8525227522752275227512752527D7DA8A8FFA8FFA8A8
%7DA17D7D767DA7CFA8A87D7D52522752527D7DA87D7D52522752277C7DA8
%7DA75252272727527DA87DFD04A8CFA8FFA8FD30FFA7A8A8A87DCAA8A8A8
%7D515252524B52527D7DA8A8FFCFFFA8CFA8A87D7D7DA17DA8A8CFA8A8A8
%FF7D52527D7DA8A7A87D7DFD04527DA8A8A87D7D52522752527D7DFD04A8
%FFA8FD37FFA8A7A87D7DA8A8A7CF7D52527D7D7DA7A8A8CFA8CFA8A87D7D
%7C7D7DA8A8A8A7A87D52275227A7A8A87DA87D7D52522752527D7DA87D7D
%52522752277D7DA77DFD04A8FD3CFFFD04A87DFD05A8A7A8A8FFA8CFA8A8
%FD057DA7A7A8A8A87D7D52522752527D7DFD04A87D2752527D7DA87DA87D
%5227FD0452A8A1FD04A8CFA8FD40FF7DA8A77D7DA8A7A8A7A8A8A87D7D7C
%7D527D7DA8A7A87D7D52522752527D7DA87DA752522752A8A87DA87DA77C
%5227272752527D7DFD06A8FFA8FD44FF7DA87DFD04A8CFFD057DA8A8CFA8
%A852522752527D7DA8A8A87D7DFD0552FD05A852522752527D7DFD04A8FF
%A8FD4BFFA87DA87DA8A8A8A7A87DA8A7A87D522752275252A77DA87D7D52
%522752527D7DA87D7D52527DA8FD057DFD04A8FFCFFD4FFFA8A87DA7CFA8
%A8A77D52522752527D7DA8A77D52522752527D7DA8A7A87D522752275252
%FD04A8CFA8FFCFFD54FFA7A87DFD04A87D277D7DA87DA876522752275252
%A87DA87D7D52522752527D7DA8A7FD04A8FFA8FD58FFA7A87DFFFD04A87D
%7D5252275252A8A8A87D7D52522752527D7DFD04A8FFA8FD5FFFA87DA7A8
%A8A7A85252527D7DA87D7D5252274B27527C7D7DFD04A8FFA8FD63FFA87D
%FD05A8A1A87D7D4B522752527D7DA8A8CFA8FFA8FD68FFA87DA1A87DA87D
%522752527D7DA8A7FD04A8FFA8FD6CFF7DFD05A87DFD04A8CFA8FFCFFD72
%FF7DA87DFD04A8FFA8FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD4DFFA8A8CFA8FD07FFA9
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFAFFD44FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD22FFA9FFFFFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD38FFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFFD23A8A9A8A8A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD28FFA8FFFF
%FFA8FFA8FFA8FFFD0AA884FD10A8AFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD30FFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFD1FA8AFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FD32FFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFAFFD5CFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FDFCFFFD36FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
8 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 1 2 Bd
[
<
434241403F3D3C3C3A393837363535343231302E2D2C2B2A2A2928272625252423212121201F1E1C
1C1C1B1A1A1917181716151413131312121110100E0E0D0C0C0B0B0A0A0909090808070706060605
050505040404030303020202010101000000010000000000000000000000
>
<
333231302F2E2D2C2B2A2B2A29282726242322232221201F1E1D1E1D1C1B1A1A1918181817161515
14131313121111100F0E0F0E0E0D0C0D0C0B0B0A0B09080907080707060706060505040504040303
020303020201020201010100000001000000000000000000000000000000
>
<
3231302F2E2D2C2D2C2B292928272625252423212020201F1F1E1C1D1C1B1B191A19181617161515
14131313121111100F100F0E0E0D0E0C0B0C0A0B0909090808070706070506050504040404030303
030302020202020201010101000000000000000000000000000000000000
>
0.000031
<
BCBDBEBFC0C1C2C3C4C5C6C7C8C9C9CACBCCCDCECFD0D1D2D2D3D4D5D6D7D7D8D9DADBDBDCDDDEDF
DFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2F3F3F4F4F5F5F6F6F6F7
F7F8F8F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFEFEFEFFFFFFFFFFFF
>
<
BEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFCFD0D1D2D3D4D5D5D6D7D8D9D9DADBDCDCDDDEDFDF
E0E1E2E2E3E4E4E5E6E7E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F7F7
F8F8F8F9F9FAFAFAFBFBFBFCFCFCFCFDFDFDFDFEFEFEFEFEFFFFFFFFFFFF
>
<
C0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECECFD0D1D2D3D3D4D5D6D7D7D8D9DADBDBDCDDDEDEDFE0E0
E1E2E3E3E4E5E5E6E7E7E8E9E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F7F7F7
F8F8F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFEFEFEFEFFFFFFFFFFFF
>
4 %_Br
[
0.7 0 34.5455 0 %_BS
%_0.7 0 34.5455 0 Bs
1 0 50 100 %_BS
%_1 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 10)
(Unnamed gradient 10) 0 2 Bd
[
<
000000010102030405050606070809090A0B0B0D0E0F1011121213141516171818191A1B1C1D1E1E
1F202123242525262728292A2B2B2C2E2F3032333334353637383A3A3B3C3D3E3F4041424344
>
<
000000000001020203030405040505060708090A090A0B0C0C0E0E0E0F1010111213141314151517
171819191A1A1C1C1D1E1F1E1F212223242525262728292A2B2B2B2C2D2E2F30313232333435
>
<
000000000102030304040505070808090A0A0B0C0E0F1011121213141516171819191A1C1D1D1E20
21222325262728292A2B2B2D2E2F3031323335363738393A3B3C3E3E3F404142434446474849
>
0.000031
<
FFFEFDFCFCFBFAF9F8F7F6F6F5F4F3F2F1F0F0EFEEEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDE
DDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7C6C6C5C4C3C2C1C0C0BFBEBD
>
<
FFFEFDFCFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEEEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E1E0DFDEDD
DCDBDADAD9D8D7D6D5D4D3D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBFBEBDBC
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
>
4 %_Br
[
0.267521 0.206302 0.285863 0.000031 0.741176 0.737255 0.694118 2 50 100 %_BS
%_0.267521 0.206302 0.285863 0.000031 0.741176 0.737255 0.694118 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 0 2 Bd
[
<
7E7F7F8081828384848586878888898A8B8B8C8D8D8E8E8F90909192929394949597989899999A9B
9B9C9C9D9D9E9E9FA0A0A1A1A1A2A2A3A3A4A4A4A5A5A6A6A6A7
>
<
69696A6B6C6D6E6F6F707072727374757576777878797A7B7B7C7D7D7E7F7F808181828383848586
8687878889898A8A8B8B8C8D8D8E8E8F90909191929293949494
>
<
7A7B7B7C7D7E7F8080818281818283848485868788898A8A8B8C8D8E8E8F90909190909192929394
94959596979898999A9B9B9C9C9D9D9C9C9D9D9E9F9FA0A1A1A2
>
<
131415161718191A1C1D1E1F20212223252627292A2C2D2E303133343637383A3B3C3E4042434547
484A4C4E4F51535556585A5C5E6062636466686A6C6E71737577
>
<
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665636261605F5E5D
5C5B5A595857565554535251504F4E4D4C4B4A49484746454443
>
<
84838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D
5C5B5A595857565554535251504F4E4D4C4B4A49484746454443
>
<
7C7B7A79787776757473727271706F6E6D6C6B6A696867666564636261605F5E5D5D5C5B5A595857
565554535251504F4E4D4C4B4A49484847464544434241403F3E
>
4 %_Br
[
0.65359 0.582208 0.634943 0.466072 0.262745 0.262745 0.243137 2 50 100 %_BS
%_0.65359 0.582208 0.634943 0.466072 0.262745 0.262745 0.243137 2 50 100 Bs
0.492775 0.409979 0.477302 0.074647 0.521569 0.517647 0.486275 2 50 0 %_BS
%_0.492775 0.409979 0.477302 0.074647 0.521569 0.517647 0.486275 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 2 Bd
[
<
3E3F41424344454648494A4B4C4D4E5051525354555657585A5B5C5D5F606162636465666768696A
6B6C6D6E6F70707172737476777879797A7B7C7D7E7F8081818283848585868788898A8A8B8C8C8D
8E8E8F8F9090919293949495969797989899999A9A9B
>
<
30313233343536373738393B3C3C3D3E3F4041424344454647484A4B4C4D4E4F5051525253545556
575859595A5B5C5D5E5F5F626263646566666768696A6B6B6C6D6E6F707071727374757576777878
797A7A7B7C7D7D7E7F7F808182828384848586878788
>
<
4445464748494A4B4C4D4E4E4F4F5052535454565758595A5B5C5D5F606162616263646465666768
696A6B6C6D6E6E6F7071727071727374757576777879797A7B7C7D7E7E7F807F7F80818282838485
86878788898A8B8B8C8D8E8C8D8E8F8F909091919293
>
<
00000000000000000000000000000000000000000000000001010101010102020202020303030304
040405050607070808090A0B0B0C0D0E0F101011121415161718191A1B1C1D1E1F20212324252728
2A2B2C2E2F313233353638383A3B3D3F404244464749
>
<
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B
9A999897969594939291908E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C
>
<
C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A
999897969594939291908F8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605F5E5D5C5B
>
<
B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99999897969594939291
908F8E8D8C8B8A89888786868584838281807F7E7D7C7B7A79787776757473737271706F6E6D6C6B
6A69686766656463626160605F5E5D5C5B5A59585756
>
4 %_Br
[
0.606806 0.533288 0.574945 0.286625 0.360784 0.356863 0.337255 2 50 100 %_BS
%_0.606806 0.533288 0.574945 0.286625 0.360784 0.356863 0.337255 2 50 100 Bs
0.244053 0.186618 0.266331 0.000031 0.760784 0.756863 0.713726 2 50 0 %_BS
%_0.244053 0.186618 0.266331 0.000031 0.760784 0.756863 0.713726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 0 2 Bd
[
<
3E3F41424344454648494A4B4C4D4E5051525354555657585A5B5C5D5F6061626364656667696A6B
6C6D6E6F7070717273747576777878797A7B7C7D7E7F808181828384858586878888
>
<
30313233343536373738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F4F50515253555657
58595A5B5C5C5D5E5F6061616263646465666768696A6B6B6C6D6E6F707071727273
>
<
4445464748494A4B4C4D4E4F504F5052535454565758595A5B5C5D5F606162626364656667666667
68696A6B6C6D6E6E6F70717273747575767778797A79797A7B7C7D7E7E7F80818182
>
<
00000000000000000000000000000000000000000000000001010101010102020202020303030404
040505060607080809090A0B0C0D0E0E0F101112131415161718191A1B1C1D1F2021
>
<
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9C9B9A
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
>
<
C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9B9A99
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877
>
<
B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493939291
908F8E8D8C8B8A898887868584838281807F7E7D7C7C7B7A79787776757473727170
>
4 %_Br
[
0.534813 0.451911 0.510033 0.128939 0.470588 0.466667 0.439216 2 50 100 %_BS
%_0.534813 0.451911 0.510033 0.128939 0.470588 0.466667 0.439216 2 50 100 Bs
0.244053 0.186618 0.266331 0.000031 0.760784 0.756863 0.713726 2 50 0 %_BS
%_0.244053 0.186618 0.266331 0.000031 0.760784 0.756863 0.713726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 7)
(Unnamed gradient 7) 0 2 Bd
[
<
262728292A2B2C2D2F30313234353637383A3B3C3D3F4041424345464748494A4B4D
>
<
1C1D1E1F202122232425272829292A2B2C2D2D2E2F303132333435363738393A3B3C
>
<
2728292A2B2C2D2E2F3031323334353637363738393A3B3C3D3E3F40414243444546
>
0.000031
<
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5
>
<
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5
>
<
D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
4 %_Br
[
0.300511 0.23389 0.275303 0.000031 0.709804 0.709804 0.690196 2 50 100 %_BS
%_0.300511 0.23389 0.275303 0.000031 0.709804 0.709804 0.690196 2 50 100 Bs
0.148928 0.111086 0.153353 0.000031 0.843137 0.839216 0.815686 2 50 0.568182 %_BS
%_0.148928 0.111086 0.153353 0.000031 0.843137 0.839216 0.815686 2 50 0.568182 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 1 2 Bd
[
<
00000001010203040405050607070809090A0A0B0D0E0F0F10111213131415161717191A1B1C1C1D
1E1F202021222324242526272828292A2B2D2D2E2F
>
<
000000000001020203030304040505050607080908090A0B0C0B0C0D0E0F0F0F1011121312131415
1615161718191A191B1B1C1D1D1E1F202021212223
>
<
0000000101020303040506060707090A0A0B0C0C0E0F1011121314151617181B1B1C1D1E20202122
232525262728292B2B2C2D2E303031323335363738
>
0.000031
<
FFFEFDFDFCFBFAF9F9F8F7F6F5F5F4F3F2F1F1F0EFEEEDEDECEBEAE9E9E8E7E6E5E5E4E3E2E1E1E0
DFDEDDDDDCDBDAD9D9D8D7D6D5D5D4D3D2D1D1D0CF
>
<
FFFEFDFDFCFBFAF9F8F8F7F6F5F4F4F3F2F1F0EFEFEEEDECEBEBEAE9E8E7E7E6E5E4E3E2E2E1E0DF
DEDEDDDCDBDAD9D9D8D7D6D5D5D4D3D2D1D0D0CFCE
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.185611 0.13843 0.22092 0.000031 0.811765 0.807843 0.760784 2 50 100 %_BS
%_0.185611 0.13843 0.22092 0.000031 0.811765 0.807843 0.760784 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 9)
(Unnamed gradient 9) 0 2 Bd
[
<
0000000102030304050506070809090A0B0C0C0E0F10111213141516171718191A1B1C1D1E1F2021
22222324262728292A2B2C2D2D2F303132333536373839393A3C3D3E3F404142444546464748494B
4C4D4E4F5052525354555657585A5B5C5E5F5F6061626364
>
<
0000000001020302030304040506060708090A0B0A0B0C0C0D0E0F10101212131413141516171718
191A1B1C1D1E1D1E1F20212123242527282928292A2B2B2D2E2F2F30313233333435363738393A3B
3C3D3E3E3E3F4041424344454647494A4B4B4C4D4E4F5051
>
<
00000000010202030404050606070808090A0B0C0D0E0F10111213131415161717191A1B1C1C1D1E
1F202121222325262728292A2C2D2E2F3031333435363738393A3B3C3D3E3F414243444546464849
4A4B4C4D4F505051525354555658595A5B5D5E5F60616263
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000010101010101020202
>
<
FFFEFDFCFBFAFAF9F8F7F6F5F4F3F2F1F0EFEFEEEDECEBEAE9E8E7E6E5E5E4E3E2E1E0DFDEDDDCDB
DADAD9D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBEBDBCBBBBBAB9B8B7
B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1
>
<
FFFEFDFCFBFAF9F9F8F7F6F5F4F3F2F1F0EFEEEDEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDEDDDCDB
DAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCACAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6
B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
>
4 %_Br
[
0.390631 0.316289 0.386664 0.007752 0.631373 0.627451 0.592157 2 50 100 %_BS
%_0.390631 0.316289 0.386664 0.007752 0.631373 0.627451 0.592157 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Fade To White)
(Fade To White) 0 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sharp Black Vignette)
(Sharp Black Vignette) 1 3 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
1 0 50 15.873 %_BS
%_1 0 50 15.873 Bs
1 0 50 87.2573 %_BS
%_1 0 50 87.2573 Bs
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 93.6648 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 93.6648 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Spirals)
(Spirals) 41.5079 11.8086 104.5073 74.8066 [
%AI3_Tile
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
28.7832 6.93163 m
28.7832 76.5029 L
106.5883 76.5029 L
106.5883 6.93163 L
28.7832 6.93163 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
125.373 36.8867 m
125.373 29.5976 121.039 27.1367 113.748 27.1367 c
106.4566 27.1367 100.6079 28.2773 100.6079 35.5703 c
100.6079 42.8613 106.5181 48.7695 113.8085 48.7695 c
121.0996 48.7695 125.373 44.1777 125.373 36.8867 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
119.2168 58.6797 m
119.2168 52.1308 113.9921 46.8222 107.5473 46.8222 c
101.1021 46.8222 95.8774 52.1308 95.8774 58.6797 c
95.8774 65.2285 101.1021 70.5351 107.5473 70.5351 c
113.9921 70.5351 119.2168 65.2285 119.2168 58.6797 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
96.4947 21.959 m
96.4947 16.6445 92.1861 12.3359 86.8707 12.3359 c
81.5552 12.3359 77.2466 16.6445 77.2466 21.959 c
77.2466 27.2734 81.5552 31.584 86.8707 31.584 c
92.1861 31.584 96.4947 27.2734 96.4947 21.959 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
86.8707 21.959 m
85.1939 21.3965 87.1586 20.1504 87.771 20.4062 c
89.9136 21.3066 89.1264 24.4394 86.7592 23.9902 c
81.8842 23.0644 82.0279 17.4707 86.7534 17.707 C
93.8687 17.707 93.6899 26.9179 86.8764 26.6054 c
S
80.3277 20.0449 m
80.8199 17.1933 83.3041 15.4199 87.2261 15.4629 c
98.1031 15.5761 96.7749 29.3789 87.3139 29.1093 c
S
71.2613 15.5761 m
70.4614 15.0117 71.6626 13.6601 72.7377 14.5156 c
74.729 16.1015 72.4614 18.625 70.4799 17.5722 c
66.5162 15.4648 69.9722 10.3828 73.646 12.5781 C
78.6489 15.2363 74.479 22.0468 69.6597 19.998 c
62.3667 16.8945 68.9262 4.81053 76.3892 11.6718 c
78.2437 13.3769 78.7886 15.1875 78.3432 17.3535 c
S
69.771 22.7246 m
68.8637 22.4746 67.9252 22.0351 66.9761 21.373 c
58.4742 15.4336 66.9672 1.80468 77.4742 9.43163 c
79.2133 10.6933 80.1987 12.6132 80.6489 14.5156 c
S
80.7573 71.2324 m
79.8764 70.6074 81.2007 69.1172 82.3862 70.0625 c
84.5806 71.8105 82.7563 75.1562 79.896 73.4336 c
75.6578 70.8789 79.3364 65.5058 83.3873 67.9257 C
88.3832 70.58 85.4302 77.5019 80.5639 76.6406 c
S
75.1528 71.1211 m
74.8852 66.4433 80.6567 61.5136 86.4107 66.9257 c
89.3549 69.6953 89.3442 73.3242 87.6469 75.955 c
S
134.5332 34.873 m
125.7715 28.9121 134.4375 13.0078 146.1075 21.707 c
S
77.8462 19.291 m
78.4712 15.5859 81.7104 12.2695 87.2046 12.8222 c
88.4498 12.9472 89.5748 13.1797 90.5854 13.498 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
115.3223 24.5332 m
115.3223 19.2734 111.0585 15.0117 105.8002 15.0117 c
100.5415 15.0117 96.2789 19.2734 96.2789 24.5332 c
96.2789 29.791 100.5415 34.0547 105.8002 34.0547 c
111.0585 34.0547 115.3223 29.791 115.3223 24.5332 c
f
87.6216 29.0781 m
87.6216 23.5996 82.7592 19.1582 76.7612 19.1582 c
70.7632 19.1582 65.9009 23.5996 65.9009 29.0781 c
65.9009 34.5547 70.7632 38.9941 76.7612 38.9941 c
82.7592 38.9941 87.6216 34.5547 87.6216 29.0781 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
104.6889 24.1816 m
103.1617 24.3886 103.2027 21.4199 105.4039 22.2246 c
108.3393 23.2988 106.1441 27.4043 103.1812 26.4043 c
98.9449 24.9746 101.1284 18.291 106.0444 20.1015 C
112.8496 22.7382 109.1133 30.6972 102.3316 28.7285 c
97.8579 27.4297 96.7836 23.3105 98.3472 20.3789 c
S
107.2242 17.8125 m
116.2285 20.8906 113.0274 34.4492 101.8199 30.9394 c
S
132.6601 19.998 m
125.3652 16.8945 131.9277 4.81053 139.3886 11.6718 c
S
132.7715 22.7246 m
131.8633 22.4746 130.9258 22.0351 129.9747 21.373 c
121.4746 15.4336 129.9668 1.80468 140.4747 9.43163 c
S
113.83 18.4629 m
112.4316 17.8105 110.4825 16.4902 109.455 15 c
S
132.6601 82.9961 m
125.3652 79.8945 131.9277 67.8105 139.3886 74.6699 c
S
129.9747 84.3711 m
121.4746 78.4316 129.9668 64.8047 140.4747 72.4297 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
105.3422 38.166 m
105.3422 32.5996 100.6967 28.0859 94.9672 28.0859 c
89.2377 28.0859 84.5922 32.5996 84.5922 38.166 c
84.5922 43.7343 89.2377 48.2461 94.9672 48.2461 c
100.6967 48.2461 105.3422 43.7343 105.3422 38.166 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
95.0835 38.1679 m
95.3569 36.7226 97.5787 36.8789 97.1928 38.7754 c
96.6987 41.1992 92.9126 40.5937 92.9624 38.1211 c
93.0756 32.498 99.8941 34.0039 99.5522 38.7109 C
99.4019 45.209 90.6509 43.7754 90.3267 37.9257 c
89.813 28.6523 104.9117 30.4726 102.1402 41.1894 c
100.1597 48.8418 86.6147 46.459 87.6674 36.2773 c
88.6851 26.4121 107.9643 26.8125 104.9957 41.4882 c
102.8199 52.2578 82.2534 49.5215 84.8413 35.5722 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
96.8413 64.0468 m
93.7592 67.0195 90.0034 66.5156 V
88.4976 64.6367 86.7476 63.5117 y
87.4976 56.1367 78.4976 54.1367 V
80.4976 53.1367 85.6226 49.7617 85.6226 43.0117 C
87.2476 45.1367 93.8726 51.1367 102.4976 45.8867 c
102.7476 48.1367 l
91.8101 52.455 96.8413 64.0468 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
89.9819 51.3183 m
88.8764 50.582 89.9204 49.1953 90.9361 49.5879 c
94.1586 50.83 91.6441 55.2441 88.7828 53.6328 c
84.4732 51.2031 88.1109 45.8183 91.937 47.4511 C
98.1274 50.7187 93.5229 57.9629 88.1049 55.9687 c
82.3862 53.8613 83.1293 47.3242 87.6539 45.1718 c
S
89.5659 66.3965 m
90.6909 66.6211 93.2779 66.2832 94.5162 65.7226 c
S
99.3199 47.5156 m
99.6889 48.3261 99.7671 48.9785 99.9019 49.7949 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
113.3906 18.3418 m
115.1796 16.7343 118.08 12.9062 121.914 12.9062 c
123.543 12.9062 126.5469 13.6484 126.4473 13.9687 c
125.7813 16.1035 128.461 20.6269 129.9433 22.1093 C
127.9063 24.2715 128.2753 29.2734 128.6407 30.7539 C
128.6093 30.7812 124.4473 33.289 121.914 33.289 c
118.5253 33.289 115.8281 32.7988 114.0098 30.3867 C
115.9883 28.0175 115.4296 20.998 113.3906 18.3418 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
120.3418 23.2422 m
119.4864 22.0429 121.9258 20.3222 123.0274 21.914 c
124.666 24.2812 120.7246 26.9043 118.8399 24.7382 c
115.0859 20.4277 122.0156 16.6601 125.1758 20.166 C
128.8613 25.2226 121.6133 31.3652 116.8749 26.5058 c
110.0605 19.5195 123.629 10.9062 128.2305 19.8047 c
132.3203 27.7129 121.3242 35.207 114.9101 28.3906 c
S
113.4785 19.1289 m
115.6835 14.5488 121.4199 11.4961 126.4747 14.5 c
S
113.1582 35.2324 m
112.2774 34.6074 113.4746 33.3027 114.7871 34.0625 c
116.9239 35.2988 114.879 39.2851 111.6152 37.1465 c
108.3531 35.0097 111.7364 29.789 115.7871 32.039 C
121.416 35.4179 116.6816 42.4238 111.3925 40.1054 c
108.1987 38.705 107.2104 36.2519 107.6381 33.8906 c
S
120.5429 33.2578 m
123.2129 39.0293 116.6699 46.4472 108.6582 41.7343 c
105.3393 39.7832 104.7886 36.8945 105.0816 33.9629 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
110.5605 73.4414 m
110.5605 68.0625 106.2006 63.7031 100.8227 63.7031 c
95.4449 63.7031 91.0844 68.0625 91.0844 73.4414 c
91.0844 78.8203 95.4449 83.1797 100.8227 83.1797 c
106.2006 83.1797 110.5605 78.8203 110.5605 73.4414 c
f
110.3438 10.6816 m
110.3438 5.30473 105.9839 0.945314 100.6059 0.945314 c
95.2281 0.945314 91.2954 5.32033 90.8677 10.6816 c
90.3726 16.8867 95.2281 20.4199 100.6059 20.4199 c
105.9839 20.4199 110.3438 16.0605 110.3438 10.6816 c
f
136.8886 54.8828 m
136.998 50.3867 131.7128 44.6797 125.4532 45.2461 c
119.748 45.7617 112.498 49.0117 114.123 54.8828 c
115.6464 60.3906 119.2188 65.2304 125.5059 65.2304 c
131.791 65.2304 136.75 60.5976 136.8886 54.8828 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
87.6079 1.45703 m
92.1216 4.76363 92.4086 9.56643 90.5707 13.5175 C
91.2457 15.205 91.5913 16.5605 93.3912 17.7968 C
103.9643 26.9101 117.6719 11.3222 106.7319 3.03125 c
95.1323 -5.75977 86.3969 10.2382 95.1577 16.1972 c
103.9409 22.1738 111.7774 11.2382 105.5367 5.50193 c
97.3082 -2.0625 89.2886 10.8125 98.1166 14.6816 c
103.4039 17 108.0269 9.43163 102.5112 6.50193 C
98.4604 4.08203 94.6509 9.68753 99.021 12.0078 c
101.2066 13.1699 103.7066 10.3867 101.5112 8.63863 c
S
115.5449 79.1816 m
111.8867 77.623 110.2969 74.9765 110.9082 69.9355 c
S
118.1386 63.7402 m
123.0605 63.6875 130.082 68.2851 126.9785 75.5234 c
S
103.8531 44.2343 m
104.8511 45.373 105.646 46.1015 106.9039 46.7968 c
S
0 J101.9976 46.0117 m
102.8306 46.6074 101.7963 47.6621 102.7476 48.1367 c
S
1 J125.3067 54.582 m
124.4277 53.957 125.752 52.4687 126.9375 53.4121 c
129.1328 55.1601 126.6328 57.9453 124.4453 56.7832 c
120.0761 54.4609 123.8867 48.8574 127.9375 51.2773 C
133.4532 54.205 128.83 61.7734 123.543 59.455 c
114.7149 55.5859 122.7324 42.7129 130.961 50.2773 c
137.1992 56.0136 129.3652 66.9472 120.5839 60.9726 c
111.8223 55.0117 120.4864 39.1093 132.1582 47.8066 c
143.4335 56.209 130.2793 70.7402 118.7031 63.0215 c
113.3027 59.4218 113.416 51.9961 115.8906 48.5078 c
S
107.1147 59.3281 m
106.1889 58.6738 107.5796 57.1093 108.8242 58.1015 c
111.1309 59.9375 108.5034 62.8613 106.2104 61.6406 c
101.6207 59.2011 105.6207 53.3183 109.8769 55.8593 C
115.666 58.9355 110.8124 66.8808 105.2612 64.4472 c
95.9916 60.3828 104.4117 46.8652 113.0527 54.8086 c
117.9649 59.3261 114.5665 66.914 108.67 67.7793 c
S
99.7163 63.4218 m
95.2779 56.1894 103.396 44.1738 114.5332 51.8769 c
S
118.4043 62.7695 m
117.1699 66.2597 114.0156 69.2382 110.166 70.1621 c
S
127.3828 65.0332 m
128.5136 65.9941 130.6407 69.041 130.291 71.3476 c
S
96.2623 48.0254 m
97.2261 49.6504 97.5611 50.8632 97.3941 52.414 c
S
76.2573 28.4824 m
75.3764 27.8574 76.7007 26.3691 77.8862 27.3125 c
80.0806 29.0605 77.5806 31.8457 75.396 30.6836 c
71.0269 28.3613 74.8364 22.7558 78.8873 25.1757 C
84.4019 28.1074 79.7797 35.6738 74.4916 33.3554 c
65.6636 29.4863 73.6832 16.6132 81.9107 24.1757 c
88.1509 29.914 80.3159 40.8476 71.5328 34.873 c
62.7719 28.9121 71.4361 13.0078 83.1079 21.707 c
94.3842 30.1093 81.2309 44.6406 69.6528 36.9218 c
64.2534 33.3222 64.4781 24.6601 67.4028 21.7343 c
S
75.1021 43.3066 m
73.5748 43.5136 73.6166 40.5449 75.8179 41.3496 c
78.7534 42.4238 76.5562 46.5293 73.5953 45.5293 c
69.3579 44.0996 71.5415 37.416 76.4556 39.2265 C
83.2612 41.8632 79.4136 50.2715 72.6323 48.3007 c
66.9009 46.6386 66.8091 40.1113 70.6646 37.4843 c
S
80.3199 38.5078 m
85.5005 43.2226 81.1832 53.6972 72.2319 51.1894 c
S
65.8139 45.9277 m
64.3149 42.4531 65.2543 38.25 68.2944 35.7851 c
S
83.1421 36.9316 m
88.7612 43.0371 84.4009 55.707 73.4781 54.1328 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
124.998 32.6367 m
119.623 41.3867 122.998 46.0117 v
125.748 45.2617 l
122.498 40.1367 129.373 33.5117 v
128.248 30.6367 l
124.998 32.6367 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
125.4532 45.2461 m
124.2149 42.3222 125.791 34.8965 129.8399 33.6601 c
S
122.5274 45.7343 m
120.6152 41.2343 123.3165 33.209 126.8027 31.5215 c
S
123.4239 32.873 m
123.6739 33.541 123.7735 34.0351 123.8535 34.7168 c
S
121.8809 41.914 m
118.5469 46.4629 111.6191 48.3398 104.8647 41.6465 c
S
122.123 45.3867 m
120.0079 47.1328 117.6524 48.4668 114.871 48.6465 c
S
76.6342 62.6933 m
76.8531 61.5351 78.2573 61.2812 78.6362 62.2461 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
69.0386 70.3984 m
67.1957 68.5195 66.3052 66.7402 v
66.2076 66.5449 66.6469 64.2988 y
73.3335 62.5429 73.6255 54.5898 V
76.9428 53.955 85.2876 52.248 86.8492 63.7148 C
85.8248 63.3242 75.9184 57.1269 72.6001 70.1562 c
69.0386 70.3984 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
75.2447 64.207 m
74.7632 63.834 74.2817 63.1465 74.2242 62.4082 c
73.8784 57.9726 80.1928 58.1894 80.9643 61.9043 C
S
73.688 66.1894 m
72.6861 65.8847 71.6284 64.6152 71.5396 63.0156 c
71.0806 54.7343 83.4009 54.7343 84.0063 62.5742 c
S
72.5913 69.2343 m
70.1909 67.6465 69.2505 66.0449 68.8999 63.3691 c
S
73.4556 54.9863 m
78.7066 52.5703 86.9067 55.25 86.813 63.9257 c
S
96.0922 62.6875 m
93.3774 64.1386 90.1303 64.8711 86.8383 63.9043 c
S
95.5102 56.9336 m
93.2211 59.2988 89.0024 60.2558 84.5835 57.1484 c
82.9449 55.9941 81.8951 54.1328 81.8453 51.9882 c
S
95.5053 60.1738 m
93.104 61.7461 89.9976 62.2636 86.7153 61.2285 c
S
90.5777 67.5215 m
90.5777 66.6211 91.1412 66.7343 91.2534 66.3965 c
S
135.6328 48.3007 m
129.9003 46.6386 129.8085 40.1113 133.666 37.4843 c
S
128.8145 45.9277 m
127.3165 42.4531 128.254 38.25 131.295 35.7851 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
130.123 68.5117 m
128.873 64.8867 l
132.748 63.1367 l
132.748 65.6367 130.123 68.5117 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
132.0899 70.9336 m
130.2598 69.5957 129.4316 67.5683 128.92 65.0996 c
S
69.2133 70.4336 m
67.3852 69.0957 66.5572 67.0683 66.0444 64.5996 c
S
117.6582 72.4179 m
117.9629 71.0547 120.0665 71.2715 119.6445 73.0586 c
119.1015 75.3457 115.5234 74.6562 115.6464 72.3086 c
115.9277 66.9726 122.3535 68.6113 121.8848 73.0703 C
121.5449 79.2363 113.166 77.8164 113.1484 72.0429 c
113.1269 63.2187 128.2793 65.4199 124.1622 76.5449 c
S
71.2613 78.5742 m
70.4614 78.0097 71.6626 76.6582 72.7377 77.5156 c
74.729 79.1015 72.4614 81.625 70.4799 80.5722 c
66.5162 78.4648 69.9722 73.3828 73.646 75.5781 C
78.6489 78.2343 74.479 85.0449 69.6597 82.9961 c
62.3667 79.8945 68.9262 67.8086 76.3892 74.6699 c
78.2437 76.375 78.7886 78.1855 78.3432 80.3515 c
S
69.771 85.7246 m
68.8637 85.4746 67.9252 85.0351 66.9761 84.3711 c
58.4742 78.4316 66.9672 64.8047 77.4742 72.4297 c
79.2133 73.6914 80.1987 75.6132 80.6489 77.5136 c
S
117.6582 9.41993 m
117.9629 8.05663 120.0665 8.27153 119.6445 10.0605 c
119.1015 12.3476 115.5234 11.6562 115.6464 9.30863 c
115.9277 3.97461 122.3535 5.61323 121.8848 10.0703 C
121.5449 16.2363 113.166 14.8164 113.1484 9.04493 c
113.1269 0.220704 128.2793 2.42187 124.1622 13.5468 c
S
115.5449 16.1836 m
111.8867 14.625 110.2969 11.9785 110.9082 6.93553 c
S
118.1386 0.742184 m
123.0605 0.689454 130.082 5.28513 126.9785 12.5234 c
S
82.3862 7.06443 m
84.5806 8.81253 82.7563 12.1582 79.896 10.4336 c
75.6578 7.87893 79.3364 2.50781 83.3873 4.92773 C
88.3832 7.58203 85.4302 14.5039 80.5639 13.6425 c
S
75.1528 8.12303 m
74.8852 3.44531 80.6567 -1.48438 86.4107 3.92773 c
89.3549 6.69533 89.3442 10.3261 87.6469 12.955 c
S
64.3832 65.0332 m
65.5132 65.9941 67.6402 69.041 67.2896 71.3476 c
S
96.8413 64.0468 m
91.104 54.2597 103.5112 41.4257 115.5527 49.0722 c
S
132.6523 36.9218 m
127.254 33.3222 127.4785 24.6601 130.4023 21.7343 c
S
72.4849 70.1757 m
72.9799 64.125 79.5347 58.5429 87.6079 64.455 c
92.1216 67.7636 92.4086 72.5644 90.5707 76.5175 C
91.2457 78.205 91.5913 79.5586 93.3912 80.7968 C
103.9643 89.9082 117.6719 74.3203 106.7319 66.0312 c
95.1323 57.2382 86.3969 73.2363 95.1577 79.1972 c
103.9409 85.1718 111.7774 74.2382 105.5367 68.5019 c
97.3082 60.9375 89.2886 73.8105 98.1166 77.6816 c
103.4039 79.998 108.0269 72.4316 102.5112 69.5019 C
98.4604 67.082 94.6509 72.6855 99.021 75.0078 c
101.2066 76.1699 103.7066 73.3867 101.5112 71.6386 c
100.3256 70.6933 99.0014 72.1836 99.8823 72.8066 c
S
109.121 15.7382 m
117.7774 18.8515 118.4335 35.4492 104.0777 33.7715 c
S
128.629 30.2695 m
124.7285 33.7304 118.0117 34.4668 113.6054 30.7422 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
62.3217 36.8867 m
62.3217 29.5976 57.9878 27.1367 50.6968 27.1367 c
43.4053 27.1367 37.5567 28.2773 37.5567 35.5703 c
37.5567 42.8613 43.4668 48.7695 50.7574 48.7695 c
58.0484 48.7695 62.3217 44.1777 62.3217 36.8867 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
56.1656 58.6797 m
56.1656 52.1308 50.9409 46.8222 44.4961 46.8222 c
38.0508 46.8222 32.8261 52.1308 32.8261 58.6797 c
32.8261 65.2285 38.0508 70.5351 44.4961 70.5351 c
50.9409 70.5351 56.1656 65.2285 56.1656 58.6797 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
33.4434 21.959 m
33.4434 16.6445 29.1348 12.3359 23.8194 12.3359 c
18.504 12.3359 14.1954 16.6445 14.1954 21.959 c
14.1954 27.2734 18.504 31.584 23.8194 31.584 c
29.1348 31.584 33.4434 27.2734 33.4434 21.959 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
23.8194 21.959 m
22.1426 21.3965 24.1075 20.1504 24.7198 20.4062 c
26.8624 21.3066 26.0752 24.4394 23.7081 23.9902 c
18.8331 23.0644 18.9766 17.4707 23.7022 17.707 C
30.8174 17.707 30.6386 26.9179 23.8252 26.6054 c
S
17.2764 20.0449 m
17.7686 17.1933 20.253 15.4199 24.1749 15.4629 c
35.0518 15.5761 33.7237 29.3789 24.2627 29.1093 c
S
8.20995 15.5761 m
7.41015 15.0117 8.61135 13.6601 9.68655 14.5156 c
11.6778 16.1015 9.41015 18.625 7.42875 17.5722 c
3.46484 15.4648 6.92085 10.3828 10.5948 12.5781 C
15.5977 15.2363 11.4278 22.0468 6.60835 19.998 c
-0.684569 16.8945 5.87495 4.81053 13.3379 11.6718 c
15.1924 13.3769 15.7374 15.1875 15.292 17.3535 c
S
6.71975 22.7246 m
5.81245 22.4746 4.87402 22.0351 3.9248 21.373 c
-4.57715 15.4336 3.91601 1.80468 14.4229 9.43163 c
16.1622 10.6933 17.1475 12.6132 17.5977 14.5156 c
S
71.4819 34.873 m
62.7203 28.9121 71.3863 13.0078 83.0562 21.707 c
S
14.795 19.291 m
15.42 15.5859 18.6592 12.2695 24.1534 12.8222 c
25.3985 12.9472 26.5235 13.1797 27.5341 13.498 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
52.271 24.5332 m
52.271 19.2734 48.0074 15.0117 42.7491 15.0117 c
37.4902 15.0117 33.2276 19.2734 33.2276 24.5332 c
33.2276 29.791 37.4902 34.0547 42.7491 34.0547 c
48.0074 34.0547 52.271 29.791 52.271 24.5332 c
f
24.5704 29.0781 m
24.5704 23.5996 19.7081 19.1582 13.71 19.1582 c
7.71195 19.1582 2.84961 23.5996 2.84961 29.0781 c
2.84961 34.5547 7.71195 38.9941 13.71 38.9941 c
19.7081 38.9941 24.5704 34.5547 24.5704 29.0781 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
41.6376 24.1816 m
40.1104 24.3886 40.1514 21.4199 42.3526 22.2246 c
45.2881 23.2988 43.0928 27.4043 40.1299 26.4043 c
35.8936 24.9746 38.0772 18.291 42.9931 20.1015 C
49.7984 22.7382 46.062 30.6972 39.2803 28.7285 c
34.8067 27.4297 33.7325 23.3105 35.2959 20.3789 c
S
44.1729 17.8125 m
53.1772 20.8906 49.9761 34.4492 38.7686 30.9394 c
S
69.6089 19.998 m
62.3139 16.8945 68.8764 4.81053 76.3374 11.6718 c
S
69.7203 22.7246 m
68.812 22.4746 67.8745 22.0351 66.9233 21.373 c
58.4234 15.4336 66.9156 1.80468 77.4233 9.43163 c
S
50.7789 18.4629 m
49.3804 17.8105 47.4311 16.4902 46.4039 15 c
S
69.6089 82.9961 m
62.3139 79.8945 68.8764 67.8105 76.3374 74.6699 c
S
66.9233 84.3711 m
58.4234 78.4316 66.9156 64.8047 77.4233 72.4297 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
42.291 38.166 m
42.291 32.5996 37.6455 28.0859 31.916 28.0859 c
26.1866 28.0859 21.541 32.5996 21.541 38.166 c
21.541 43.7343 26.1866 48.2461 31.916 48.2461 c
37.6455 48.2461 42.291 43.7343 42.291 38.166 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
32.0322 38.1679 m
32.3056 36.7226 34.5274 36.8789 34.1417 38.7754 c
33.6474 41.1992 29.8614 40.5937 29.9112 38.1211 c
30.0245 32.498 36.8428 34.0039 36.5009 38.7109 C
36.3506 45.209 27.5997 43.7754 27.2754 37.9257 c
26.7618 28.6523 41.8604 30.4726 39.0889 41.1894 c
37.1083 48.8418 23.5635 46.459 24.6163 36.2773 c
25.6338 26.4121 44.9131 26.8125 41.9444 41.4882 c
39.7686 52.2578 19.2022 49.5215 21.7901 35.5722 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
 0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
33.7901 64.0468 m
30.708 67.0195 26.9522 66.5156 V
25.4463 64.6367 23.6963 63.5117 y
24.4463 56.1367 15.4463 54.1367 V
17.4463 53.1367 22.5713 49.7617 22.5713 43.0117 C
24.1963 45.1367 30.8213 51.1367 39.4463 45.8867 c
39.6963 48.1367 l
28.7588 52.455 33.7901 64.0468 v
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
26.9307 51.3183 m
25.8252 50.582 26.8692 49.1953 27.8848 49.5879 c
31.1075 50.83 28.5928 55.2441 25.7315 53.6328 c
21.4219 51.2031 25.0596 45.8183 28.8857 47.4511 C
35.0761 50.7187 30.4716 57.9629 25.0538 55.9687 c
19.335 53.8613 20.0782 47.3242 24.6026 45.1718 c
S
26.5147 66.3965 m
27.6397 66.6211 30.2266 66.2832 31.4649 65.7226 c
S
36.2686 47.5156 m
36.6376 48.3261 36.7159 48.9785 36.8506 49.7949 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
50.3394 18.3418 m
52.1284 16.7343 55.0289 12.9062 58.8628 12.9062 c
60.4917 12.9062 63.4957 13.6484 63.396 13.9687 c
62.7299 16.1035 65.4097 20.6269 66.8921 22.1093 C
64.8549 24.2715 65.2242 29.2734 65.5893 30.7539 C
65.5582 30.7812 61.396 33.289 58.8628 33.289 c
55.4742 33.289 52.7769 32.7988 50.9585 30.3867 C
52.937 28.0175 52.3784 20.998 50.3394 18.3418 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
57.2906 23.2422 m
56.4351 22.0429 58.8745 20.3222 59.9761 21.914 c
61.6147 24.2812 57.6734 26.9043 55.7886 24.7382 c
52.0346 20.4277 58.9644 16.6601 62.1245 20.166 C
65.8101 25.2226 58.562 31.3652 53.8237 26.5058 c
47.0093 19.5195 60.5777 10.9062 65.1792 19.8047 c
69.2691 27.7129 58.2729 35.207 51.8589 28.3906 c
S
50.4272 19.1289 m
52.6324 14.5488 58.3686 11.4961 63.4233 14.5 c
S
50.1069 35.2324 m
49.2261 34.6074 50.4234 33.3027 51.7359 34.0625 c
53.8726 35.2988 51.8277 39.2851 48.5639 37.1465 c
45.3018 35.0097 48.6851 29.789 52.7359 32.039 C
58.3647 35.4179 53.6303 42.4238 48.3414 40.1054 c
45.1474 38.705 44.1591 36.2519 44.587 33.8906 c
S
57.4916 33.2578 m
60.1617 39.0293 53.6186 46.4472 45.6069 41.7343 c
42.2881 39.7832 41.7374 36.8945 42.0303 33.9629 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
 0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.5093 73.4414 m
47.5093 68.0625 43.1495 63.7031 37.7715 63.7031 c
32.3936 63.7031 28.0332 68.0625 28.0332 73.4414 c
28.0332 78.8203 32.3936 83.1797 37.7715 83.1797 c
43.1495 83.1797 47.5093 78.8203 47.5093 73.4414 c
f
47.2924 10.6816 m
47.2924 5.30473 42.9327 0.945314 37.5546 0.945314 c
32.1768 0.945314 28.2442 5.32033 27.8165 10.6816 c
27.3213 16.8867 32.1768 20.4199 37.5546 20.4199 c
42.9327 20.4199 47.2924 16.0605 47.2924 10.6816 c
f
73.8374 54.8828 m
73.9467 50.3867 68.6617 44.6797 62.4019 45.2461 c
56.6968 45.7617 49.4468 49.0117 51.0718 54.8828 c
52.5952 60.3906 56.1674 65.2304 62.4546 65.2304 c
68.7397 65.2304 73.6988 60.5976 73.8374 54.8828 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
24.5567 1.45703 m
29.0704 4.76363 29.3575 9.56643 27.5196 13.5175 C
28.1944 15.205 28.5401 16.5605 30.3399 17.7968 C
40.9131 26.9101 54.6207 11.3222 43.6806 3.03125 c
32.0811 -5.75977 23.3458 10.2382 32.1064 16.1972 c
40.8897 22.1738 48.7261 11.2382 42.4854 5.50193 c
34.2569 -2.0625 26.2374 10.8125 35.0654 14.6816 c
40.3526 17 44.9756 9.43163 39.4599 6.50193 C
35.4091 4.08203 31.5997 9.68753 35.9697 12.0078 c
38.1553 13.1699 40.6553 10.3867 38.4599 8.63863 c
S
52.4936 79.1816 m
48.8354 77.623 47.2457 74.9765 47.8569 69.9355 c
S
55.0875 63.7402 m
60.0092 63.6875 67.0307 68.2851 63.9272 75.5234 c
S
40.8018 44.2343 m
41.7999 45.373 42.5947 46.1015 43.8526 46.7968 c
S
0 J38.9463 46.0117 m
39.7793 46.6074 38.7452 47.6621 39.6963 48.1367 c
S
1 J62.2553 54.582 m
61.3764 53.957 62.7007 52.4687 63.8863 53.4121 c
66.0816 55.1601 63.5816 57.9453 61.3941 56.7832 c
57.0249 54.4609 60.8354 48.8574 64.8863 51.2773 C
70.4019 54.205 65.7789 61.7734 60.4917 59.455 c
51.6636 55.5859 59.6812 42.7129 67.9097 50.2773 c
74.1479 56.0136 66.3139 66.9472 57.5327 60.9726 c
48.771 55.0117 57.4351 39.1093 69.1069 47.8066 c
80.3823 56.209 67.2281 70.7402 55.6519 63.0215 c
50.2514 59.4218 50.3647 51.9961 52.8394 48.5078 c
S
44.0634 59.3281 m
43.1376 58.6738 44.5284 57.1093 45.7729 58.1015 c
48.0796 59.9375 45.4521 62.8613 43.1591 61.6406 c
38.5694 59.2011 42.5694 53.3183 46.8256 55.8593 C
52.6147 58.9355 47.7612 66.8808 42.2099 64.4472 c
32.9404 60.3828 41.3604 46.8652 50.0014 54.8086 c
54.9136 59.3261 51.5152 66.914 45.6186 67.7793 c
S
36.6651 63.4218 m
32.2266 56.1894 40.3447 44.1738 51.4819 51.8769 c
S
55.3531 62.7695 m
54.1186 66.2597 50.9644 69.2382 47.1147 70.1621 c
S
64.3316 65.0332 m
65.4624 65.9941 67.5893 69.041 67.2397 71.3476 c
S
33.2109 48.0254 m
34.1749 49.6504 34.5098 50.8632 34.3428 52.414 c
S
13.2061 28.4824 m
12.3252 27.8574 13.6495 26.3691 14.835 27.3125 c
17.0293 29.0605 14.5293 31.8457 12.3448 30.6836 c
7.97555 28.3613 11.7852 22.7558 15.836 25.1757 C
21.3506 28.1074 16.7286 35.6738 11.4405 33.3554 c
2.6123 29.4863 10.6319 16.6132 18.8594 24.1757 c
25.0997 29.914 17.2647 40.8476 8.48145 34.873 c
-0.279299 28.9121 8.38475 13.0078 20.0567 21.707 c
31.333 30.1093 18.1797 44.6406 6.60155 36.9218 c
1.20215 33.3222 1.42676 24.6601 4.35156 21.7343 c
S
12.0508 43.3066 m
10.5235 43.5136 10.5655 40.5449 12.7667 41.3496 c
15.7022 42.4238 13.5049 46.5293 10.544 45.5293 c
6.30665 44.0996 8.49025 37.416 13.4043 39.2265 C
20.21 41.8632 16.3624 50.2715 9.58105 48.3007 c
3.84961 46.6386 3.75781 40.1113 7.61325 37.4843 c
S
17.2686 38.5078 m
22.4493 43.2226 18.1319 53.6972 9.18065 51.1894 c
S
20.0909 36.9316 m
25.71 43.0371 21.3497 55.707 10.4268 54.1328 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
 0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
61.9467 32.6367 m
56.5718 41.3867 59.9467 46.0117 v
62.6967 45.2617 l
59.4467 40.1367 66.3217 33.5117 v
65.1967 30.6367 l
61.9467 32.6367 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
62.4019 45.2461 m
61.1636 42.3222 62.7397 34.8965 66.7886 33.6601 c
S
59.4761 45.7343 m
57.5639 41.2343 60.2652 33.209 63.7514 31.5215 c
S
60.3726 32.873 m
60.6226 33.541 60.7222 34.0351 60.8023 34.7168 c
S
58.8296 41.914 m
55.4957 46.4629 48.5679 48.3398 41.8134 41.6465 c
S
59.0718 45.3867 m
56.9566 47.1328 54.6011 48.4668 51.8199 48.6465 c
S
13.5831 62.6933 m
13.8018 61.5351 15.2061 61.2812 15.585 62.2461 c
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
 0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.98735 70.3984 m
4.14453 68.5195 3.2539 66.7402 v
3.15625 66.5449 3.5957 64.2988 y
10.2823 62.5429 10.5743 54.5898 V
13.8917 53.955 22.2364 52.248 23.7979 63.7148 C
22.7735 63.3242 12.8672 57.1269 9.54885 70.1562 c
5.98735 70.3984 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
 0.000031 0.000031 0.000031 0.000031 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
1 J 0 j 0.9 w 4 M []0 d0 XR
12.1934 64.207 m
11.712 63.834 11.2305 63.1465 11.1729 62.4082 c
10.8272 57.9726 17.1417 58.1894 17.9131 61.9043 C
S
10.6368 66.1894 m
9.63475 65.8847 8.57715 64.6152 8.48825 63.0156 c
8.02925 54.7343 20.3497 54.7343 20.9551 62.5742 c
S
9.54005 69.2343 m
7.13965 67.6465 6.19925 66.0449 5.84865 63.3691 c
S
10.4043 54.9863 m
15.6553 52.5703 23.8555 55.25 23.7618 63.9257 c
S
33.041 62.6875 m
30.3261 64.1386 27.0792 64.8711 23.7872 63.9043 c
S
32.459 56.9336 m
30.17 59.2988 25.9512 60.2558 21.5323 57.1484 c
19.8936 55.9941 18.8438 54.1328 18.794 51.9882 c
S
32.4542 60.1738 m
30.0527 61.7461 26.9463 62.2636 23.6641 61.2285 c
S
27.5264 67.5215 m
27.5264 66.6211 28.0899 66.7343 28.2022 66.3965 c
S
72.5816 48.3007 m
66.8492 46.6386 66.7573 40.1113 70.6147 37.4843 c
S
65.7632 45.9277 m
64.2652 42.4531 65.2027 38.25 68.2437 35.7851 c
S
68.4712 70.4687 m
67.0307 69.1455 66.3242 67.2978 65.8687 65.0996 c
S
6.16215 70.4336 m
4.33398 69.0957 3.50586 67.0683 2.99316 64.5996 c
S
54.6069 72.4179 m
54.9117 71.0547 57.0151 71.2715 56.5933 73.0586 c
56.0503 75.3457 52.4721 74.6562 52.5952 72.3086 c
52.8764 66.9726 59.3022 68.6113 58.8335 73.0703 C
58.4936 79.2363 50.1147 77.8164 50.0971 72.0429 c
50.0756 63.2187 65.2281 65.4199 61.1109 76.5449 c
S
54.6069 9.41993 m
54.9117 8.05663 57.0151 8.27153 56.5933 10.0605 c
56.0503 12.3476 52.4721 11.6562 52.5952 9.30863 c
52.8764 3.97461 59.3022 5.61323 58.8335 10.0703 C
58.4936 16.2363 50.1147 14.8164 50.0971 9.04493 c
50.0756 0.220704 65.2281 2.42187 61.1109 13.5468 c
S
52.4936 16.1836 m
48.8354 14.625 47.2457 11.9785 47.8569 6.93553 c
S
55.0875 0.742184 m
60.0092 0.689454 67.0307 5.28513 63.9272 12.5234 c
S
19.335 7.06443 m
21.5293 8.81253 19.7051 12.1582 16.8448 10.4336 c
12.6065 7.87893 16.2852 2.50781 20.336 4.92773 C
25.3321 7.58203 22.379 14.5039 17.5127 13.6425 c
S
12.1016 8.12303 m
11.834 3.44531 17.6055 -1.48438 23.3594 3.92773 c
26.3038 6.69533 26.293 10.3261 24.5958 12.955 c
S
1.33203 65.0332 m
2.46191 65.9941 4.58887 69.041 4.23828 71.3476 c
S
33.7901 64.0468 m
28.0527 54.2597 40.4599 41.4257 52.5014 49.0722 c
S
69.6011 36.9218 m
64.2027 33.3222 64.4272 24.6601 67.3511 21.7343 c
S
9.43355 70.1757 m
9.92875 64.125 16.4834 58.5429 24.5567 64.455 c
29.0704 67.7636 29.3575 72.5644 27.5196 76.5175 C
28.1944 78.205 28.5401 79.5586 30.3399 80.7968 C
40.9131 89.9082 54.6207 74.3203 43.6806 66.0312 c
32.0811 57.2382 23.3458 73.2363 32.1064 79.1972 c
40.8897 85.1718 48.7261 74.2382 42.4854 68.5019 c
34.2569 60.9375 26.2374 73.8105 35.0654 77.6816 c
40.3526 79.998 44.9756 72.4316 39.4599 69.5019 C
35.4091 67.082 31.5997 72.6855 35.9697 75.0078 c
38.1553 76.1699 40.6553 73.3867 38.4599 71.6386 c
37.2745 70.6933 35.9501 72.1836 36.8311 72.8066 c
S
46.0699 15.7382 m
54.7261 18.8515 55.3824 35.4492 41.0264 33.7715 c
S
65.5777 30.2695 m
61.6772 33.7304 54.9604 34.4668 50.5541 30.7422 c
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3818.5 4818.4351 m
-3604.8999 4818.4351 L
-3604.8999 4810.6343 L
-3818.5 4810.6343 L
-3818.5 4818.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3818.5 4814.5352 m
-3808.4856 4817.0269 -3801.6863 4818.375 -3789.7007 4818.4351 c
-3776.7185 4818.5 -3711.6997 4818.4351 y
-3646.6816 4818.5 -3633.6997 4818.4351 v
-3621.7124 4818.375 -3614.9136 4817.0269 -3604.8999 4814.5352 C
-3614.9136 4812.0435 -3621.7124 4810.6953 -3633.6997 4810.6343 c
-3646.6816 4810.5688 -3711.6997 4810.6343 y
-3776.7185 4810.5688 -3789.7007 4810.6343 v
-3801.6863 4810.6953 -3808.4856 4812.0435 -3818.5 4814.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690.8833 8690.9551 m
-7599.0479 8690.9551 L
-7599.0479 8686.6758 L
-7690.8833 8686.6758 L
-7690.8833 8690.9551 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7690.6631 8688.2754 m
-7691 8688.3418 -7690.4814 8688.5313 -7690.8833 8688.3887 C
-7690.8379 8688.2705 -7690.7725 8688.1816 -7690.6631 8688.2754 C
f
-7600.1675 8688.4414 m
-7601.2529 8689.2041 -7602.6816 8688.4336 -7603.8701 8688.9199 C
-7604.0098 8688.9521 -7603.8354 8688.502 -7604.1484 8688.6025 C
-7605.3008 8689.1953 -7607.1162 8688.8418 -7608.5195 8688.3848 C
-7608.4346 8688.2666 L
-7608.7021 8688.1816 -7609.0283 8688.5723 -7609.3115 8688.5176 C
-7609.3135 8688.4395 -7609.2207 8688.4063 -7609.2861 8688.2979 C
-7609.3574 8688.5352 -7609.7979 8688.4082 -7609.9189 8688.584 C
-7610.0303 8688.4922 -7610.0195 8688.3047 -7610.1641 8688.2002 C
-7610.3262 8688.4697 L
-7610.7769 8689.1094 -7611.4209 8688.4258 -7612.0361 8688.7559 C
-7612.0063 8688.6934 -7611.9453 8688.6445 -7611.9941 8688.584 C
-7612.9814 8688.9727 -7614.2168 8688.8994 -7615.3208 8689.043 C
-7615.2769 8688.9482 -7615.2363 8688.7754 -7615.3008 8688.668 C
-7615.3555 8688.9512 -7615.6963 8689.0225 -7615.9922 8689.0781 C
-7616.1255 8688.7871 -7616.4995 8689.3438 -7616.8467 8689.1826 C
-7616.8169 8689.1191 L
-7617.0732 8689.4238 -7617.1973 8688.9434 -7617.4053 8689.3086 C
-7617.5684 8689.0801 L
-7617.6807 8689.4902 -7617.9395 8688.8672 -7618.1514 8689.0762 C
-7618.1445 8689.1602 L
-7618.3442 8689.2598 -7618.4482 8689.0537 -7618.6338 8689.123 C
-7618.6514 8689.0762 L
-7619.0854 8689.1826 -7619.3379 8688.9551 -7619.3271 8689.2754 C
-7619.4795 8689.0186 -7618.9063 8689.1582 -7619.1455 8688.7842 C
-7620.5732 8689.1152 -7622.0459 8689.0498 -7623.4834 8689.0566 C
-7623.6465 8688.9277 -7623.7505 8688.8887 -7623.7871 8688.7666 C
-7623.9307 8688.832 -7624.3281 8688.8262 -7624.4585 8688.9902 C
-7624.4102 8688.9834 -7624.5513 8688.8262 -7624.6274 8688.8105 C
-7624.8887 8688.6895 -7624.9131 8689.1621 -7625.2002 8689.0186 C
-7625.0859 8688.9336 -7625.0469 8688.8301 -7625.0854 8688.7109 C
-7625.3301 8688.9609 -7625.6577 8688.9209 -7625.9473 8689.002 C
-7625.9023 8688.9482 -7625.8325 8688.916 -7625.8433 8688.8154 C
-7626.1602 8689.0986 -7626.4209 8688.7559 -7626.6982 8688.9346 C
-7626.5947 8688.75 L
-7627.0415 8688.5254 -7626.7266 8689.1367 -7627.1128 8689.0039 C
-7627.02 8688.9453 -7627.0527 8688.873 -7627.0361 8688.7979 C
-7627.3965 8689.1338 -7627.9795 8689.0225 -7628.3389 8689.1367 C
-7628.3174 8689.1113 -7628.3232 8689.0605 Y
-7628.7148 8689.1025 -7629.1245 8688.998 -7629.5552 8689.1445 C
-7629.7119 8689.0625 -7629.5039 8688.6934 -7629.9185 8688.7617 C
-7629.9033 8689.1328 -7630.6221 8688.9141 -7630.3779 8689.334 C
-7630.7319 8689.2734 -7631.2925 8689.1338 -7631.5283 8689.2598 C
-7631.3691 8689.1191 -7631.7007 8688.8066 -7631.4063 8688.7754 C
-7631.6289 8688.5498 L
-7631.5957 8688.3984 -7631.3999 8688.6016 -7631.4707 8688.4102 C
-7631.6182 8688.4258 -7632.0479 8688.5723 -7632.1797 8688.5117 C
-7632.4531 8688.7393 -7632.7041 8689.1641 -7633.1465 8689.2109 C
-7632.9385 8689.0664 -7633.2646 8688.8018 -7633.1235 8688.7383 C
-7633.7407 8689.4482 L
-7633.8877 8689.4658 -7633.7725 8689.1563 -7633.9854 8689.2529 C
-7633.9746 8689.3506 -7634.0674 8689.4121 -7634.1318 8689.4922 C
-7634.1875 8689.4482 -7634.7441 8689.584 -7634.8081 8689.2178 C
-7634.8735 8689.0762 -7634.5684 8689.1426 -7634.7314 8689.0117 C
-7635.0029 8689.0146 -7635.0151 8689.1406 -7635.2871 8689.1465 C
-7635.2925 8689.0977 L
-7635.4717 8689.043 -7635.8213 8689.2529 -7635.6265 8689.4551 C
-7635.5015 8689.4658 -7635.6738 8689.2354 -7635.4888 8689.3418 C
-7635.6152 8689.5537 -7635.9312 8689.6133 -7636.2031 8689.6162 C
-7636.1104 8689.5586 -7636.1216 8689.4609 -7636.0845 8689.3574 C
-7636.4497 8689.6445 -7636.8369 8689.7354 -7637.2451 8689.8555 C
-7637.2515 8690.0293 -7637.0928 8689.5391 -7637.0327 8689.6309 C
-7637.5557 8689.3896 -7638.1128 8689.9727 -7638.5479 8689.6201 C
-7638.4766 8689.5898 -7638.5098 8689.8672 -7638.5146 8689.8184 C
-7638.7666 8689.7969 -7638.7549 8689.5449 -7638.9189 8689.6377 C
-7638.9355 8689.4902 -7639.1255 8689.6855 -7639.2944 8689.7305 C
-7639.3818 8689.8369 -7639.3384 8689.6582 -7639.1914 8689.6426 C
-7639.4268 8689.7666 -7640.3691 8689.9941 -7640.9131 8689.7793 C
-7640.9023 8689.877 -7641.2471 8690.1377 -7641.3721 8690.127 C
-7641.3232 8689.8984 L
-7641.4375 8689.7617 -7641.7422 8689.918 -7641.7632 8689.7227 C
-7642.0303 8690 -7640.7344 8689.4863 -7641.0957 8689.7002 C
-7641.1895 8689.5098 -7641.5991 8690.0645 -7641.5215 8689.7529 C
-7641.7725 8689.7617 -7642.0161 8690.0186 -7642.2559 8689.8047 C
-7642.1865 8689.8418 -7642.0522 8689.4873 -7642.2549 8689.5039 C
-7642.6123 8689.5449 -7642.3564 8689.6133 -7642.6465 8689.6895 C
-7642.8281 8689.7832 L
-7642.8398 8690.0059 -7643.1475 8689.7529 -7643.0146 8690.002 C
-7643.0586 8689.8184 -7643.5337 8690.1152 -7643.4971 8689.7461 C
-7643.4473 8689.4551 L
-7643.6016 8689.4766 -7643.7002 8689.7617 -7643.8213 8689.8896 C
-7643.8418 8689.8633 -7643.8823 8689.8047 -7643.8745 8689.7578 C
-7643.8994 8690.2031 -7644.2432 8689.7207 -7644.4268 8690.0645 C
-7644.7505 8689.9102 -7645.2495 8690.0498 -7645.4023 8689.7734 C
-7645.6514 8689.9082 -7645.8784 8690.0674 -7646.1621 8689.9727 C
-7646.1055 8689.9307 -7646.0283 8689.918 -7646.0122 8689.8223 C
-7646.1904 8689.6914 -7646.2344 8689.8086 -7646.3975 8689.8809 C
-7646.3608 8689.8145 -7646.7539 8689.6201 -7646.9521 8689.4629 C
-7647.1992 8689.5957 -7647.1143 8689.8359 -7647.1392 8689.9824 C
-7647.3652 8689.543 -7647.8379 8690.2656 -7648.1211 8689.8672 C
-7648.0352 8689.8066 -7647.7598 8689.6514 -7647.9658 8689.541 C
-7648.1919 8689.1025 -7648.4219 8689.8643 -7648.7861 8689.6543 C
-7648.6968 8690.0186 L
-7648.8594 8689.793 -7649.2334 8690.2305 -7649.1963 8689.8594 C
-7649.3184 8689.9902 -7649.6265 8689.7383 -7649.5859 8690.0938 C
-7650.1846 8689.793 -7651.0425 8690.2754 -7651.4102 8689.6377 C
-7651.4961 8689.6973 -7651.7104 8689.6367 -7651.6665 8689.8193 C
-7651.5239 8690.0176 -7651.4673 8689.6777 -7651.4141 8689.8125 C
-7651.4912 8689.8232 -7651.5078 8689.9209 -7651.5161 8689.9697 C
-7651.7021 8689.8887 -7651.8486 8689.8633 -7651.6729 8689.5674 C
-7652.0869 8689.3477 -7652.1001 8690.1719 -7652.6274 8690.0322 C
-7652.6035 8689.8857 -7652.6436 8689.8301 -7652.7979 8689.8535 C
-7653.0903 8690.1055 L
-7653.4312 8690.0469 -7653.2842 8689.7705 -7653.2925 8689.5215 C
-7653.4746 8689.5645 -7653.6973 8689.5527 -7653.7803 8689.7383 C
-7654.0015 8689.4258 L
-7653.8398 8689.6514 -7654.1514 8689.5762 -7654.2368 8689.6367 C
-7654.1514 8689.5762 L
-7654.1846 8689.4697 -7654.3955 8689.5352 -7654.5024 8689.5664 C
-7654.4766 8689.7207 -7654.2617 8689.7832 -7654.1445 8689.8281 C
-7654.2373 8689.9375 -7654.3823 8689.9121 -7654.5059 8690.041 C
-7654.4648 8689.7969 -7654.8027 8689.8672 -7654.9473 8689.8418 C
-7655.1133 8689.7891 -7655.1348 8690.0605 -7655.1831 8690.0527 C
-7655.1875 8689.9258 -7655.4541 8690.0313 -7655.3247 8689.8535 C
-7655.2681 8689.8125 -7655.1953 8689.9766 -7655.1016 8689.8643 C
-7655.2109 8689.7705 -7655.1982 8689.5498 -7655.4258 8689.7109 C
-7655.5967 8689.832 -7655.3818 8690.1934 -7655.7061 8690.0391 C
-7655.6211 8689.9785 -7655.6055 8689.8809 -7655.5391 8689.793 C
-7655.8433 8689.666 L
-7655.8564 8689.8887 L
-7655.8975 8689.832 -7655.8691 8689.8125 -7655.8877 8689.7832 C
-7655.9785 8690.0176 -7656.3521 8689.8555 -7656.4209 8690.1191 C
-7656.5742 8690.1426 -7656.7441 8689.9648 -7656.8906 8689.9395 C
-7656.8623 8689.9199 L
-7657.0415 8689.7891 -7657.2793 8689.875 -7657.4297 8690.0254 C
-7657.4219 8689.9766 L
-7657.5195 8689.959 -7657.7505 8689.9941 -7657.8735 8690.125 C
-7658.1201 8689.957 -7657.9561 8689.2842 -7658.2295 8689.5645 C
-7658.48 8689.5723 -7658.6221 8689.9727 -7658.5215 8690.1152 C
-7658.9717 8689.9648 -7659.4834 8690.3281 -7659.9009 8689.9824 C
-7659.9658 8690.0723 -7659.9248 8690.1289 -7660.0586 8690.1816 C
-7660.7197 8690.0938 -7661.4551 8690.4453 -7661.9814 8690.0078 C
-7661.79 8689.9141 -7661.9688 8689.7842 -7661.9727 8689.6582 C
-7662.1309 8689.8574 -7662.1631 8689.4512 -7662.2197 8689.793 C
-7662.2041 8689.9941 -7662.2197 8690.0918 -7662.0337 8690.1729 C
-7662.4282 8690.2813 -7663.0283 8690.2813 -7663.2471 8690.0938 C
-7663.1377 8690.1865 -7663.2227 8690.248 -7663.3086 8690.3086 C
-7663.2803 8689.9873 -7663.5713 8689.9395 -7663.7915 8690.0527 C
-7663.8223 8690.248 L
-7663.9658 8690.0469 L
-7664.0503 8690.1094 -7664.0591 8690.457 -7664.2773 8690.2695 C
-7664.2891 8690.1934 -7664.3018 8690.1162 -7664.3418 8690.0605 C
-7664.5693 8690.2207 -7664.8906 8690.4922 -7665.1377 8690.3262 C
-7665.3398 8690.041 L
-7665.4453 8690.0723 -7665.6235 8690.2441 -7665.4375 8690.3262 C
-7665.8594 8690.1543 -7666.1309 8690.1328 -7666.2646 8689.8857 C
-7666.9912 8690.4873 -7668.0459 8690.5117 -7668.8906 8690.4688 C
-7668.8652 8690.3223 L
-7669.0923 8690.1855 -7668.9834 8690.5781 -7669.1416 8690.4766 C
-7669.0684 8690.3369 -7669.3145 8690.1729 -7669.1362 8690.002 C
-7669.4609 8689.8477 -7669.5547 8690.2559 -7669.7656 8690.3223 C
-7669.7979 8690.5146 -7669.5957 8690.1992 -7669.6367 8690.4434 C
-7669.6729 8690.5117 -7670.0859 8690.293 -7670.1362 8690.584 C
-7670.2178 8690.4697 -7670.1543 8690.2559 -7670.1104 8690.1377 C
-7670.3086 8690.2793 L
-7670.5513 8689.9395 -7669.7559 8689.6719 -7670.0107 8689.2529 C
-7670.1934 8689.2979 L
-7670.3682 8688.9941 -7669.71 8688.9551 -7670.1689 8688.8506 C
-7670.3682 8688.9941 -7670.5381 8689.416 -7670.3608 8689.5449 C
-7670.7754 8689.625 -7670.5527 8690.2383 -7670.9985 8690.2139 C
-7671.1201 8690.043 -7670.6416 8690.1729 -7670.7275 8689.9336 C
-7670.9375 8689.6992 -7671.1484 8690.0645 -7671.3354 8689.9824 C
-7671.1279 8690.0918 -7671.3032 8690.3857 -7671.4375 8690.4395 C
-7671.6641 8690.3018 -7671.29 8690.1641 -7671.6113 8690.1338 C
-7671.6641 8690.3018 -7671.9595 8690.4277 -7671.7041 8690.5449 C
-7671.8203 8690.9258 -7672.0381 8690.4395 -7672.2129 8690.7344 C
-7672.3174 8690.4658 -7671.8823 8690.1152 -7672.2354 8689.9814 C
-7672.1792 8690.2393 -7672.6704 8690.332 -7672.4839 8690.7139 C
-7672.6221 8690.6406 -7672.6367 8690.4375 -7672.5361 8690.2793 C
-7672.7334 8690.1201 -7673.0151 8690.75 -7673.0801 8690.2383 C
-7673.1479 8690.502 L
-7673.21 8690.416 -7673.2983 8690.3506 -7673.3994 8690.209 C
-7673.5732 8690.2041 -7673.96 8690.5664 -7673.9443 8690.168 C
-7674 8690.209 -7674.3975 8690.1914 -7674.2441 8690.4658 C
-7673.9971 8690.6338 -7673.96 8690.2656 -7673.8223 8690.6377 C
-7673.9971 8690.334 -7674.1787 8690.6777 -7674.3213 8690.7793 C
-7674.3447 8690.625 L
-7674.4297 8690.6855 -7674.6255 8690.6514 -7674.6787 8690.8184 C
-7674.6133 8690.7305 -7674.6475 8690.625 -7674.7148 8690.5879 C
-7674.8042 8690.8223 L
-7675.1494 8690.9395 -7674.8857 8690.4102 -7675.2217 8690.4785 C
-7674.9663 8690.2969 L
-7675.0225 8690.3359 -7675.1367 8690.1162 -7675.2979 8690.1895 C
-7675.3604 8690.4033 -7675.4775 8690.6602 -7675.5313 8690.8262 C
-7675.7207 8690.9199 -7675.6162 8690.585 -7675.8027 8690.8047 C
-7675.5586 8690.5469 L
-7675.5215 8690.4766 -7675.7231 8690.1934 -7675.9761 8690.1992 C
-7676.1377 8690.2734 -7676.3887 8690.582 -7676.1338 8690.6992 C
-7676.2607 8690.7031 -7676.4385 8690.5723 -7676.3379 8690.416 C
-7676.6255 8690.4902 -7676.2998 8690.6465 -7676.5479 8690.7793 C
-7676.6494 8690.6367 -7676.9658 8690.4336 -7677.1563 8690.2266 C
-7676.8975 8689.8682 L
-7677.0693 8689.8643 L
-7676.8467 8689.5781 -7677.1826 8689.6465 -7677.0566 8689.3438 C
-7677.1743 8689.2969 -7677.3169 8689.3994 -7677.4307 8689.4785 C
-7677.0864 8689.9629 -7677.8159 8690.1406 -7677.7158 8690.582 C
-7678.1875 8690.7031 -7678.0107 8689.5078 -7678.5024 8690.1992 C
-7678.4219 8690.3145 -7678.6533 8690.6504 -7678.3564 8690.5225 C
-7678.6494 8690.4746 -7678.5557 8690.9658 -7678.9014 8690.7832 C
-7678.6455 8690.6016 -7679.1763 8690.3359 -7678.8066 8690.0723 C
-7678.8311 8690.2178 -7678.6001 8690.1826 -7678.5435 8690.1426 C
-7678.6641 8689.9727 -7678.5186 8689.6973 -7678.8184 8689.6973 C
-7679.0015 8689.7393 -7679.2524 8689.748 -7679.2158 8689.9785 C
-7679.2085 8690.2314 -7678.9365 8689.9512 -7679.0537 8690.207 C
-7679.4185 8690.2949 -7679.4795 8689.9102 -7679.6304 8690.3594 C
-7679.3999 8690.3232 -7679.3423 8690.584 -7679.3467 8690.7578 C
-7679.6143 8690.8633 L
-7679.5625 8690.6953 L
-7679.9922 8690.5742 -7679.6895 8691 -7680.1055 8690.9551 C
-7680.3008 8690.623 L
-7680.2017 8690.3369 -7679.6953 8690.75 -7679.7695 8690.2842 C
-7680.04 8690.2656 -7680.1299 8690.502 -7680.3848 8690.3818 C
-7680.3281 8690.3418 -7680.2505 8690.3301 -7680.1943 8690.2891 C
-7680.2915 8690.2734 -7680.3877 8689.6563 -7680.7734 8690.0176 C
-7680.9727 8690.1582 -7680.8262 8690.1826 -7680.8311 8690.3574 C
-7681.2656 8690.4102 -7681.3955 8690.5879 -7681.6753 8690.6152 C
-7681.6177 8690.2754 -7682.1699 8690.582 -7681.8608 8690.2344 C
-7681.7188 8690.4336 -7681.0903 8690.4141 -7680.9365 8690.0898 C
-7681.0947 8689.6865 -7680.5952 8690.1465 -7680.5024 8689.7383 C
-7680.8506 8689.7285 -7680.8335 8689.332 -7680.8896 8689.0723 C
-7680.9863 8689.0537 -7681.0801 8689.1641 -7681.1377 8689.2041 C
-7681.1787 8689.4482 -7681.0522 8689.4453 -7681.0449 8689.6973 C
-7681.4336 8689.6309 -7681.8081 8689.7666 -7682.0225 8690.0059 C
-7682.1523 8689.8848 -7682.1113 8689.6406 -7681.9575 8689.6162 C
-7682.4199 8689.6895 -7682.9141 8689.6563 -7683.3535 8689.582 C
-7683.0693 8689.9814 -7683.8433 8689.6758 -7683.6494 8690.0078 C
-7683.4141 8690.0977 -7683.2119 8690.3818 -7683.3418 8690.5605 C
-7683.4888 8690.5352 -7683.3369 8690.3857 -7683.3984 8690.3008 C
-7683.5859 8690.5186 -7683.6895 8689.9512 -7683.8735 8690.2949 C
-7683.4512 8690.166 -7683.7915 8689.8086 -7683.7139 8689.4961 C
-7684.0186 8689.6719 -7683.7007 8689.2734 -7684.0024 8689.2734 C
-7684.3057 8689.4473 -7684.6787 8689.584 -7685.0161 8689.6514 C
-7685.4399 8689.3555 -7686.0898 8689.6465 -7686.4683 8689.6582 C
-7686.6665 8689.5 -7686.5322 8689.1465 -7686.7471 8689.085 C
-7686.9995 8689.0918 -7686.5601 8689.4658 -7686.9336 8689.3047 C
-7686.8975 8689.2344 L
-7687.0107 8689.3154 -7687.5825 8688.9941 -7687.6929 8689.502 C
-7687.5776 8689.1191 L
-7687.6475 8689.084 -7687.7119 8689.1719 -7687.7695 8689.2129 C
-7687.7725 8689.0879 -7687.8535 8688.9746 -7687.7402 8688.8926 C
-7687.9707 8688.6289 -7688.2241 8688.9346 -7688.4746 8688.9453 C
-7688.3135 8689.1719 L
-7688.7422 8689.3496 -7689.0293 8689.125 -7689.4443 8689.2041 C
-7689.4316 8688.9824 L
-7689.6787 8689.1152 L
-7689.6182 8688.8994 -7689.8447 8688.7617 -7689.9751 8688.9414 C
-7689.3335 8688.3984 L
-7689.1553 8688.5293 -7689.5283 8688.666 -7689.4165 8688.8848 C
-7689.3213 8689.0762 -7688.9375 8689.0146 -7688.8755 8688.8018 C
-7689.0225 8688.7773 -7689.0293 8688.8262 -7689.1436 8688.9063 C
-7689.1919 8688.5977 -7688.9688 8688.6094 -7688.8584 8688.4033 C
-7688.9355 8688.416 -7689.0449 8688.3223 -7689.0615 8688.4199 C
-7688.9102 8688.2695 -7688.7578 8688.2461 -7688.5059 8688.2383 C
-7688.6763 8688.3594 -7688.4131 8688.4297 -7688.4775 8688.5176 C
-7688.4575 8688.2461 -7688.2168 8688.1621 -7687.9053 8688.2383 C
-7687.6831 8688.5527 -7687.3208 8688.0361 -7686.96 8688.123 C
-7687.1064 8688.3984 -7687.2935 8688.6191 -7687.5127 8688.7305 C
-7687.2861 8688.8682 -7687.2607 8688.7227 -7687.0337 8688.8613 C
-7686.9238 8688.6563 -7686.8457 8688.3418 -7686.5503 8688.2168 C
-7686.5342 8688.4199 L
-7686.2666 8688.3154 -7686.2666 8688.0146 -7685.9258 8688.0723 C
-7685.3418 8688.1719 -7684.7407 8688.1719 -7684.2949 8688.1973 C
-7684.2783 8688.3994 L
-7684.0303 8687.9658 -7683.4521 8688.2393 -7683.1182 8688.0469 C
-7682.5503 8688.2422 -7681.8848 8687.8535 -7681.5938 8688.2031 C
-7680.5913 8688.0469 -7679.7148 8687.8945 -7678.6768 8687.9688 C
-7678.8516 8688.2637 L
-7678.6655 8688.0469 -7678.7305 8688.4336 -7678.5479 8688.3896 C
-7678.7578 8688.1543 -7678.2949 8688.084 -7678.1665 8687.9033 C
-7677.7041 8688.1328 -7677.1104 8687.8818 -7676.7007 8687.6758 C
-7676.6846 8687.8789 L
-7676.2705 8687.498 -7675.7759 8687.832 -7675.2598 8687.8945 C
-7675.2007 8687.9785 -7675.1074 8688.1689 -7674.9536 8688.1465 C
-7674.6738 8687.8184 -7674.5273 8687.8418 -7674.1167 8687.6367 C
-7673.8169 8687.6367 -7673.3301 8687.7178 -7673.0254 8687.8457 C
-7671.8975 8687.3848 -7670.7456 8687.6797 -7669.5732 8687.4023 C
-7669.4888 8687.6406 L
-7668.3521 8687.1309 -7666.9541 8687.5938 -7665.9839 8687.332 C
-7666.0776 8687.7393 L
-7665.7734 8687.8643 -7665.3843 8687.6328 -7665.4619 8687.3438 C
-7665.1567 8687.4688 -7664.7007 8687.1465 -7664.5068 8687.4814 C
-7664.1953 8687.5566 -7664.1255 8687.293 -7663.8662 8687.2383 C
-7663.2422 8687.3926 -7663.0107 8687.3574 -7662.4224 8687.2813 C
-7662.5684 8687.2559 L
-7662.6328 8687.3457 -7662.6387 8687.5186 -7662.4922 8687.5449 C
-7662.2725 8687.4307 -7661.6846 8687.6543 -7661.9033 8687.168 C
-7661.2754 8687.4482 -7660.4385 8686.9395 -7659.8271 8687.3184 C
-7659.8789 8687.1855 -7659.7246 8687.1602 -7659.6602 8687.0703 C
-7659.1089 8687.0645 -7658.5293 8687.3359 -7658.0898 8687.1094 C
-7658.0024 8687.1758 -7658.2295 8687.3359 -7658.0049 8687.3496 C
-7657.8721 8687.2979 -7658.0024 8687.1758 -7657.8384 8687.1016 C
-7656.9453 8686.8535 -7656.0303 8687.3574 -7655.2188 8687.293 C
-7653.7754 8687.0361 -7652.2695 8687.166 -7650.8867 8687.123 C
-7650.9023 8687.2207 L
-7650.4395 8686.8477 -7649.8159 8687.6025 -7649.4463 8687.041 C
-7649.3369 8687.1338 -7649.0283 8687.085 -7649.1094 8687.2734 C
-7648.7407 8687.0098 -7648.0771 8687.5215 -7647.5439 8687.1865 C
-7647.5928 8687.1777 -7647.6211 8687.1973 -7647.6777 8687.2393 C
-7647.1392 8687.4551 -7646.6641 8687.1602 -7646.0957 8687.3555 C
-7646.1533 8687.3975 -7646.2583 8687.4277 -7646.2754 8687.5254 C
-7646.0557 8687.7129 -7645.7549 8687.1133 -7645.6348 8687.584 C
-7645.5088 8687.5801 -7645.5449 8687.3477 -7645.6221 8687.3613 C
-7644.3779 8687.5449 -7643.0498 8687.2441 -7641.7549 8687.1367 C
-7640.8271 8687.418 -7641.6982 8687.9297 -7640.9663 8687.5781 C
-7640.9063 8687.6689 -7640.9229 8687.3984 -7640.9131 8687.4961 C
-7640.6299 8687.3643 -7640.4717 8688.0215 -7640.2754 8687.7754 C
-7640.3564 8687.4863 -7640.1445 8687.6133 -7640.1387 8687.4375 C
-7639.5713 8687.625 -7639.4575 8687.8857 -7639.0098 8687.666 C
-7639.0435 8687.8184 L
-7638.5186 8687.3887 -7637.9102 8687.6191 -7637.4673 8687.123 C
-7634.5728 8687.0322 -7631.7983 8686.7578 -7628.9761 8686.7002 C
-7626.1865 8686.7949 -7623.4551 8686.5723 -7620.6221 8686.8359 C
-7619.9585 8687.2354 -7619.9087 8687.2246 -7619.1797 8687.0625 C
-7619.2095 8687.127 -7619.2549 8687.1426 -7619.2061 8687.2031 C
-7619.1699 8686.875 -7618.6929 8687.1719 -7618.6235 8686.8594 C
-7617.5762 8686.9199 -7616.6113 8686.8301 -7615.5337 8686.8281 C
-7615.7041 8686.8633 -7615.7896 8687.1309 -7615.5869 8687.1094 C
-7615.3755 8686.8994 L
-7615.3408 8686.9922 L
-7615.2021 8686.9434 -7615.0513 8686.7813 -7615.1943 8686.6758 C
-7612.4873 8686.3926 -7609.8242 8687.0498 -7607.1729 8686.9697 C
-7606.5439 8687.1064 -7605.6475 8686.9814 -7604.9629 8686.9141 C
-7602.9355 8687.3506 -7601.1084 8687.7041 -7599.0479 8687.3984 C
-7599.3174 8688.2461 -7600.1675 8688.4414 V
f
-7690.2578 8688.2422 m
-7690.1855 8688.4063 -7689.9497 8688.4961 -7690.1377 8688.7139 C
-7690.1611 8688.5605 -7690.2822 8688.3887 -7690.2578 8688.2422 C
f
-7683.9619 8689.9297 m
-7683.9536 8689.8809 -7683.8721 8689.9961 -7683.8521 8690.0225 C
-7683.9297 8690.0352 -7684.0024 8690.1729 -7684.0645 8690.0879 C
-7683.9854 8690.0762 -7683.9976 8689.998 -7683.9619 8689.9297 C
f
-7682.3521 8690.0273 m
-7682.3765 8690.1729 -7682.7207 8690.2891 -7682.9238 8690.3066 C
-7682.3521 8690.0273 L
f
-7680.8521 8690.6289 m
-7680.7227 8690.752 -7680.7583 8690.8193 -7680.9326 8690.8154 C
-7680.9453 8690.7383 -7680.8877 8690.6992 -7680.8521 8690.6289 C
f
-7680.7456 8690.2969 m
-7680.6211 8690.293 -7680.5591 8690.3789 -7680.4985 8690.4629 C
-7680.5029 8690.3369 -7680.7871 8690.541 -7680.7456 8690.2969 C
f
-7677.4893 8690.7207 m
-7677.4111 8690.709 -7677.2417 8690.5879 -7677.1689 8690.75 C
-7677.2505 8690.6367 -7677.5498 8690.9346 -7677.4893 8690.7207 C
f
-7675.9761 8690.5 m
-7675.9272 8690.5098 -7675.9072 8690.5361 -7675.8506 8690.4961 C
-7675.7607 8690.5625 -7675.8555 8690.6689 -7675.9312 8690.6826 C
-7675.9761 8690.5 L
f
-7648.4287 8689.9141 m
-7648.5923 8689.9863 L
-7648.5684 8689.8418 L
-7648.4287 8689.9141 L
f
-7636.3574 8689.9063 m
-7636.1943 8689.8145 -7636.2441 8690.043 -7636.2168 8690.0645 C
-7636.3643 8690.0801 -7636.1621 8689.8848 -7636.3574 8689.9063 C
f
-7629.8486 8689.1777 m
-7629.8984 8689.1816 L
-7629.8818 8688.8818 L
-7629.8486 8689.1777 L
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 5 pt. Angled/ Adobe ArtOnPath ) -
(Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Tapered Stro) -
(ke/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Angled)
(1 5 5 70 70 50 50 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -
(1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.000031 0.993988 1 0.000031 1 0 0 Xa
(RGB Red)
Pc
0.061982 0.000031 0.965148 0.000031 1 1 0 Xa
(RGB Yellow)
Pc
0.627649 0.000031 1 0.000031 0 1 0 Xa
(RGB Green)
Pc
0.517937 0.000031 0.125399 0.000031 0 1 1 Xa
(RGB Cyan)
Pc
0.883665 0.769161 0.000031 0.000031 0 0 1 Xa
(RGB Blue)
Pc
0.269902 0.816403 0.000031 0.000031 1 0 1 Xa
(RGB Magenta)
Pc
0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0.000031 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000366 0.500664 0.985656 0.000031 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0.000214 0.348486 0.871305 0.000031 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045136 0.000031 0.931884 0.000031 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188968 0.000397 0.98233 0.000031 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501091 0.001373 0.990387 0.000031 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.761959 0.000031 0.749783 0.000031 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.6972 0.14847 0.000031 0.000031 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.875364 0.526451 0.000031 0.000031 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262547 0.245243 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0.000031 0.970001 0.204959 0.000031 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.22855 0.274266 0.39942 0.000031 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362341 0.574029 0.840574 0.226169 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
2 (Fade To White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To White)
Pc
Bb
0 0 0 0 Bh
2 (Sharp Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sharp Black Vignette)
Pc
(Spirals) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Spirals)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.193668 0.150057 0.155337 0.000031 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084596 0.061311 0.065766 0.000031 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.153536 0.443244 0.859922 0.007568 0.839216 0.584314 0.266667 Xa
(R=214 G=149 B=68)
Pc
0.653193 0.329747 0.000031 0.000031 0.278431 0.596078 0.929412 Xa
(R=71 G=152 B=237)
Pc
0.829221 0.708125 0.000031 0.000031 0.164706 0.317647 0.878431 Xa
(R=42 G=81 B=224)
Pc
0.481636 0.794064 0.000031 0.000031 0.705882 0.227451 0.894118 Xa
(R=180 G=58 B=228)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
8.34277 61.9756 m
8.34277 30.0635 309.4063 4.18359 680.7969 4.18359 c
1052.1865 4.18359 1353.2129 30.0635 1353.2129 61.9756 c
1353.2129 93.9043 1052.1865 119.7617 680.7969 119.7617 c
309.4063 119.7617 8.34277 93.9043 8.34277 61.9756 c
Bb
-318.2911 -12.4575 341.7971 0.514887 Bh
1 (Unnamed gradient 1) -149.0273 -1909.6016 -5.53217 452.6725 -1.438 0 0 0.132175 18751.4766 7292.1104 Bg
-650.9174 -5.79485 0.532639 -59.8297 680.7773 61.9727 Bm
f
0 BB
u
u
0 Ap
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
41.5146 604.4307 m
959.3398 1104.2388 L
1237.5781 593.3872 L
326.1289 93.2705 L
41.5146 604.4307 L
f
/BBAccumRotation (0.292717) XT
1 Ap
1233.9395 594.0747 m
327.5269 96.6826 L
45.1426 603.7495 L
957.9521 1100.8154 L
1233.9395 594.0747 L
Bb
1 (Unnamed gradient 10) 377.0068 985.4497 -54.9721 747.2505 0.996374 0.085084 -0.085084 0.996374 726.1159 -651.482 Bg
375.2848 -646.1769 -910.9598 -529.0647 868.124 1259.4673 Xm
3976.2334 -6846.4009 -910.9598 -529.0647 -3108.1094 8105.8682 Bc
375.2848 -646.1769 -910.9598 -529.0647 868.124 1259.4673 Bm
3976.2334 -6846.4009 -910.9598 -529.0647 1243.4092 613.2905 Bc
f
0 BB
/BBAccumRotation (0.498691) XT
U
u
0 Ap
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
50.1987 600.0879 m
968.0234 1099.8965 L
1246.2617 589.0454 L
328.4458 89.2256 L
50.1987 600.0879 L
f
/BBAccumRotation (0.292717) XT
1 Ap
1242.623 589.7324 m
329.8438 92.6396 L
53.8262 599.4077 L
966.6357 1096.4736 L
1242.623 589.7324 L
Bb
1 (Unnamed gradient 10) 383.835 980.3267 -54.9721 747.2518 0.996374 0.085084 -0.085084 0.996374 726.1159 -651.482 Bg
375.2854 -646.178 -915.5909 -531.7543 876.8066 1255.127 Xm
3979.6621 -6852.3047 -915.5909 -531.7543 -3102.8555 8107.4316 Bc
375.2854 -646.178 -915.5909 -531.7543 876.8066 1255.127 Bm
3979.6621 -6852.3047 -915.5909 -531.7543 1252.0918 608.9487 Bc
f
0 BB
/BBAccumRotation (0.498691) XT
u
u
0 Ap
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
421.3521 658.0127 m
163.3984 517.603 L
158.3813 526.8281 L
416.3296 667.2451 L
421.3521 658.0127 L
421.3521 658.0127 L
f
/BBAccumRotation (0.498499) XT
432.8359 636.915 m
174.8877 496.5078 L
169.8613 505.7344 L
427.8145 646.1514 L
432.8359 636.915 L
432.8359 636.915 L
f
/BBAccumRotation (0.498499) XT
444.3203 615.8213 m
186.3721 475.4102 L
181.3496 484.6328 L
439.2939 625.0625 L
444.3203 615.8213 L
444.3203 615.8213 L
f
/BBAccumRotation (0.498499) XT
455.8047 594.7368 m
197.8564 454.3164 L
192.8296 463.542 L
450.7773 603.9624 L
455.8047 594.7368 L
455.8047 594.7368 L
f
/BBAccumRotation (0.498499) XT
467.2832 573.6328 m
209.3345 433.2148 L
204.313 442.4482 L
462.2661 582.8623 L
467.2832 573.6328 L
467.2832 573.6328 L
f
/BBAccumRotation (0.498499) XT
478.7734 552.543 m
220.8188 412.1289 L
215.7964 421.3525 L
473.7505 561.7686 L
478.7734 552.543 L
478.7734 552.543 L
f
/BBAccumRotation (0.498499) XT
490.2559 531.439 m
232.3037 391.0273 L
227.2813 400.2568 L
485.2354 540.6797 L
490.2559 531.439 L
490.2559 531.439 L
f
/BBAccumRotation (0.498499) XT
U
u
577.1963 371.7236 m
319.2485 231.3096 L
314.2256 240.5391 L
572.1797 380.9561 L
577.1963 371.7236 L
577.1963 371.7236 L
f
/BBAccumRotation (0.498499) XT
588.6855 350.624 m
330.7275 210.2139 L
325.71 219.4395 L
583.6582 359.8545 L
588.6855 350.624 L
588.6855 350.624 L
f
/BBAccumRotation (0.498499) XT
600.1709 329.5313 m
342.2158 189.1152 L
337.188 198.3379 L
595.1426 338.7637 L
600.1709 329.5313 L
600.1709 329.5313 L
f
/BBAccumRotation (0.498499) XT
611.6484 308.4424 m
353.7061 168.0293 L
348.6777 177.248 L
606.627 317.666 L
611.6484 308.4424 L
611.6484 308.4424 L
f
/BBAccumRotation (0.498499) XT
623.1367 287.3369 m
365.1846 146.9287 L
360.1567 156.1553 L
618.1162 296.5664 L
623.1367 287.3369 L
623.1367 287.3369 L
f
/BBAccumRotation (0.498499) XT
U
u
508.8428 497.293 m
250.8994 356.874 L
245.8721 366.1074 L
503.8262 506.522 L
508.8428 497.293 L
508.8428 497.293 L
f
/BBAccumRotation (0.498499) XT
520.3311 476.1934 m
262.3833 335.7764 L
257.3564 345.0059 L
515.3105 485.4229 L
520.3311 476.1934 L
520.3311 476.1934 L
f
/BBAccumRotation (0.498499) XT
531.8096 455.0938 m
273.8623 314.6777 L
268.8354 323.9131 L
526.7891 464.3252 L
531.8096 455.0938 L
531.8096 455.0938 L
f
/BBAccumRotation (0.498499) XT
543.3008 434.0039 m
285.3462 293.5879 L
280.3252 302.8223 L
538.2783 443.2334 L
543.3008 434.0039 L
543.3008 434.0039 L
f
/BBAccumRotation (0.498499) XT
554.7842 412.9092 m
296.8315 272.5 L
291.8032 281.7188 L
549.7568 422.1406 L
554.7842 412.9092 L
554.7842 412.9092 L
f
/BBAccumRotation (0.498499) XT
566.2627 391.8164 m
308.3188 251.3867 L
303.293 260.6309 L
561.2402 401.0342 L
566.2627 391.8164 L
566.2627 391.8164 L
f
/BBAccumRotation (0.498499) XT
577.7471 370.7168 m
319.7983 230.3008 L
314.7715 239.5303 L
572.7256 379.9473 L
577.7471 370.7168 L
577.7471 370.7168 L
f
/BBAccumRotation (0.498499) XT
U
U
u
u
978.5127 974.0254 m
720.5742 833.6133 L
715.5391 842.8359 L
973.4951 983.2598 L
978.5127 974.0254 L
978.5127 974.0254 L
f
/BBAccumRotation (0.498499) XT
989.9971 952.9365 m
732.0488 812.5249 L
727.0254 821.7476 L
984.9727 962.1641 L
989.9971 952.9365 L
989.9971 952.9365 L
f
/BBAccumRotation (0.498499) XT
1001.4854 931.8389 m
743.5332 791.4229 L
738.5107 800.6523 L
996.4531 941.0649 L
1001.4854 931.8389 L
1001.4854 931.8389 L
f
/BBAccumRotation (0.498499) XT
1012.9648 910.7402 m
755.0107 770.3281 L
749.9951 779.5566 L
1007.9414 919.9668 L
1012.9648 910.7402 L
1012.9648 910.7402 L
f
/BBAccumRotation (0.498499) XT
1024.4482 889.6563 m
766.501 749.2314 L
761.4717 758.4531 L
1019.4209 898.873 L
1024.4482 889.6563 L
1024.4482 889.6563 L
f
/BBAccumRotation (0.498499) XT
1035.9385 868.5532 m
777.9805 728.1367 L
772.957 737.3652 L
1030.9131 877.7842 L
1035.9385 868.5532 L
1035.9385 868.5532 L
f
/BBAccumRotation (0.498499) XT
1047.4189 847.4595 m
789.4668 707.0396 L
784.4414 716.2705 L
1042.3896 856.6826 L
1047.4189 847.4595 L
1047.4189 847.4595 L
f
/BBAccumRotation (0.498499) XT
U
U
0.356847 0.284123 0.362036 0.002564 0.662745 0.658824 0.619608 Xa
951.7109 1020.3086 m
133.2627 572.438 L
131.3745 575.8818 L
949.8281 1023.7578 L
951.7109 1020.3086 L
951.7109 1020.3086 L
f
/BBAccumRotation (0.500715) XT
U
q
121.2817 798.0981 m
1180.3428 1012.6802 L
1325.6816 349.0879 1327.9336 339.2256 V
1332 322.1328 1322.3311 315.9326 1315.4004 314.3682 C
1307.0322 312.5293 328.4458 89.2256 Y
121.2817 798.0981 L
h
W
n
/BBAccumRotation (0.009783) XT
u
0 O
0.549981 0.469184 0.517784 0.152071 0.45098 0.447059 0.423529 Xa
50.1987 600.0879 m
968.0234 1099.8965 L
1246.2617 589.0454 L
328.4458 89.2256 L
50.1987 600.0879 L
f
/BBAccumRotation (0.292717) XT
1 Ap
1242.623 589.7324 m
329.8438 92.6396 L
53.8262 599.4077 L
966.6357 1096.4736 L
1242.623 589.7324 L
Bb
1 (Unnamed gradient 9) 383.835 980.3267 -54.9721 747.2518 0.996374 0.085084 -0.085084 0.996374 726.1159 -651.482 Bg
375.2854 -646.178 -915.5909 -531.7543 876.8066 1255.127 Xm
3979.6621 -6852.3047 -915.5909 -531.7543 -3102.8555 8107.4316 Bc
375.2854 -646.178 -915.5909 -531.7543 876.8066 1255.127 Bm
3979.6621 -6852.3047 -915.5909 -531.7543 1252.0918 608.9487 Bc
f
0 BB
/BBAccumRotation (0.498691) XT
u
u
0 Ap
0.549981 0.469184 0.517784 0.152071 0.45098 0.447059 0.423529 Xa
421.3521 658.0127 m
163.3984 517.603 L
158.3813 526.8281 L
416.3296 667.2451 L
421.3521 658.0127 L
421.3521 658.0127 L
f
/BBAccumRotation (0.498499) XT
432.8359 636.915 m
174.8877 496.5078 L
169.8613 505.7344 L
427.8145 646.1514 L
432.8359 636.915 L
432.8359 636.915 L
f
/BBAccumRotation (0.498499) XT
444.3203 615.8213 m
186.3721 475.4102 L
181.3496 484.6328 L
439.2939 625.0625 L
444.3203 615.8213 L
444.3203 615.8213 L
f
/BBAccumRotation (0.498499) XT
455.8047 594.7368 m
197.8564 454.3164 L
192.8296 463.542 L
450.7773 603.9624 L
455.8047 594.7368 L
455.8047 594.7368 L
f
/BBAccumRotation (0.498499) XT
467.2832 573.6328 m
209.3345 433.2148 L
204.313 442.4482 L
462.2661 582.8623 L
467.2832 573.6328 L
467.2832 573.6328 L
f
/BBAccumRotation (0.498499) XT
478.7734 552.543 m
220.8188 412.1289 L
215.7964 421.3525 L
473.7505 561.7686 L
478.7734 552.543 L
478.7734 552.543 L
f
/BBAccumRotation (0.498499) XT
490.2559 531.439 m
232.3037 391.0273 L
227.2813 400.2568 L
485.2354 540.6797 L
490.2559 531.439 L
490.2559 531.439 L
f
/BBAccumRotation (0.498499) XT
U
u
577.1963 371.7236 m
319.2485 231.3096 L
314.2256 240.5391 L
572.1797 380.9561 L
577.1963 371.7236 L
577.1963 371.7236 L
f
/BBAccumRotation (0.498499) XT
588.6855 350.624 m
330.7275 210.2139 L
325.71 219.4395 L
583.6582 359.8545 L
588.6855 350.624 L
588.6855 350.624 L
f
/BBAccumRotation (0.498499) XT
600.1709 329.5313 m
342.2158 189.1152 L
337.188 198.3379 L
595.1426 338.7637 L
600.1709 329.5313 L
600.1709 329.5313 L
f
/BBAccumRotation (0.498499) XT
611.6484 308.4424 m
353.7061 168.0293 L
348.6777 177.248 L
606.627 317.666 L
611.6484 308.4424 L
611.6484 308.4424 L
f
/BBAccumRotation (0.498499) XT
623.1367 287.3369 m
365.1846 146.9287 L
360.1567 156.1553 L
618.1162 296.5664 L
623.1367 287.3369 L
623.1367 287.3369 L
f
/BBAccumRotation (0.498499) XT
U
u
508.8428 497.293 m
250.8994 356.874 L
245.8721 366.1074 L
503.8262 506.522 L
508.8428 497.293 L
508.8428 497.293 L
f
/BBAccumRotation (0.498499) XT
520.3311 476.1934 m
262.3833 335.7764 L
257.3564 345.0059 L
515.3105 485.4229 L
520.3311 476.1934 L
520.3311 476.1934 L
f
/BBAccumRotation (0.498499) XT
531.8096 455.0938 m
273.8623 314.6777 L
268.8354 323.9131 L
526.7891 464.3252 L
531.8096 455.0938 L
531.8096 455.0938 L
f
/BBAccumRotation (0.498499) XT
543.3008 434.0039 m
285.3462 293.5879 L
280.3252 302.8223 L
538.2783 443.2334 L
543.3008 434.0039 L
543.3008 434.0039 L
f
/BBAccumRotation (0.498499) XT
554.7842 412.9092 m
296.8315 272.5 L
291.8032 281.7188 L
549.7568 422.1406 L
554.7842 412.9092 L
554.7842 412.9092 L
f
/BBAccumRotation (0.498499) XT
566.2627 391.8164 m
308.3188 251.3867 L
303.293 260.6309 L
561.2402 401.0342 L
566.2627 391.8164 L
566.2627 391.8164 L
f
/BBAccumRotation (0.498499) XT
577.7471 370.7168 m
319.7983 230.3008 L
314.7715 239.5303 L
572.7256 379.9473 L
577.7471 370.7168 L
577.7471 370.7168 L
f
/BBAccumRotation (0.498499) XT
U
U
u
u
978.5127 974.0254 m
720.5742 833.6133 L
715.5391 842.8359 L
973.4951 983.2598 L
978.5127 974.0254 L
978.5127 974.0254 L
f
/BBAccumRotation (0.498499) XT
989.9971 952.9365 m
732.0488 812.5249 L
727.0254 821.7476 L
984.9727 962.1641 L
989.9971 952.9365 L
989.9971 952.9365 L
f
/BBAccumRotation (0.498499) XT
1001.4854 931.8389 m
743.5332 791.4229 L
738.5107 800.6523 L
996.4531 941.0649 L
1001.4854 931.8389 L
1001.4854 931.8389 L
f
/BBAccumRotation (0.498499) XT
1012.9648 910.7402 m
755.0107 770.3281 L
749.9951 779.5566 L
1007.9414 919.9668 L
1012.9648 910.7402 L
1012.9648 910.7402 L
f
/BBAccumRotation (0.498499) XT
1024.4482 889.6563 m
766.501 749.2314 L
761.4717 758.4531 L
1019.4209 898.873 L
1024.4482 889.6563 L
1024.4482 889.6563 L
f
/BBAccumRotation (0.498499) XT
1035.9385 868.5532 m
777.9805 728.1367 L
772.957 737.3652 L
1030.9131 877.7842 L
1035.9385 868.5532 L
1035.9385 868.5532 L
f
/BBAccumRotation (0.498499) XT
1047.4189 847.4595 m
789.4668 707.0396 L
784.4414 716.2705 L
1042.3896 856.6826 L
1047.4189 847.4595 L
1047.4189 847.4595 L
f
/BBAccumRotation (0.498499) XT
U
U
0.465797 0.384649 0.449805 0.046387 0.552941 0.54902 0.517647 Xa
951.7109 1020.3086 m
133.2627 572.438 L
131.3745 575.8818 L
949.8281 1023.7578 L
951.7109 1020.3086 L
951.7109 1020.3086 L
f
/BBAccumRotation (0.500715) XT
U
Q
0 A
u
u
0 O
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
0 J 0 j 1 w 4 M []0 d0 XR
169.6133 786.0601 m
1190.4736 1009.7852 L
1335.8125 346.1934 1338.0654 336.3311 V
1342.1318 319.2383 1332.4629 313.0381 1325.5313 311.4736 C
1317.1641 309.6348 328.4458 89.2256 Y
169.6133 786.0601 L
f
/BBAccumRotation (0.009783) XT
1 Ap
1334.9746 337.0508 m
1330.3301 321.8682 L
1322.7109 313.7842 L
328.2505 93.1729 L
173.0176 783.8726 L
1188.2852 1006.3789 L
1334.9746 337.0508 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 785.3184 666.0562 0 683.27 0.873664 -0.486529 0.486529 0.873664 -2921.1804 5062.3555 Bg
596.9484 332.4309 332.4309 -596.9484 757.7773 657.9404 Bm
f
0 BB
/BBAccumRotation (0.215757) XT
U
U
u
u
0 Ap
0.549981 0.469184 0.517784 0.152071 0.45098 0.447059 0.423529 Xa
176.8501 780.271 m
1197.7109 1003.9961 L
1343.0488 340.4043 1345.3018 330.542 V
1349.3682 313.4492 1339.6992 307.249 1332.7676 305.6846 C
1324.4004 303.8457 329.0713 85.6787 Y
176.8501 780.271 L
f
/BBAccumRotation (0.009783) XT
1 Ap
1342.2109 331.2617 m
1337.5664 316.0791 L
1329.9482 307.9951 L
331.2578 89.0889 L
180.2539 778.0825 L
1195.5215 1000.5894 L
1342.2109 331.2617 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 787.5156 657.4761 0 684.0456 0.873664 -0.486529 0.486529 0.873664 -2921.1802 5062.355 Bg
597.6259 332.8083 332.8083 -597.6259 763.8721 651.5142 Bm
f
0 BB
/BBAccumRotation (0.215757) XT
1343.4902 325.4258 m
1344.4492 320.7715 1341.6563 310.9746 1335.207 309.1191 C
1330.5166 308.0957 331.2578 89.0889 Y
315.2344 162.1787 L
1330.5068 384.6982 L
1342.0352 332.1152 1343.4902 325.4258 V
Bb
1 (Unnamed gradient 7) 779.9932 385.415 -73.393 340.183 0.999886 0.012219 -0.012219 0.999886 114.7257 -90.2729 Bg
93.2318 -327.144 -1005.952 -286.6834 1294.3652 518.8135 Xm
2301.9626 -8077.4258 -1005.952 -286.6834 -1007.0679 8594.3809 Bc
92.7021 -325.2852 -1005.952 -286.6834 1294.8945 516.9546 Bm
2301.9626 -8077.4258 -1005.952 -286.6834 1387.5967 191.6689 Bc
f
0 BB
/BBAccumRotation (0.215757) XT
U
u
0 Ap
0.312352 0.244053 0.325902 0.000031 0.701961 0.698039 0.654902 Xa
210.7007 758.2549 m
1174.7852 969.5371 L
1314.6025 332.3145 1316.7334 323.002 V
1320.5713 306.8574 1311.4404 301.0049 1304.8945 299.5264 C
1296.9922 297.7891 357.0205 91.7559 Y
210.7007 758.2549 L
f
/BBAccumRotation (0.009783) XT
1 Ap
1313.8145 323.6816 m
1309.4268 309.3418 L
1302.2324 301.709 L
359.084 94.9766 L
213.916 756.1885 L
1172.7178 966.3203 L
1313.8145 323.6816 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 780.0225 639.6621 0 650.6626 0.873664 -0.486529 0.486529 0.873664 -2921.1802 5062.355 Bg
568.4604 316.5665 316.5665 -568.4604 765.9922 632.3047 Bm
f
0 BB
/BBAccumRotation (0.215757) XT
1315.0195 318.1689 m
1315.9277 313.7734 1313.29 304.5234 1307.1992 302.7705 C
1302.7686 301.8037 359.084 94.9766 Y
343.0127 167.8779 L
1301.8213 378.0225 L
1313.6475 324.4873 1315.0195 318.1689 V
Bb
1 (Unnamed gradient 7) 780.6748 381.3066 -73.393 331.0703 0.999886 0.012219 -0.012219 0.999886 114.7257 -90.2729 Bg
90.7344 -318.3806 -950.3737 -270.8443 1267.207 506.7773 Xm
2302.6973 -8080.0024 -950.3737 -270.8443 -1034.9746 8584.9707 Bc
90.2188 -316.5716 -950.3737 -270.8443 1267.7227 504.9683 Bm
2302.6973 -8080.0024 -950.3737 -270.8443 1357.9414 188.3965 Bc
f
0 BB
/BBAccumRotation (0.215757) XT
U
u
u
u
u
0 Ap
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
887.1279 656.2969 m
620.8438 597.9937 L
618.6055 608.2622 L
884.8779 666.5601 L
887.1279 656.2969 L
887.1279 656.2969 L
f
/BBAccumRotation (0.215565) XT
892.2676 632.8359 m
605.374 570.0264 L
603.1182 580.2827 L
890.0166 643.1021 L
892.2676 632.8359 L
892.2676 632.8359 L
f
/BBAccumRotation (0.215565) XT
897.4053 609.3716 m
610.5078 546.5664 L
608.2617 556.8237 L
895.1592 619.6455 L
897.4053 609.3716 L
897.4053 609.3716 L
f
/BBAccumRotation (0.215565) XT
902.543 585.9155 m
615.6445 523.0967 L
613.3994 533.3628 L
900.2861 596.1807 L
902.543 585.9155 L
902.543 585.9155 L
f
/BBAccumRotation (0.215565) XT
907.6797 562.4512 m
620.7822 499.6255 L
618.5371 509.8979 L
905.4355 572.7148 L
907.6797 562.4512 L
907.6797 562.4512 L
f
/BBAccumRotation (0.215565) XT
912.8125 538.9912 m
625.9248 476.165 L
623.6748 486.4365 L
910.5742 549.2573 L
912.8125 538.9912 L
912.8125 538.9912 L
f
/BBAccumRotation (0.215565) XT
917.9551 515.5249 m
631.0625 452.7051 L
628.8076 462.9717 L
915.7051 525.7876 L
917.9551 515.5249 L
917.9551 515.5249 L
f
/BBAccumRotation (0.215565) XT
923.0908 492.0498 m
636.1885 429.2412 L
633.9453 439.502 L
920.8428 502.3271 L
923.0908 492.0498 L
923.0908 492.0498 L
f
/BBAccumRotation (0.215565) XT
928.2305 468.6016 m
641.333 405.7793 L
639.082 416.043 L
925.9805 478.8672 L
928.2305 468.6016 L
928.2305 468.6016 L
f
/BBAccumRotation (0.215565) XT
933.3643 445.1406 m
646.4766 382.3193 L
644.2197 392.5811 L
931.1123 455.3984 L
933.3643 445.1406 L
933.3643 445.1406 L
f
/BBAccumRotation (0.215565) XT
938.501 421.6699 m
651.6025 358.8555 L
649.3643 369.1211 L
936.2559 431.9414 L
938.501 421.6699 L
938.501 421.6699 L
f
/BBAccumRotation (0.215565) XT
U
u
946.6992 384.2451 m
659.8027 321.4258 L
657.5518 331.6924 L
944.4473 394.5186 L
946.6992 384.2451 L
946.6992 384.2451 L
f
/BBAccumRotation (0.215565) XT
951.8389 360.7852 m
664.9404 297.9678 L
662.6963 308.2324 L
949.5957 371.0576 L
951.8389 360.7852 L
951.8389 360.7852 L
f
/BBAccumRotation (0.215565) XT
956.9766 337.3232 m
670.084 274.5049 L
667.834 284.7686 L
954.7207 347.5879 L
956.9766 337.3232 L
956.9766 337.3232 L
f
/BBAccumRotation (0.215565) XT
962.1084 313.8594 m
675.2109 251.0352 L
672.9668 261.3018 L
959.8682 324.1172 L
962.1084 313.8594 L
962.1084 313.8594 L
f
/BBAccumRotation (0.215565) XT
0.671046 0.600854 0.588952 0.443152 0.262745 0.262745 0.262745 Xa
967.252 290.4004 m
680.3535 227.5752 L
678.1025 237.8418 L
965.0068 300.6563 L
967.252 290.4004 L
967.252 290.4004 L
f
/BBAccumRotation (0.215565) XT
972.3906 266.9404 m
685.4883 204.125 L
683.2422 214.3818 L
970.1338 277.1973 L
972.3906 266.9404 L
972.3906 266.9404 L
f
/BBAccumRotation (0.215565) XT
977.5273 243.4785 m
690.6289 180.6484 L
688.3789 190.9102 L
975.2725 253.7314 L
977.5273 243.4785 L
977.5273 243.4785 L
f
/BBAccumRotation (0.215565) XT
U
U
u
u
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
1202.998 724.3003 m
916.1045 661.478 L
913.8594 671.7339 L
1200.7539 734.5566 L
1202.998 724.3003 L
1202.998 724.3003 L
f
/BBAccumRotation (0.215565) XT
1208.1348 700.8301 m
921.2432 638.0151 L
918.9971 648.2734 L
1205.8916 711.0972 L
1208.1348 700.8301 L
1208.1348 700.8301 L
f
/BBAccumRotation (0.215565) XT
1213.2725 677.3701 m
926.376 614.5498 L
924.1348 624.8145 L
1211.0195 687.6377 L
1213.2725 677.3701 L
1213.2725 677.3701 L
f
/BBAccumRotation (0.215565) XT
1218.4053 653.9072 m
931.5186 591.0898 L
929.2744 601.3535 L
1216.166 664.1714 L
1218.4053 653.9072 L
1218.4053 653.9072 L
f
/BBAccumRotation (0.215565) XT
1223.5488 630.4468 m
936.6543 567.6289 L
934.4053 577.8945 L
1221.3037 640.7119 L
1223.5488 630.4468 L
1223.5488 630.4468 L
f
/BBAccumRotation (0.215565) XT
1228.6855 606.9824 m
941.792 544.1587 L
939.542 554.4268 L
1226.4414 617.251 L
1228.6855 606.9824 L
1228.6855 606.9824 L
f
/BBAccumRotation (0.215565) XT
1233.8242 583.5215 m
946.9287 520.6934 L
944.6797 530.9609 L
1231.5732 593.791 L
1233.8242 583.5215 L
1233.8242 583.5215 L
f
/BBAccumRotation (0.215565) XT
U
u
1272.7246 405.8672 m
985.8232 343.0518 L
983.5752 353.3096 L
1270.4717 416.1455 L
1272.7246 405.8672 L
1272.7246 405.8672 L
f
/BBAccumRotation (0.215565) XT
1277.8633 382.4131 m
990.9609 319.5928 L
988.7148 329.8496 L
1275.6133 392.6826 L
1277.8633 382.4131 L
1277.8633 382.4131 L
f
/BBAccumRotation (0.215565) XT
0.671046 0.600854 0.588952 0.443152 0.262745 0.262745 0.262745 Xa
1282.9902 358.9463 m
996.1035 296.1328 L
993.8525 306.3877 L
1280.7461 369.2158 L
1282.9902 358.9463 L
1282.9902 358.9463 L
f
/BBAccumRotation (0.215565) XT
1288.1289 335.4873 m
1001.2422 272.6738 L
998.9902 282.9287 L
1285.8877 345.748 L
1288.1289 335.4873 L
1288.1289 335.4873 L
f
/BBAccumRotation (0.215565) XT
1293.2715 312.0273 m
1006.3838 249.2002 L
1004.1289 259.4697 L
1291.0254 322.2881 L
1293.2715 312.0273 L
1293.2715 312.0273 L
f
/BBAccumRotation (0.215565) XT
U
u
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
1242.1367 545.5293 m
955.2461 482.7148 L
952.999 492.9727 L
1239.8906 555.7979 L
1242.1367 545.5293 L
1242.1367 545.5293 L
f
/BBAccumRotation (0.215565) XT
1247.2764 522.0708 m
960.3838 459.2559 L
958.1318 469.5137 L
1245.0313 532.333 L
1247.2764 522.0708 L
1247.2764 522.0708 L
f
/BBAccumRotation (0.215565) XT
1252.4199 498.6113 m
965.5205 435.79 L
963.2764 446.0469 L
1250.1689 508.8784 L
1252.4199 498.6113 L
1252.4199 498.6113 L
f
/BBAccumRotation (0.215565) XT
1257.5518 475.1504 m
970.6582 412.3262 L
968.4141 422.5918 L
1255.3018 485.4121 L
1257.5518 475.1504 L
1257.5518 475.1504 L
f
/BBAccumRotation (0.215565) XT
1262.6973 451.6807 m
975.7949 388.8555 L
973.5518 399.125 L
1260.4443 461.9482 L
1262.6973 451.6807 L
1262.6973 451.6807 L
f
/BBAccumRotation (0.215565) XT
1267.8281 428.2227 m
980.9316 365.3945 L
978.6826 375.6641 L
1265.582 438.4873 L
1267.8281 428.2227 L
1267.8281 428.2227 L
f
/BBAccumRotation (0.215565) XT
1272.9648 404.7598 m
986.0703 341.9346 L
983.8213 352.207 L
1270.7188 415.0293 L
1272.9648 404.7598 L
1272.9648 404.7598 L
f
/BBAccumRotation (0.215565) XT
U
U
u
0.356847 0.284123 0.362036 0.002564 0.662745 0.658824 0.619608 Xa
1182.1855 763.4961 m
606.7949 637.5103 L
601.5605 661.4375 L
1176.9414 787.4258 L
1182.1855 763.4961 L
1182.1855 763.4961 L
f
/BBAccumRotation (0.215565) XT
U
U
u
u
0.458625 0.379278 0.442481 0.039704 0.560784 0.556863 0.52549 Xa
646.6045 244.1865 m
359.7114 181.3701 L
357.4644 191.6279 L
644.3584 254.4521 L
646.6045 244.1865 L
646.6045 244.1865 L
f
/BBAccumRotation (0.215565) XT
0.671046 0.600854 0.588952 0.443152 0.262745 0.262745 0.262745 Xa
651.7461 220.7246 m
364.8496 157.9111 L
362.6035 168.167 L
649.4961 230.9941 L
651.7461 220.7246 L
651.7461 220.7246 L
f
/BBAccumRotation (0.215565) XT
656.8838 197.2617 m
369.9863 134.4473 L
367.7412 144.707 L
654.6348 207.5313 L
656.8838 197.2617 L
656.8838 197.2617 L
f
/BBAccumRotation (0.215565) XT
662.0176 173.7998 m
375.124 110.9805 L
372.8784 121.2422 L
659.7715 184.0674 L
662.0176 173.7998 L
662.0176 173.7998 L
f
/BBAccumRotation (0.215565) XT
U
u
639.2207 277.9131 m
352.3276 215.1045 L
270.4712 588.9355 L
557.3584 651.7617 L
639.2207 277.9131 L
639.2207 277.9131 L
Bb
1 (Unnamed gradient 6) 186.9648 597.4355 -32.5295 498.5341 0.976838 -0.213862 0.213862 0.976838 -1506.3153 1921.5962 Bg
467.918 -171.9787 -167.1698 -454.8341 332.9258 736.3809 Xm
7404.2568 -2721.3621 -167.1698 -454.8341 -7071.3311 3457.7427 Bc
467.918 -171.9787 -167.1698 -454.8341 332.9258 736.3809 Bm
7404.2568 -2721.3621 -167.1698 -454.8341 800.8438 564.4023 Bc
f
0 BB
/BBAccumRotation (0.215565) XT
639.2207 277.9131 m
352.3276 215.1045 L
299.4409 456.6191 L
320.3125 442.1455 368.1963 459.6162 v
416.0864 477.084 424.6313 549.3999 479.646 574.4468 c
534.6523 599.5122 576.8828 562.583 Y
639.2207 277.9131 L
639.2207 277.9131 L
Bb
1 (Unnamed gradient 5) 195.7842 656.0952 -51.6324 503.5152 0.976838 -0.213862 0.213862 0.976838 -1506.3153 1921.5962 Bg
389.7235 -318.7955 -264.0137 -322.7534 377.9995 730.2388 Xm
6019.7061 -4924.145 -264.0137 -322.7534 -5641.707 5654.3838 Bc
389.7235 -318.7955 -264.0137 -322.7534 377.9995 730.2388 Bm
6019.7061 -4924.145 -264.0137 -322.7534 767.7227 411.4434 Bc
f
0 BB
/BBAccumRotation (0.215565) XT
639.2207 277.9131 m
352.3276 215.1045 L
341.0005 266.8164 327.1582 330.0459 V
401.3755 392.7295 550.5762 290.5195 614.0508 392.8711 C
619.2607 366.8262 639.2207 277.9131 Y
639.2207 277.9131 L
Bb
1 (Unnamed gradient 4) 162.3223 527.5942 -40.7676 377.4401 0.976838 -0.213862 0.213862 0.976838 -1506.3153 1921.5962 Bg
331.9484 -179.6224 -135.5867 -250.5689 307.9985 560.7544 Xm
6798.0391 -3678.5242 -135.5867 -250.5689 -6490.0405 4239.2788 Bc
331.9484 -179.6224 -135.5867 -250.5689 307.9985 560.7544 Bm
6798.0391 -3678.5242 -135.5867 -250.5689 639.9473 381.1318 Bc
f
0 BB
/BBAccumRotation (0.215565) XT
U
U
U
u
0.356847 0.284123 0.362036 0.002564 0.662745 0.658824 0.619608 Xa
1195.3838 810.1606 m
260.043 605.3564 L
258.8188 610.9375 L
1194.1631 815.7495 L
1195.3838 810.1606 L
1195.3838 810.1606 L
f
/BBAccumRotation (0.215565) XT
U
u
*u
0.676173 0.630579 0.641718 0.606317 0.2 0.192157 0.184314 Xa
455.4966 786.1021 m
534.4404 736.8779 L
524.8115 780.8867 L
523.458 787.0186 521.4199 790.9214 518.6816 792.5889 c
514.9219 794.8271 509.4043 795.0864 502.1035 793.3882 c
501.4941 796.1777 L
545.0547 805.7119 L
545.6621 802.9194 L
540.208 801.1465 536.6172 799.6104 534.9014 798.3135 c
533.1777 797.0142 532.0029 795.2559 531.3682 793.0313 c
530.7354 790.812 530.9443 787.2832 532.0098 782.4595 c
550.6563 697.248 L
547.3506 696.5229 L
439.5352 762.2124 L
453.7778 697.1509 L
455.0698 691.2612 457.6753 687.6641 461.5977 686.3706 c
465.5059 685.0635 469.7109 684.9033 474.1807 685.8848 c
477.2954 686.5615 L
477.9043 683.772 L
431.1367 673.5264 L
430.5278 676.3247 L
437.7749 677.9639 442.5776 680.2227 444.9321 683.1172 c
447.29 686.0059 447.8735 690.1606 446.6826 695.5996 c
430.8682 767.8208 L
427.4575 769.9189 L
424.0757 772.0366 421.2153 773.2715 418.8833 773.6626 c
416.5645 774.0513 413.3794 773.8594 409.3384 773.0723 c
408.7178 775.8696 l
455.4966 786.1021 L
f
/BBAccumRotation (0.215565) XT
*U
/BBAccumRotation (0.215565) XT
*u
605.2627 812.7319 m
614.373 771.0693 L
617.0039 771.6426 L
625.376 773.4775 630.9805 776.8481 633.8564 781.7485 c
636.7129 786.6455 637.7979 793.1777 637.0996 801.3477 c
640.7783 802.1646 L
652.5215 748.585 L
648.835 747.7749 L
646.7744 753.4385 644.0908 757.8608 640.7764 761.0322 c
637.4648 764.2124 634.0176 766.082 630.4326 766.6416 c
626.8477 767.1929 621.9111 766.7896 615.6172 765.4141 c
621.9395 736.5859 L
623.166 730.9399 624.2266 727.5698 625.124 726.4438 c
626.0098 725.3203 627.3955 724.543 629.251 724.1055 c
631.1084 723.6699 633.917 723.8701 637.6865 724.6895 c
645.5635 726.4077 L
657.877 729.1113 667.2627 733.4863 673.7168 739.5352 c
680.1699 745.5879 684.0176 753.501 685.2744 763.2676 c
688.874 764.0518 L
690.0674 730.2275 L
576.1133 705.2769 L
575.5039 708.0693 L
579.8691 709.0234 L
583.6992 709.8628 586.6602 711.0654 588.7607 712.627 c
590.3027 713.7026 591.333 715.1992 591.8574 717.1021 c
592.3047 718.4678 591.9678 721.7188 590.8447 726.8447 c
576.1094 794.1729 L
575.0986 798.7974 574.3086 801.6064 573.748 802.5923 c
572.7168 804.2036 571.2227 805.3066 569.2686 805.8804 c
566.5049 806.7466 562.9668 806.7139 558.6885 805.7803 c
554.3076 804.8193 L
553.6953 807.6162 L
664.0635 831.7749 L
670.6904 801.5117 L
666.999 800.7012 L
663.4922 807.6865 659.6914 812.4111 655.583 814.8955 c
651.4717 817.3691 646.1396 818.6768 639.5859 818.8184 c
635.7637 818.9341 628.8555 817.8965 618.874 815.709 c
605.2627 812.7319 L
f
/BBAccumRotation (0.215565) XT
*U
/BBAccumRotation (0.215565) XT
*u
879.918 879.0444 m
880.5273 876.2476 L
878.1025 875.5615 876.1338 874.5742 874.6484 873.2979 c
873.1621 872.0283 871.9766 870.3154 871.0938 868.1782 c
870.835 867.4849 869.6484 863.1328 867.5205 855.1309 c
844.6855 761.6309 L
840.8965 760.7969 L
793.7852 819.6104 L
772.2539 745.7661 L
768.6504 744.9834 L
707 819.0337 L
700.749 826.4727 696.5566 830.8789 694.4219 832.2578 c
692.2832 833.6343 689.1123 834.0229 684.8936 833.4131 c
684.2842 836.2017 L
741.459 848.7222 L
742.0674 845.9292 L
737.4932 844.8198 734.5371 843.6099 733.2373 842.2944 c
731.9248 840.9819 731.4355 839.5933 731.7559 838.1348 c
732.168 836.2178 734.6406 832.5205 739.1807 827.0298 c
775.916 783.0356 L
788.1338 826.354 L
780.3066 836.0356 L
776.0244 841.3145 772.8594 844.7734 770.7979 846.4072 c
768.7393 848.0396 766.5713 849.0586 764.2744 849.4521 c
761.9746 849.8408 758.7939 849.585 754.7041 848.7012 c
754.0918 851.4932 L
817.9785 865.4761 L
818.583 862.6821 L
814.1338 861.6514 810.9902 860.6831 809.1494 859.7471 c
807.8623 859.0972 806.918 858.271 806.3232 857.2695 c
805.7266 856.2715 805.5439 855.2446 805.7842 854.186 c
806.0332 853.0259 808.2744 849.8066 812.4883 844.5049 c
847.1074 801.3047 L
858.9873 849.8618 L
860.2705 854.8901 860.9912 858.2852 861.1484 860.0625 c
861.293 861.8428 861.2295 863.4219 860.915 864.8403 c
860.4629 866.8989 859.2041 868.3193 857.1279 869.1118 c
855.0625 869.8901 851.4473 869.7725 846.2969 868.7559 c
845.6885 871.543 l
879.918 879.0444 L
f
/BBAccumRotation (0.215565) XT
*U
/BBAccumRotation (0.215565) XT
*u
974.6885 902.2495 m
983.2354 868.3662 L
979.252 867.4941 L
975.4902 875.6387 969.3613 881.5 960.8652 885.0967 c
952.3672 888.6938 943.8477 889.563 935.2871 887.689 c
928.6777 886.2354 923.7422 883.7158 920.4854 880.1338 c
917.2275 876.5459 915.9932 872.9692 916.7793 869.3999 c
917.2754 867.1343 918.3877 865.2705 920.1318 863.8081 c
922.5313 861.8535 926.0625 860.167 930.7217 858.7681 c
934.1279 857.7847 941.8037 856.3711 953.749 854.5562 c
970.4658 852.0488 982.0898 848.772 988.6162 844.7061 c
995.0781 840.6353 999.0439 835.2402 1000.5283 828.4951 c
1002.4014 819.9443 999.708 811.6396 992.4717 803.6045 c
985.2354 795.5596 974.9912 790.0913 961.7764 787.1914 c
957.626 786.2886 953.6348 785.7539 949.8008 785.5977 c
945.9619 785.4351 941.0498 785.6577 935.083 786.2539 c
931.748 786.5757 929.0791 786.5195 927.0762 786.0776 c
925.3867 785.7061 923.7178 784.8125 922.0498 783.3887 c
920.3906 781.9766 919.2031 780.1152 918.4834 777.79 c
914.8975 777.0078 L
906.4336 815.6475 L
910.0313 816.4341 L
915.2666 806.1855 922.5654 799.1021 931.9609 795.1724 c
941.3408 791.2441 950.7354 790.312 960.1309 792.3633 c
967.3906 793.9624 972.8438 796.7573 976.4814 800.7734 c
980.1172 804.7788 981.4941 808.8306 980.6016 812.9023 c
980.0742 815.3188 978.7314 817.4785 976.5879 819.3774 c
974.4326 821.2803 971.4502 822.8818 967.6426 824.1816 c
963.8232 825.4858 957.2783 826.8257 948.002 828.229 c
935.0049 830.1816 925.541 832.1982 919.5762 834.2549 c
913.6133 836.3296 908.8008 839.042 905.1133 842.4023 c
901.4141 845.7637 899.0557 849.832 898.001 854.6099 c
896.2197 862.7529 898.5605 870.5483 905.0156 877.9761 c
911.4697 885.3979 920.5635 890.4033 932.3027 892.9634 c
936.5771 893.897 940.8115 894.4038 945.0059 894.4829 c
948.1865 894.5444 952.1396 894.2358 956.874 893.5605 c
961.6104 892.8867 964.8467 892.7412 966.5986 893.1172 c
968.2871 893.4849 969.5264 894.1797 970.3301 895.1968 c
971.125 896.2202 971.6035 898.3491 971.7744 901.6064 c
974.6885 902.2495 L
f
/BBAccumRotation (0.215565) XT
*U
/BBAccumRotation (0.215565) XT
U
u
0.606806 0.533288 0.574945 0.286625 0.360784 0.356863 0.337255 Xa
445.0981 679.415 m
445.8589 680.0317 446.5176 680.6855 447.0767 681.3735 c
449.98 684.9297 450.7573 689.9165 449.3828 696.1904 C
433.3164 769.5601 L
428.9053 772.2734 L
426.1797 773.98 423.7529 775.1626 421.5605 775.8496 C
454.9888 783.1611 L
538.543 731.063 L
527.5107 781.4766 L
525.9736 788.4517 523.5547 792.8574 520.1211 794.9492 c
518.9463 795.6479 517.6436 796.189 516.2178 796.5703 C
532.8418 800.2085 L
530.8516 798.582 529.4619 796.4233 528.71 793.7891 c
527.9395 791.084 528.1348 787.1831 529.3105 781.8633 C
547.2656 699.8115 L
435.4521 767.936 L
451.0776 696.5601 L
452.5889 689.6714 455.8374 685.3594 460.7314 683.7451 c
461.3145 683.5503 461.9058 683.3789 462.5044 683.228 C
445.0981 679.415 L
f
591.7607 711.5327 m
593.0566 712.8174 593.9922 714.4438 594.5215 716.3682 c
594.9316 717.6113 595.1709 720.0117 593.5449 727.436 C
578.8096 794.7637 L
577.3877 801.2725 576.6416 803.0972 576.1494 803.9604 C
576.0752 804.0825 L
574.7314 806.1821 572.8105 807.646 570.3633 808.4351 C
661.9541 828.4834 L
666.6641 806.9785 L
663.6836 811.7661 660.501 815.1523 657.0127 817.2612 c
652.4951 819.978 646.6533 821.4307 639.6455 821.5815 c
639.4502 821.5879 639.2217 821.5903 638.9844 821.5903 c
634.8203 821.5903 628.0498 820.5498 618.2832 818.4082 C
601.9727 814.8418 L
612.2637 767.7813 L
617.5918 768.9419 L
626.6953 770.9375 632.9688 774.7749 636.2402 780.3501 c
638.2988 783.8784 639.5303 788.1621 639.9258 793.1436 C
648.0518 756.0654 L
646.4756 758.7915 644.6826 761.1191 642.6885 763.0288 c
638.9766 766.5918 634.9961 768.7275 630.8584 769.3721 c
629.6855 769.5532 628.3877 769.644 626.998 769.644 c
623.6982 769.644 619.6709 769.1294 615.0264 768.1143 C
612.3252 767.5229 L
619.2412 735.9932 L
620.9756 727.9985 622.0957 725.8086 622.9629 724.7207 c
624.2266 723.1172 626.1328 722.0005 628.6162 721.4146 c
629.4736 721.2139 630.4189 721.1162 631.5078 721.1162 c
633.3633 721.1162 635.5752 721.4014 638.2734 721.9873 C
646.1533 723.707 L
658.9092 726.5083 668.8164 731.1548 675.6055 737.5171 c
680.7266 742.3198 684.3457 748.2642 686.4189 755.2534 C
687.2236 732.4346 L
591.7607 711.5327 L
f
709.124 820.8027 m
700.4736 831.0942 697.4463 833.5942 695.9199 834.5796 c
695.3535 834.9443 694.7383 835.2568 694.0742 835.5166 C
730.6191 843.519 L
728.7617 841.2656 728.7227 839.0557 729.0566 837.54 c
729.4053 835.9111 730.6338 833.0298 737.0508 825.269 C
777.1553 777.2402 L
791.1836 826.98 L
782.457 837.7734 L
777.9863 843.2827 774.7354 846.8145 772.5146 848.5742 c
770.833 849.9067 769.0596 850.8989 767.2188 851.5371 C
804.6982 859.7397 L
804.417 859.4033 804.165 859.0503 803.9473 858.6797 c
802.9932 857.085 802.6943 855.3188 803.0869 853.5776 c
803.3262 852.4707 804.1055 850.606 810.3252 842.7852 C
848.459 795.1978 L
861.6729 849.2051 L
863.002 854.4136 863.7324 857.894 863.9023 859.8203 c
864.0742 861.9478 863.9805 863.7788 863.6143 865.4365 c
862.9932 868.2646 861.2383 870.3628 858.5264 871.5264 C
871.8447 874.4448 L
870.499 873.0371 869.3887 871.2891 868.54 869.2349 c
868.2559 868.4834 867.5576 866.0259 864.8496 855.8423 C
842.4082 763.959 L
841.9814 763.8652 L
792.6191 825.4863 L
770.0615 748.1182 L
769.7021 748.0405 L
709.124 820.8027 L
f
*u
910.4736 810.1191 m
915.7207 801.9766 922.5703 796.104 930.8955 792.6226 c
937.3584 789.9146 943.9395 788.5415 950.4492 788.5415 c
951.4736 788.5415 952.501 788.5757 953.5332 788.6436 C
952.2275 788.5063 950.9443 788.4106 949.6885 788.3599 c
948.9063 788.3262 948.084 788.3105 947.2139 788.3105 c
943.959 788.3105 939.9707 788.5435 935.3555 789.0039 c
933.8516 789.1499 932.4551 789.2227 931.2021 789.2227 c
929.3857 789.2227 927.8418 789.0762 926.4805 788.7769 c
924.3594 788.3105 922.2646 787.2051 920.2559 785.4912 c
918.8398 784.2881 917.6943 782.813 916.833 781.0894 C
910.4736 810.1191 L
f
965.541 790.9771 m
971.0371 792.7949 975.3936 795.4541 978.5313 798.9175 c
982.7881 803.6099 984.3945 808.5151 983.2998 813.4951 c
982.6514 816.479 981.0078 819.1558 978.418 821.4473 c
975.9951 823.5864 972.6719 825.3862 968.5342 826.7974 c
964.5732 828.1504 957.9922 829.5127 948.4141 830.9619 c
935.7061 832.8711 926.3076 834.8584 920.4775 836.8682 c
914.9121 838.8057 910.3652 841.3555 906.9746 844.4458 c
903.6934 847.4272 901.6416 850.9468 900.7002 855.2075 c
899.1025 862.5103 901.1963 869.3672 907.1035 876.1626 c
913.1367 883.1025 921.8145 887.8472 932.8936 890.2637 c
936.9707 891.1548 941.0664 891.644 945.0586 891.7202 c
945.3057 891.7241 945.5576 891.7266 945.8135 891.7266 c
948.6934 891.7266 952.2832 891.4233 956.4834 890.8237 c
959.6709 890.3711 962.1699 890.1499 964.1309 890.1499 C
964.1309 890.1499 L
965.3525 890.1499 966.3496 890.2368 967.1787 890.4146 c
969.501 890.9199 971.2881 891.9521 972.499 893.4834 c
972.917 894.0225 973.2656 894.6709 973.5518 895.4541 C
979.084 873.522 L
975.0146 879.8032 969.2686 884.541 961.9424 887.6426 c
956.0313 890.1445 950.0127 891.4141 944.0547 891.4141 c
940.9512 891.4141 937.8018 891.0693 934.6953 890.3887 c
927.5439 888.8159 922.0742 885.9912 918.4404 881.9937 c
914.5586 877.7188 913.0928 873.2822 914.0791 868.8047 c
914.7061 865.9404 916.1445 863.5449 918.3574 861.6904 c
921.0703 859.4785 924.9531 857.6138 929.9277 856.1206 c
933.5293 855.0801 941.3955 853.6377 953.333 851.8232 c
969.6182 849.3809 980.9941 846.1978 987.1543 842.3608 c
993.0039 838.6753 996.5 833.9429 997.8281 827.9014 c
999.5146 820.2051 997.0908 812.8628 990.418 805.4546 c
984.4189 798.7866 976.0625 793.9272 965.541 790.9771 C
965.541 790.9771 L
f
*U
U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
