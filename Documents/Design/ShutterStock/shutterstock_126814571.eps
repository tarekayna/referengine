%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (eminyo) ()%%Title: (electronic_devices_icons.eps)%%CreationDate: 2/1/13 8:18 PM%%Canvassize: 16383%%BoundingBox: 62 207 4955 4793%%HiResBoundingBox: 62.333 207.0186 4954.9336 4792.981%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.047761 0.034302 0.034302 0.000031 (R=239 G=239 B=239)%%+ 0.710841 0.650507 0.640253 0.693324 (R=38 G=38 B=38)%%+ 0.75021 0.679683 0.670222 0.90164 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 2500.5 2499.5 2500.5 2499.5%AI3_TileBox: 2194 2104 2806 2896%AI3_DocumentPreview: Header%AI5_ArtSize: 5000 5000%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -3341.6133 6873.4736 0.0833 1172 617 18 0 0 65 149 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 120 8%%BeginData: 26616 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD29FFA827F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%F87DFFA8A8FD207DA8FD06FF7DF827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F82727FF27F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8277DFD05FF7DF8F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F852FFF827F827F827F827F827F827F827F8%27F8522727F827F827F827F827F827F827F827F87DFD05FF7DF827277D52%7D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D%7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D52%7D7D7D527D7D7D527D7D7D52FD047D52F8F827FF27F827F8F8F827F8F8F8%27F8F8F827F8F82727F8F8F827F8F8F827F8F8F827F827F8277DFD05FF7D%27F87DFD4EFFA827F852FFF827F827527D527D527D527D527D527D527D52%7D527D527D527D527D527D5252F827F87DFD05FF7DF8F852FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F82727FD1BFF7D27F8F87DFD%05FF7DF8F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F852FFF8%27F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%7DF8F827FFFD0427FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFF7D27F8F87DFD05FF7DF8F87DFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFF7DF82727FF27F82727FFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F8F87DFD05FF7DF8F852FD%04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F852FFF827F827A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DF827F87DFD05FF%7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F827%27FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F827%7DFD05FF7D27F852FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F852FF%F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8F8F827FF27F82727FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFF7D27F8F87DFD05FF7DF8F852FFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFFF7DF8F827FFFD0427FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8F87DFD05FF7DF8F87D%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F852FFF827F827A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD%05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF82727FF27%F82727FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%7D27F8F87DFD05FF7DF8F852FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D%27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA87DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8F8F827FF27F82727FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FF7D27F8277DFD05FF7D27F852FD04FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F82727FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8F87DFD05FF7DF8%F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F852FFF827F827A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F8%7DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF8F827%FFFD0427FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FF7D27F8F87DFD05FF7DF8F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFF7DF82727FF27F82727FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F8F87DFD05FF7DF8F852FD04FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DF827F87DFD05FF7DF8F852%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F82727FD05FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F8277DFD05FF%7D27F852FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F852FFF827F827%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827%F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F8%27FF27F82727FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFF7D27F8F87DFD05FF7DF8F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFF7DF8F827FFFD0427FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8F87DFD05FF7DF8F87DFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F852FFF827F827A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8%F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF82727FF27F82727FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F8F8%7DFD05FF7DF8F852FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F852FF%F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A87DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8F8F827FF27F82727FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FF7D27F8277DFD05FF7D27F852FD04FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FF7D27F852FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F82727FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8F87DFD05FF7DF8F852FFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F852FFF827F827A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF827F87DFD05FF%7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DF8F827FFFD0427%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8%F87DFD05FF7DF8F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8%52FFF827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFF7DF827F87DFD05FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFF7DF82727FF27F82727FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FF7D27F8F87DFD05FF7DF8F852FD04FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FF7D27F852FFF827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F87DFD05FF7DF8F852FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF27F827F827F827F827F827%F827F852FD057D52F827F827F827F827F827F827F8277DFD05FF7D27F852%FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F852FFF8F8F827F8F8F827%F8F8F827F8F8F8522727275227F8F827F8F8F827F8F8F827F8F8F87DFD05%FF7DF8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F827FF7D27%2727522752275227522752FD0727522752275227522752275227522752A8%FD05FF7DF8F87DFD4EFF7D27F852FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD08FF7DF8F827A8A8A87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA8A87DF8F827FD2AFF7DF8F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F827F852FD2AFF7DF827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F82727FD2AFF7DF8F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F852FD2AFF7DF827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F8F827FD2AFF7D272727F8272727F8272727F8272727%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727%F8272727F8272727F852FFFFFFA8FFA8FFA8FFA8FFA8FD0FFFA8FFA8FFA8%FD0AFF7DF827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F8F827FF%7DFD0A27F827A8FD09FF7D52FD07275252A8FD06FF7DF8F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F852FFF827F8F8F8272727F827F8F8%F852FD08FF7DF8F827F8272727FD05F8A8FD05FF7DF827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F82727FF27F827F827F827F827F827F827%52FD08FF7DF827F827F8522727F827F8F87DFD05FF7DF8F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8272727F8%272727F8272727F8272727F8272727F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827FFF85227522752275227522752%F852FD08FF52FD0B27F87DFD05FFA8FD21F827F827F827F827F827F827F8%27F827F827F827FD20F852FF27A8FFFFFFA8FFFFFFA8FFFF7D52FD08FF7D%A8FFA8FFA8FFA8FFA8FFFF7D7DFD06FFA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87D52F827F827F827F827F827F8%27F827F827F827F87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87D7D7DFFFFF8A8A8FFA8FFA8FFA8FFA8FF5252FD08FF52%A8A8FFA8FFA8FFA8FFA8FF7D7DFD26FF27F8F827F827F827F827F827F827%F827F827F827FD22FF27A8FFFFFFA8FFFFFFA8FFFF7D52FD08FF7DA8FFA8%FFFFFFA8FD04FFA87DFD26FF52F827F8272727F8272727F8272727F8FD04%27FD22FFF8A8A8FFA8FFA8FFA8FFA8FF5252FD08FF52A8A8FFA8FFA8FFA8%FFA8FF7D7DFD26FF27F8F827F827F827F827F827F827F827F827F827A8FD%21FF27A8FFA8FFFFFFA8FD04FF7D52FD08FF7DA8FFFFFFA8FFFFFFA8FFFF%7D7DFD26FF52F827F827F827F827F827F827F827F827F82727FD22FFF8FF%A8FFA8FFA8FFA8FFA8FF5252FD08FF52A8A8FFA8FFA8FFA8FFA8FF7D7DFD%26FF27F8F827F827F827F827F827F827F827F827F827A8FD21FF27A8FFA8%FFFFFFA8FD04FF7D52FD08FF7DA8FFFFFFA8FFFFFFA8FFFF7D7DFD26FF52%F8272727F8272727F8272727F8272727F82727FD22FFF8FFA8FFA8FFA8FF%A8FFA8FF5252FD08FF52A8A8FFA8FFA8FFA8FFA8FF7D7DFD26FF27F8F827%F827F827F827F827F827F827F827F827FD22FF27A8FFFFFFA8FFFFFFA8FF%FF7D52FD08FF7DA8FFA8FFFFFFA8FD04FF7D7DFD26FF52F827F827F827F8%27F827F827F827F827F82727FD22FFF8A8A8FFA8FFA8FFA8FFA8FF5252FD%08FF52A8A8FFA8FFA8FFA8FFA8FF7D7DFD26FF2727F827F827F827F827F8%27F827F827F827F8F87DFD21FF27A8FFFFFFA8FFFFFFA8FFFF7D52FD08FF%7DA8FFA8FFFFFFA8FD04FFA87DFD25FF7D27F827F8272727F8272727F827%2727F8272727F852FD21FFF8A8A8FFA8FFA8FFA8FFA8FF5252FD08FF52A8%A8FFA8FFA8FFA8FFA8FF7D7DFD24FF7DF8F827F827F827F827F827F827F8%27F827F827F827F87DFD20FF27A8FFA8FFFFFFA8FD04FF7D52FD08FF7DA8%FFFFFFA8FFFFFFA8FFFF7D7DFD23FF7D27F827F827F827F827F827F827F8%27F827F827F827F827F852FD1FFFF8FFA8FFA8FFA8FFA8FFA8FF5252FD08%FF52A8A8FFA8FFA8FFA8FFA8FF7D7DFD22FFA827F827F827F827F827F827%F827F827F827F827F827F827F827F87DFD1EFF27A8FFA8FFFFFFA8FD04FF%7D52FD08FF7DA8FFFFFFA8FFFFFFA8FFFF7D7DFD23FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FFF8FFA8FFA8FFA8FFA8FF%A8FF5252FD08FF52A8A8FFA8FFA8FFA8FFA8FF7D7DFD5CFF27A8FFFFFFA8%FFFFFFA8FFFF7D52FD08FF7DA8FD0AFFA87DFD5CFFF8A8A8FFA8FFA8FFA8%FFA8FF5252FD08FF527D7D7D527D527D527D7D7D277DFD5CFF2727525252%275252522752522752FD08FF7DF827F827F8272727F827F8277DFD17FFFD%3AA8FD0BFFFD04F8277D527D52F8F827F852FD08FF52F8F827F8F87D7DF8%27F8F8F8A8FD16FF2727F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827A8FD09FF27F8F8F827F827F827FD04F87DFD09FF5227%F827F827F827F827F87DFD16FFA827F827F8F8F827F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F8%27F8F8F827F8F8F827F8F8F827F87DFD09FFA87D527D527D527D527D527D%7DFD0BFFA8A87D7D52FD047DFD18FFA8F8F827FD3752F8F852FD42FFA827%F8A8FD36FFA827F87DFD42FFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFA8F8F852FD42FFA827F87DFD04FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA827F87DFD42FFA8F8F87DFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD0AFFFD2B7DFD%0DFFA827F87DFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%27F87DFD09FF27FD2BF827FD0CFFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD09FF27F827F827F827F827F827%F827F827F827F827F82727522727F827F827F827F827F827F827F827F827%F827F827A8FD0BFFA827F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA827F87DFD09FFF827F827FD11F82727FD12F827F827F8A8%FD0BFFA8F8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8F8F852FD09FFFD0427FD247DA82727F827A8FD0BFFA827F87DFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA827F87DFD09FFF827%F852FD25FF52F827F8FD0CFFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFA8F8F852FD09FF27F82727FFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF5227%F827A8FD0BFFA827F87DFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFA827F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F8A8FD0BFFA8%F8F87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F8%52FD09FF27F82752FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFF5227F827A8FD0BFFA827F87DFD04FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA827F87DFD09FFF827F852A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFF52F827F8A8FD0BFFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD09FF27F82727FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%52F8F827A8FD0BFFA827F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA827F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F8A8FD%0BFFA8F8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%A8F8F852FD09FFFD0427FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF5227F827A8FD0BFFA827F87DFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA827F87DFD09FF%F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA852F827F8FD0CFFA8F8F87DFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8F8F852FD09FF27F82727FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFF5227F827A8FD0BFFA827F87DFD04FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFA827F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827%F8A8FD0BFFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8A8F8F852FD09FF27F82752FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF5227F827A8FD0BFFA827F8%7DFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA827F87DFD09%FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFF52F827F8A8FD0BFFA8F8F87DFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD09FF27F82727FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FF52F8F827A8FD0BFFA827F87DFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA827F87DFD09FFF827F852A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%52F827F8A8FD0BFFA8F8F852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8A8F8F852FD09FFFD0427FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF5227F827A8FD0B%FFA827F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%27F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F8FD0CFFA8F8F87DFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8F8F852FD09FF27%F82727FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFF5227F827A8FD0BFFA827F87DFD04FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA827F87DFD09FFF827F852A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA852F827F8A8FD0BFFA8F8F87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A8F8F852FD09FF27F82752FD05FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF5227F827A8%FD0BFFA827F87DFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%A827F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF52F827F8A8FD0BFFA8F8F87D%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD09%FF27F82727FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FF52F8F827A8FD0BFFA827F87DFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA827F87DFD09FFF827F852A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA852F827F8A8FD0BFFA8F8F852FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A8F8F852FD09FFFD0427FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF52%27F827A8FD0BFFA827F87DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA827F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F8FD0CFF%A8F8F87DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8F8%F852FD09FF27F82727FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFF5227F827A8FD0BFFA827F87DFD36A87D%27F87DFD09FFF827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F8A8FD0BFFA8F827F827%F827F827F827F827F827F827F827F827F827F827F827FD09F827F827F827%F827F827F827F827F827F827F827F827F827F8F852FD09FF27F8FD042752%272727522727275227272752272727522727275227272752272727522727%2752FD0427F827A8FFFFA852FD077D5227F827F827F827F827F827F827F8%27F827F827F827F827F82727FD087D52F827F827F827F827F827F827F827%F827F827F827F827F827F852FD097DF827F827F8F8F827F8F8F827F8F8F8%27F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F827F827F8%A8FFFF27FD0AF827F827F827F827F827F827F827F827F827F827F827F827%F827FD087D27F8F827F827F827F827F827F827F827F827F827F827F827F8%27FD0AF827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827A8FFFF52F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%F8F827F8F8F8272727F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F87D27F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F8277DFFFFFF%A852F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F82727A8%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-1818.5 6818.4351 m-1604.8999 6818.4351 L-1604.8999 6810.6343 L-1818.5 6810.6343 L-1818.5 6818.4351 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-1818.5 6814.5352 m-1808.4856 6817.0269 -1801.6863 6818.375 -1789.7007 6818.4351 c-1776.7185 6818.5 -1711.6997 6818.4351 y-1646.6816 6818.5 -1633.6997 6818.4351 v-1621.7124 6818.375 -1614.9136 6817.0269 -1604.8999 6814.5352 C-1614.9136 6812.0435 -1621.7124 6810.6953 -1633.6997 6810.6343 c-1646.6816 6810.5688 -1711.6997 6810.6343 y-1776.7185 6810.5688 -1789.7007 6810.6343 v-1801.6863 6810.6953 -1808.4856 6812.0435 -1818.5 6814.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-5690.8833 10690.9551 m-5599.0479 10690.9551 L-5599.0479 10686.6758 L-5690.8833 10686.6758 L-5690.8833 10690.9551 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-5690.6631 10688.2754 m-5691 10688.3418 -5690.4814 10688.5313 -5690.8833 10688.3887 C-5690.8379 10688.2705 -5690.7725 10688.1816 -5690.6631 10688.2754 Cf-5600.1675 10688.4414 m-5601.2529 10689.2041 -5602.6816 10688.4336 -5603.8701 10688.9199 C-5604.0098 10688.9521 -5603.8354 10688.502 -5604.1484 10688.6025 C-5605.3008 10689.1953 -5607.1162 10688.8418 -5608.5195 10688.3848 C-5608.4346 10688.2666 L-5608.7021 10688.1816 -5609.0283 10688.5723 -5609.3115 10688.5176 C-5609.3135 10688.4395 -5609.2207 10688.4063 -5609.2861 10688.2979 C-5609.3574 10688.5352 -5609.7979 10688.4082 -5609.9189 10688.584 C-5610.0303 10688.4922 -5610.0195 10688.3047 -5610.1641 10688.2002 C-5610.3262 10688.4697 L-5610.7769 10689.1094 -5611.4209 10688.4258 -5612.0361 10688.7559 C-5612.0063 10688.6934 -5611.9453 10688.6445 -5611.9941 10688.584 C-5612.9814 10688.9727 -5614.2168 10688.8994 -5615.3208 10689.043 C-5615.2769 10688.9482 -5615.2363 10688.7754 -5615.3008 10688.668 C-5615.3555 10688.9512 -5615.6963 10689.0225 -5615.9922 10689.0781 C-5616.1255 10688.7871 -5616.4995 10689.3438 -5616.8467 10689.1826 C-5616.8169 10689.1191 L-5617.0732 10689.4238 -5617.1973 10688.9434 -5617.4053 10689.3086 C-5617.5684 10689.0801 L-5617.6807 10689.4902 -5617.9395 10688.8672 -5618.1514 10689.0762 C-5618.1445 10689.1602 L-5618.3442 10689.2598 -5618.4482 10689.0537 -5618.6338 10689.123 C-5618.6514 10689.0762 L-5619.0854 10689.1826 -5619.3379 10688.9551 -5619.3271 10689.2754 C-5619.4795 10689.0186 -5618.9063 10689.1582 -5619.1455 10688.7842 C-5620.5732 10689.1152 -5622.0459 10689.0498 -5623.4834 10689.0566 C-5623.6465 10688.9277 -5623.7505 10688.8887 -5623.7871 10688.7666 C-5623.9307 10688.832 -5624.3281 10688.8262 -5624.4585 10688.9902 C-5624.4102 10688.9834 -5624.5513 10688.8262 -5624.6274 10688.8105 C-5624.8887 10688.6895 -5624.9131 10689.1621 -5625.2002 10689.0186 C-5625.0859 10688.9336 -5625.0469 10688.8301 -5625.0854 10688.7109 C-5625.3301 10688.9609 -5625.6577 10688.9209 -5625.9473 10689.002 C-5625.9023 10688.9482 -5625.8325 10688.916 -5625.8433 10688.8154 C-5626.1602 10689.0986 -5626.4209 10688.7559 -5626.6982 10688.9346 C-5626.5947 10688.75 L-5627.0415 10688.5254 -5626.7266 10689.1367 -5627.1128 10689.0039 C-5627.02 10688.9453 -5627.0527 10688.873 -5627.0361 10688.7979 C-5627.3965 10689.1338 -5627.9795 10689.0225 -5628.3389 10689.1367 C-5628.3174 10689.1113 -5628.3232 10689.0605 Y-5628.7148 10689.1025 -5629.1245 10688.998 -5629.5552 10689.1445 C-5629.7119 10689.0625 -5629.5039 10688.6934 -5629.9185 10688.7617 C-5629.9033 10689.1328 -5630.6221 10688.9141 -5630.3779 10689.334 C-5630.7319 10689.2734 -5631.2925 10689.1338 -5631.5283 10689.2598 C-5631.3691 10689.1191 -5631.7007 10688.8066 -5631.4063 10688.7754 C-5631.6289 10688.5498 L-5631.5957 10688.3984 -5631.3999 10688.6016 -5631.4707 10688.4102 C-5631.6182 10688.4258 -5632.0479 10688.5723 -5632.1797 10688.5117 C-5632.4531 10688.7393 -5632.7041 10689.1641 -5633.1465 10689.2109 C-5632.9385 10689.0664 -5633.2646 10688.8018 -5633.1235 10688.7383 C-5633.7407 10689.4482 L-5633.8877 10689.4658 -5633.7725 10689.1563 -5633.9854 10689.2529 C-5633.9746 10689.3506 -5634.0674 10689.4121 -5634.1318 10689.4922 C-5634.1875 10689.4482 -5634.7441 10689.584 -5634.8081 10689.2178 C-5634.8735 10689.0762 -5634.5684 10689.1426 -5634.7314 10689.0117 C-5635.0029 10689.0146 -5635.0151 10689.1406 -5635.2871 10689.1465 C-5635.2925 10689.0977 L-5635.4717 10689.043 -5635.8213 10689.2529 -5635.6265 10689.4551 C-5635.5015 10689.4658 -5635.6738 10689.2354 -5635.4888 10689.3418 C-5635.6152 10689.5537 -5635.9312 10689.6133 -5636.2031 10689.6162 C-5636.1104 10689.5586 -5636.1216 10689.4609 -5636.0845 10689.3574 C-5636.4497 10689.6445 -5636.8369 10689.7354 -5637.2451 10689.8555 C-5637.2515 10690.0293 -5637.0928 10689.5391 -5637.0327 10689.6309 C-5637.5557 10689.3896 -5638.1128 10689.9727 -5638.5479 10689.6201 C-5638.4766 10689.5898 -5638.5098 10689.8672 -5638.5146 10689.8184 C-5638.7666 10689.7969 -5638.7549 10689.5449 -5638.9189 10689.6377 C-5638.9355 10689.4902 -5639.1255 10689.6855 -5639.2944 10689.7305 C-5639.3818 10689.8369 -5639.3384 10689.6582 -5639.1914 10689.6426 C-5639.4268 10689.7666 -5640.3691 10689.9941 -5640.9131 10689.7793 C-5640.9023 10689.877 -5641.2471 10690.1377 -5641.3721 10690.127 C-5641.3232 10689.8984 L-5641.4375 10689.7617 -5641.7422 10689.918 -5641.7632 10689.7227 C-5642.0303 10690 -5640.7344 10689.4863 -5641.0957 10689.7002 C-5641.1895 10689.5098 -5641.5991 10690.0645 -5641.5215 10689.7529 C-5641.7725 10689.7617 -5642.0161 10690.0186 -5642.2559 10689.8047 C-5642.1865 10689.8418 -5642.0522 10689.4873 -5642.2549 10689.5039 C-5642.6123 10689.5449 -5642.3564 10689.6133 -5642.6465 10689.6895 C-5642.8281 10689.7832 L-5642.8398 10690.0059 -5643.1475 10689.7529 -5643.0146 10690.002 C-5643.0586 10689.8184 -5643.5337 10690.1152 -5643.4971 10689.7461 C-5643.4473 10689.4551 L-5643.6016 10689.4766 -5643.7002 10689.7617 -5643.8213 10689.8896 C-5643.8418 10689.8633 -5643.8823 10689.8047 -5643.8745 10689.7578 C-5643.8994 10690.2031 -5644.2432 10689.7207 -5644.4268 10690.0645 C-5644.7505 10689.9102 -5645.2495 10690.0498 -5645.4023 10689.7734 C-5645.6514 10689.9082 -5645.8784 10690.0674 -5646.1621 10689.9727 C-5646.1055 10689.9307 -5646.0283 10689.918 -5646.0122 10689.8223 C-5646.1904 10689.6914 -5646.2344 10689.8086 -5646.3975 10689.8809 C-5646.3608 10689.8145 -5646.7539 10689.6201 -5646.9521 10689.4629 C-5647.1992 10689.5957 -5647.1143 10689.8359 -5647.1392 10689.9824 C-5647.3652 10689.543 -5647.8379 10690.2656 -5648.1211 10689.8672 C-5648.0352 10689.8066 -5647.7598 10689.6514 -5647.9658 10689.541 C-5648.1919 10689.1025 -5648.4219 10689.8643 -5648.7861 10689.6543 C-5648.6968 10690.0186 L-5648.8594 10689.793 -5649.2334 10690.2305 -5649.1963 10689.8594 C-5649.3184 10689.9902 -5649.6265 10689.7383 -5649.5859 10690.0938 C-5650.1846 10689.793 -5651.0425 10690.2754 -5651.4102 10689.6377 C-5651.4961 10689.6973 -5651.7104 10689.6367 -5651.6665 10689.8193 C-5651.5239 10690.0176 -5651.4673 10689.6777 -5651.4141 10689.8125 C-5651.4912 10689.8232 -5651.5078 10689.9209 -5651.5161 10689.9697 C-5651.7021 10689.8887 -5651.8486 10689.8633 -5651.6729 10689.5674 C-5652.0869 10689.3477 -5652.1001 10690.1719 -5652.6274 10690.0322 C-5652.6035 10689.8857 -5652.6436 10689.8301 -5652.7979 10689.8535 C-5653.0903 10690.1055 L-5653.4312 10690.0469 -5653.2842 10689.7705 -5653.2925 10689.5215 C-5653.4746 10689.5645 -5653.6973 10689.5527 -5653.7803 10689.7383 C-5654.0015 10689.4258 L-5653.8398 10689.6514 -5654.1514 10689.5762 -5654.2368 10689.6367 C-5654.1514 10689.5762 L-5654.1846 10689.4697 -5654.3955 10689.5352 -5654.5024 10689.5664 C-5654.4766 10689.7207 -5654.2617 10689.7832 -5654.1445 10689.8281 C-5654.2373 10689.9375 -5654.3823 10689.9121 -5654.5059 10690.041 C-5654.4648 10689.7969 -5654.8027 10689.8672 -5654.9473 10689.8418 C-5655.1133 10689.7891 -5655.1348 10690.0605 -5655.1831 10690.0527 C-5655.1875 10689.9258 -5655.4541 10690.0313 -5655.3247 10689.8535 C-5655.2681 10689.8125 -5655.1953 10689.9766 -5655.1016 10689.8643 C-5655.2109 10689.7705 -5655.1982 10689.5498 -5655.4258 10689.7109 C-5655.5967 10689.832 -5655.3818 10690.1934 -5655.7061 10690.0391 C-5655.6211 10689.9785 -5655.6055 10689.8809 -5655.5391 10689.793 C-5655.8433 10689.666 L-5655.8564 10689.8887 L-5655.8975 10689.832 -5655.8691 10689.8125 -5655.8877 10689.7832 C-5655.9785 10690.0176 -5656.3521 10689.8555 -5656.4209 10690.1191 C-5656.5742 10690.1426 -5656.7441 10689.9648 -5656.8906 10689.9395 C-5656.8623 10689.9199 L-5657.0415 10689.7891 -5657.2793 10689.875 -5657.4297 10690.0254 C-5657.4219 10689.9766 L-5657.5195 10689.959 -5657.7505 10689.9941 -5657.8735 10690.125 C-5658.1201 10689.957 -5657.9561 10689.2842 -5658.2295 10689.5645 C-5658.48 10689.5723 -5658.6221 10689.9727 -5658.5215 10690.1152 C-5658.9717 10689.9648 -5659.4834 10690.3281 -5659.9009 10689.9824 C-5659.9658 10690.0723 -5659.9248 10690.1289 -5660.0586 10690.1816 C-5660.7197 10690.0938 -5661.4551 10690.4453 -5661.9814 10690.0078 C-5661.79 10689.9141 -5661.9688 10689.7842 -5661.9727 10689.6582 C-5662.1309 10689.8574 -5662.1631 10689.4512 -5662.2197 10689.793 C-5662.2041 10689.9941 -5662.2197 10690.0918 -5662.0337 10690.1729 C-5662.4282 10690.2813 -5663.0283 10690.2813 -5663.2471 10690.0938 C-5663.1377 10690.1865 -5663.2227 10690.248 -5663.3086 10690.3086 C-5663.2803 10689.9873 -5663.5713 10689.9395 -5663.7915 10690.0527 C-5663.8223 10690.248 L-5663.9658 10690.0469 L-5664.0503 10690.1094 -5664.0591 10690.457 -5664.2773 10690.2695 C-5664.2891 10690.1934 -5664.3018 10690.1162 -5664.3418 10690.0605 C-5664.5693 10690.2207 -5664.8906 10690.4922 -5665.1377 10690.3262 C-5665.3398 10690.041 L-5665.4453 10690.0723 -5665.6235 10690.2441 -5665.4375 10690.3262 C-5665.8594 10690.1543 -5666.1309 10690.1328 -5666.2646 10689.8857 C-5666.9912 10690.4873 -5668.0459 10690.5117 -5668.8906 10690.4688 C-5668.8652 10690.3223 L-5669.0923 10690.1855 -5668.9834 10690.5781 -5669.1416 10690.4766 C-5669.0684 10690.3369 -5669.3145 10690.1729 -5669.1362 10690.002 C-5669.4609 10689.8477 -5669.5547 10690.2559 -5669.7656 10690.3223 C-5669.7979 10690.5146 -5669.5957 10690.1992 -5669.6367 10690.4434 C-5669.6729 10690.5117 -5670.0859 10690.293 -5670.1362 10690.584 C-5670.2178 10690.4697 -5670.1543 10690.2559 -5670.1104 10690.1377 C-5670.3086 10690.2793 L-5670.5513 10689.9395 -5669.7559 10689.6719 -5670.0107 10689.2529 C-5670.1934 10689.2979 L-5670.3682 10688.9941 -5669.71 10688.9551 -5670.1689 10688.8506 C-5670.3682 10688.9941 -5670.5381 10689.416 -5670.3608 10689.5449 C-5670.7754 10689.625 -5670.5527 10690.2383 -5670.9985 10690.2139 C-5671.1201 10690.043 -5670.6416 10690.1729 -5670.7275 10689.9336 C-5670.9375 10689.6992 -5671.1484 10690.0645 -5671.3354 10689.9824 C-5671.1279 10690.0918 -5671.3032 10690.3857 -5671.4375 10690.4395 C-5671.6641 10690.3018 -5671.29 10690.1641 -5671.6113 10690.1338 C-5671.6641 10690.3018 -5671.9595 10690.4277 -5671.7041 10690.5449 C-5671.8203 10690.9258 -5672.0381 10690.4395 -5672.2129 10690.7344 C-5672.3174 10690.4658 -5671.8823 10690.1152 -5672.2354 10689.9814 C-5672.1792 10690.2393 -5672.6704 10690.332 -5672.4839 10690.7139 C-5672.6221 10690.6406 -5672.6367 10690.4375 -5672.5361 10690.2793 C-5672.7334 10690.1201 -5673.0151 10690.75 -5673.0801 10690.2383 C-5673.1479 10690.502 L-5673.21 10690.416 -5673.2983 10690.3506 -5673.3994 10690.209 C-5673.5732 10690.2041 -5673.96 10690.5664 -5673.9443 10690.168 C-5674 10690.209 -5674.3975 10690.1914 -5674.2441 10690.4658 C-5673.9971 10690.6338 -5673.96 10690.2656 -5673.8223 10690.6377 C-5673.9971 10690.334 -5674.1787 10690.6777 -5674.3213 10690.7793 C-5674.3447 10690.625 L-5674.4297 10690.6855 -5674.6255 10690.6514 -5674.6787 10690.8184 C-5674.6133 10690.7305 -5674.6475 10690.625 -5674.7148 10690.5879 C-5674.8042 10690.8223 L-5675.1494 10690.9395 -5674.8857 10690.4102 -5675.2217 10690.4785 C-5674.9663 10690.2969 L-5675.0225 10690.3359 -5675.1367 10690.1162 -5675.2979 10690.1895 C-5675.3604 10690.4033 -5675.4775 10690.6602 -5675.5313 10690.8262 C-5675.7207 10690.9199 -5675.6162 10690.585 -5675.8027 10690.8047 C-5675.5586 10690.5469 L-5675.5215 10690.4766 -5675.7231 10690.1934 -5675.9761 10690.1992 C-5676.1377 10690.2734 -5676.3887 10690.582 -5676.1338 10690.6992 C-5676.2607 10690.7031 -5676.4385 10690.5723 -5676.3379 10690.416 C-5676.6255 10690.4902 -5676.2998 10690.6465 -5676.5479 10690.7793 C-5676.6494 10690.6367 -5676.9658 10690.4336 -5677.1563 10690.2266 C-5676.8975 10689.8682 L-5677.0693 10689.8643 L-5676.8467 10689.5781 -5677.1826 10689.6465 -5677.0566 10689.3438 C-5677.1743 10689.2969 -5677.3169 10689.3994 -5677.4307 10689.4785 C-5677.0864 10689.9629 -5677.8159 10690.1406 -5677.7158 10690.582 C-5678.1875 10690.7031 -5678.0107 10689.5078 -5678.5024 10690.1992 C-5678.4219 10690.3145 -5678.6533 10690.6504 -5678.3564 10690.5225 C-5678.6494 10690.4746 -5678.5557 10690.9658 -5678.9014 10690.7832 C-5678.6455 10690.6016 -5679.1763 10690.3359 -5678.8066 10690.0723 C-5678.8311 10690.2178 -5678.6001 10690.1826 -5678.5435 10690.1426 C-5678.6641 10689.9727 -5678.5186 10689.6973 -5678.8184 10689.6973 C-5679.0015 10689.7393 -5679.2524 10689.748 -5679.2158 10689.9785 C-5679.2085 10690.2314 -5678.9365 10689.9512 -5679.0537 10690.207 C-5679.4185 10690.2949 -5679.4795 10689.9102 -5679.6304 10690.3594 C-5679.3999 10690.3232 -5679.3423 10690.584 -5679.3467 10690.7578 C-5679.6143 10690.8633 L-5679.5625 10690.6953 L-5679.9922 10690.5742 -5679.6895 10691 -5680.1055 10690.9551 C-5680.3008 10690.623 L-5680.2017 10690.3369 -5679.6953 10690.75 -5679.7695 10690.2842 C-5680.04 10690.2656 -5680.1299 10690.502 -5680.3848 10690.3818 C-5680.3281 10690.3418 -5680.2505 10690.3301 -5680.1943 10690.2891 C-5680.2915 10690.2734 -5680.3877 10689.6563 -5680.7734 10690.0176 C-5680.9727 10690.1582 -5680.8262 10690.1826 -5680.8311 10690.3574 C-5681.2656 10690.4102 -5681.3955 10690.5879 -5681.6753 10690.6152 C-5681.6177 10690.2754 -5682.1699 10690.582 -5681.8608 10690.2344 C-5681.7188 10690.4336 -5681.0903 10690.4141 -5680.9365 10690.0898 C-5681.0947 10689.6865 -5680.5952 10690.1465 -5680.5024 10689.7383 C-5680.8506 10689.7285 -5680.8335 10689.332 -5680.8896 10689.0723 C-5680.9863 10689.0537 -5681.0801 10689.1641 -5681.1377 10689.2041 C-5681.1787 10689.4482 -5681.0522 10689.4453 -5681.0449 10689.6973 C-5681.4336 10689.6309 -5681.8081 10689.7666 -5682.0225 10690.0059 C-5682.1523 10689.8848 -5682.1113 10689.6406 -5681.9575 10689.6162 C-5682.4199 10689.6895 -5682.9141 10689.6563 -5683.3535 10689.582 C-5683.0693 10689.9814 -5683.8433 10689.6758 -5683.6494 10690.0078 C-5683.4141 10690.0977 -5683.2119 10690.3818 -5683.3418 10690.5605 C-5683.4888 10690.5352 -5683.3369 10690.3857 -5683.3984 10690.3008 C-5683.5859 10690.5186 -5683.6895 10689.9512 -5683.8735 10690.2949 C-5683.4512 10690.166 -5683.7915 10689.8086 -5683.7139 10689.4961 C-5684.0186 10689.6719 -5683.7007 10689.2734 -5684.0024 10689.2734 C-5684.3057 10689.4473 -5684.6787 10689.584 -5685.0161 10689.6514 C-5685.4399 10689.3555 -5686.0898 10689.6465 -5686.4683 10689.6582 C-5686.6665 10689.5 -5686.5322 10689.1465 -5686.7471 10689.085 C-5686.9995 10689.0918 -5686.5601 10689.4658 -5686.9336 10689.3047 C-5686.8975 10689.2344 L-5687.0107 10689.3154 -5687.5825 10688.9941 -5687.6929 10689.502 C-5687.5776 10689.1191 L-5687.6475 10689.084 -5687.7119 10689.1719 -5687.7695 10689.2129 C-5687.7725 10689.0879 -5687.8535 10688.9746 -5687.7402 10688.8926 C-5687.9707 10688.6289 -5688.2241 10688.9346 -5688.4746 10688.9453 C-5688.3135 10689.1719 L-5688.7422 10689.3496 -5689.0293 10689.125 -5689.4443 10689.2041 C-5689.4316 10688.9824 L-5689.6787 10689.1152 L-5689.6182 10688.8994 -5689.8447 10688.7617 -5689.9751 10688.9414 C-5689.3335 10688.3984 L-5689.1553 10688.5293 -5689.5283 10688.666 -5689.4165 10688.8848 C-5689.3213 10689.0762 -5688.9375 10689.0146 -5688.8755 10688.8018 C-5689.0225 10688.7773 -5689.0293 10688.8262 -5689.1436 10688.9063 C-5689.1919 10688.5977 -5688.9688 10688.6094 -5688.8584 10688.4033 C-5688.9355 10688.416 -5689.0449 10688.3223 -5689.0615 10688.4199 C-5688.9102 10688.2695 -5688.7578 10688.2461 -5688.5059 10688.2383 C-5688.6763 10688.3594 -5688.4131 10688.4297 -5688.4775 10688.5176 C-5688.4575 10688.2461 -5688.2168 10688.1621 -5687.9053 10688.2383 C-5687.6831 10688.5527 -5687.3208 10688.0361 -5686.96 10688.123 C-5687.1064 10688.3984 -5687.2935 10688.6191 -5687.5127 10688.7305 C-5687.2861 10688.8682 -5687.2607 10688.7227 -5687.0337 10688.8613 C-5686.9238 10688.6563 -5686.8457 10688.3418 -5686.5503 10688.2168 C-5686.5342 10688.4199 L-5686.2666 10688.3154 -5686.2666 10688.0146 -5685.9258 10688.0723 C-5685.3418 10688.1719 -5684.7407 10688.1719 -5684.2949 10688.1973 C-5684.2783 10688.3994 L-5684.0303 10687.9658 -5683.4521 10688.2393 -5683.1182 10688.0469 C-5682.5503 10688.2422 -5681.8848 10687.8535 -5681.5938 10688.2031 C-5680.5913 10688.0469 -5679.7148 10687.8945 -5678.6768 10687.9688 C-5678.8516 10688.2637 L-5678.6655 10688.0469 -5678.7305 10688.4336 -5678.5479 10688.3896 C-5678.7578 10688.1543 -5678.2949 10688.084 -5678.1665 10687.9033 C-5677.7041 10688.1328 -5677.1104 10687.8818 -5676.7007 10687.6758 C-5676.6846 10687.8789 L-5676.2705 10687.498 -5675.7759 10687.832 -5675.2598 10687.8945 C-5675.2007 10687.9785 -5675.1074 10688.1689 -5674.9536 10688.1465 C-5674.6738 10687.8184 -5674.5273 10687.8418 -5674.1167 10687.6367 C-5673.8169 10687.6367 -5673.3301 10687.7178 -5673.0254 10687.8457 C-5671.8975 10687.3848 -5670.7456 10687.6797 -5669.5732 10687.4023 C-5669.4888 10687.6406 L-5668.3521 10687.1309 -5666.9541 10687.5938 -5665.9839 10687.332 C-5666.0776 10687.7393 L-5665.7734 10687.8643 -5665.3843 10687.6328 -5665.4619 10687.3438 C-5665.1567 10687.4688 -5664.7007 10687.1465 -5664.5068 10687.4814 C-5664.1953 10687.5566 -5664.1255 10687.293 -5663.8662 10687.2383 C-5663.2422 10687.3926 -5663.0107 10687.3574 -5662.4224 10687.2813 C-5662.5684 10687.2559 L-5662.6328 10687.3457 -5662.6387 10687.5186 -5662.4922 10687.5449 C-5662.2725 10687.4307 -5661.6846 10687.6543 -5661.9033 10687.168 C-5661.2754 10687.4482 -5660.4385 10686.9395 -5659.8271 10687.3184 C-5659.8789 10687.1855 -5659.7246 10687.1602 -5659.6602 10687.0703 C-5659.1089 10687.0645 -5658.5293 10687.3359 -5658.0898 10687.1094 C-5658.0024 10687.1758 -5658.2295 10687.3359 -5658.0049 10687.3496 C-5657.8721 10687.2979 -5658.0024 10687.1758 -5657.8384 10687.1016 C-5656.9453 10686.8535 -5656.0303 10687.3574 -5655.2188 10687.293 C-5653.7754 10687.0361 -5652.2695 10687.166 -5650.8867 10687.123 C-5650.9023 10687.2207 L-5650.4395 10686.8477 -5649.8159 10687.6025 -5649.4463 10687.041 C-5649.3369 10687.1338 -5649.0283 10687.085 -5649.1094 10687.2734 C-5648.7407 10687.0098 -5648.0771 10687.5215 -5647.5439 10687.1865 C-5647.5928 10687.1777 -5647.6211 10687.1973 -5647.6777 10687.2393 C-5647.1392 10687.4551 -5646.6641 10687.1602 -5646.0957 10687.3555 C-5646.1533 10687.3975 -5646.2583 10687.4277 -5646.2754 10687.5254 C-5646.0557 10687.7129 -5645.7549 10687.1133 -5645.6348 10687.584 C-5645.5088 10687.5801 -5645.5449 10687.3477 -5645.6221 10687.3613 C-5644.3779 10687.5449 -5643.0498 10687.2441 -5641.7549 10687.1367 C-5640.8271 10687.418 -5641.6982 10687.9297 -5640.9663 10687.5781 C-5640.9063 10687.6689 -5640.9229 10687.3984 -5640.9131 10687.4961 C-5640.6299 10687.3643 -5640.4717 10688.0215 -5640.2754 10687.7754 C-5640.3564 10687.4863 -5640.1445 10687.6133 -5640.1387 10687.4375 C-5639.5713 10687.625 -5639.4575 10687.8857 -5639.0098 10687.666 C-5639.0435 10687.8184 L-5638.5186 10687.3887 -5637.9102 10687.6191 -5637.4673 10687.123 C-5634.5728 10687.0322 -5631.7983 10686.7578 -5628.9761 10686.7002 C-5626.1865 10686.7949 -5623.4551 10686.5723 -5620.6221 10686.8359 C-5619.9585 10687.2354 -5619.9087 10687.2246 -5619.1797 10687.0625 C-5619.2095 10687.127 -5619.2549 10687.1426 -5619.2061 10687.2031 C-5619.1699 10686.875 -5618.6929 10687.1719 -5618.6235 10686.8594 C-5617.5762 10686.9199 -5616.6113 10686.8301 -5615.5337 10686.8281 C-5615.7041 10686.8633 -5615.7896 10687.1309 -5615.5869 10687.1094 C-5615.3755 10686.8994 L-5615.3408 10686.9922 L-5615.2021 10686.9434 -5615.0513 10686.7813 -5615.1943 10686.6758 C-5612.4873 10686.3926 -5609.8242 10687.0498 -5607.1729 10686.9697 C-5606.5439 10687.1064 -5605.6475 10686.9814 -5604.9629 10686.9141 C-5602.9355 10687.3506 -5601.1084 10687.7041 -5599.0479 10687.3984 C-5599.3174 10688.2461 -5600.1675 10688.4414 Vf-5690.2578 10688.2422 m-5690.1855 10688.4063 -5689.9497 10688.4961 -5690.1377 10688.7139 C-5690.1611 10688.5605 -5690.2822 10688.3887 -5690.2578 10688.2422 Cf-5683.9619 10689.9297 m-5683.9536 10689.8809 -5683.8721 10689.9961 -5683.8521 10690.0225 C-5683.9297 10690.0352 -5684.0024 10690.1729 -5684.0645 10690.0879 C-5683.9854 10690.0762 -5683.9976 10689.998 -5683.9619 10689.9297 Cf-5682.3521 10690.0273 m-5682.3765 10690.1729 -5682.7207 10690.2891 -5682.9238 10690.3066 C-5682.3521 10690.0273 Lf-5680.8521 10690.6289 m-5680.7227 10690.752 -5680.7583 10690.8193 -5680.9326 10690.8154 C-5680.9453 10690.7383 -5680.8877 10690.6992 -5680.8521 10690.6289 Cf-5680.7456 10690.2969 m-5680.6211 10690.293 -5680.5591 10690.3789 -5680.4985 10690.4629 C-5680.5029 10690.3369 -5680.7871 10690.541 -5680.7456 10690.2969 Cf-5677.4893 10690.7207 m-5677.4111 10690.709 -5677.2417 10690.5879 -5677.1689 10690.75 C-5677.2505 10690.6367 -5677.5498 10690.9346 -5677.4893 10690.7207 Cf-5675.9761 10690.5 m-5675.9272 10690.5098 -5675.9072 10690.5361 -5675.8506 10690.4961 C-5675.7607 10690.5625 -5675.8555 10690.6689 -5675.9312 10690.6826 C-5675.9761 10690.5 Lf-5648.4287 10689.9141 m-5648.5923 10689.9863 L-5648.5684 10689.8418 L-5648.4287 10689.9141 Lf-5636.3574 10689.9063 m-5636.1943 10689.8145 -5636.2441 10690.043 -5636.2168 10690.0645 C-5636.3643 10690.0801 -5636.1621 10689.8848 -5636.3574 10689.9063 Cf-5629.8486 10689.1777 m-5629.8984 10689.1816 L-5629.8818 10688.8818 L-5629.8486 10689.1777 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Angled/ Adobe ArtOnPath ) -(Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Tapered Stro) -(ke/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Angled)(1 5 5 70 70 50 50 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0.000031 0.000031 0.000031 0.000031 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk(R=38 G=38 B=38)Pc0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk(R=239 G=239 B=239)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 O0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk0 J 0 j 1 w 4 M []0 d0 XR114.4814 1758.9053 m85.6982 1758.9053 62.335 1784.5918 62.335 1816.1338 C62.335 2669.8057 L62.335 2701.2998 85.6982 2726.9736 114.4814 2726.9736 C528.3008 2726.9736 L557.0791 2726.9736 580.5596 2701.2998 580.5596 2669.8057 C580.5596 1816.1338 L580.5596 1784.5918 557.0791 1758.9053 528.3008 1758.9053 C114.4814 1758.9053 Lf0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk100.8809 1879.124 m100.8809 2582.5801 L542.0137 2582.5801 L542.0137 1879.124 L100.8809 1879.124 Lf1 Ap401.1172 1828.4219 m401.1172 1823.5547 396.4717 1819.5684 390.876 1819.5684 c252.0547 1819.5684 l246.4785 1819.5684 241.7773 1823.5547 241.7773 1828.4219 c241.7773 1833.2979 246.4785 1837.2813 252.0547 1837.2813 c390.876 1837.2813 l396.4717 1837.2813 401.1172 1833.2979 401.1172 1828.4219 cfu337.7197 2667.4814 m337.7197 2658.5195 330.4912 2651.2236 321.4316 2651.2236 c312.459 2651.2236 305.1748 2658.5195 305.1748 2667.4814 c305.1748 2676.4521 312.459 2683.7568 321.4316 2683.7568 c330.4912 2683.7568 337.7197 2676.4521 337.7197 2667.4814 cf0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk331.5625 2667.4814 m331.5625 2662.0073 326.9189 2657.52 321.4316 2657.52 c315.7998 2657.52 311.2969 2662.0073 311.2969 2667.4814 c311.2969 2673.0508 315.7998 2677.6162 321.4316 2677.6162 c326.9189 2677.6162 331.5625 2673.0508 331.5625 2667.4814 cfUUu0 Ap3597.7715 2624.8228 m3629.0078 2624.8228 3654.5625 2599.2646 3654.5625 2568.0391 c3654.5625 2249.3945 l3654.5625 2218.1738 3672.8926 2174.8086 3695.3066 2153.0605 c3774.5605 2076.1016 l3796.9727 2054.3447 3789.7441 2036.542 3758.5059 2036.542 c2800.834 2036.542 l2769.5996 2036.542 2762.373 2054.3447 2784.7813 2076.1016 c2864.0352 2153.0605 l2886.4453 2174.8086 2904.7773 2218.1738 2904.7773 2249.3945 c2904.7773 2568.0391 l2904.7773 2599.2646 2930.334 2624.8228 2961.5684 2624.8228 c3597.7715 2624.8228 lfuu1 Ap4906.3975 2625.4893 m4906.3975 2594.3105 4880.8916 2568.8086 4849.7207 2568.8086 c1709.623 2568.8086 l1678.4482 2568.8086 1652.9463 2594.3105 1652.9463 2625.4893 c1652.9463 4736.3105 l1652.9463 4767.48 1678.4482 4792.981 1709.623 4792.981 c4849.7207 4792.981 l4880.8916 4792.981 4906.3975 4767.48 4906.3975 4736.3105 c4906.3975 2625.4893 lfUu4906.3975 2625.4893 m4906.3975 2594.3105 4880.8916 2568.8086 4849.7207 2568.8086 c1709.623 2568.8086 l1678.4482 2568.8086 1652.9463 2594.3105 1652.9463 2625.4893 c1652.9463 4736.3105 l1652.9463 4767.48 1678.4482 4792.981 1709.623 4792.981 c4849.7207 4792.981 l4880.8916 4792.981 4906.3975 4767.48 4906.3975 4736.3105 c4906.3975 2625.4893 lfUU0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk4790.1445 2963.5459 m1769.1992 2963.5459 L1769.1992 4661.3701 L4790.1445 4661.3701 L4790.1445 2963.5459 LfUu0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk1418.2261 3061.3994 m1418.2261 3030.23 1392.7231 3004.7295 1361.5483 3004.7295 c119.0078 3004.7295 l87.8359 3004.7295 62.333 3030.23 62.333 3061.3994 c62.333 4669.7817 l62.333 4700.9561 87.8359 4726.457 119.0078 4726.457 c1361.5483 4726.457 l1392.7231 4726.457 1418.2261 4700.9561 1418.2261 4669.7817 c1418.2261 3061.3994 lf0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk1269.8403 3149.4048 m210.7188 3149.4048 L210.7188 4581.7856 L1269.8403 4581.7856 L1269.8403 3149.4048 Lfu768.2397 4650.6377 m768.2397 4635.2373 755.8179 4622.6743 740.3018 4622.6743 c724.8862 4622.6743 712.3193 4635.2373 712.3193 4650.6377 c712.3193 4666.0342 724.8862 4678.5923 740.3018 4678.5923 c755.8179 4678.5923 768.2397 4666.0342 768.2397 4650.6377 cf0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk757.6636 4650.6377 m757.6636 4641.2168 749.6816 4633.5098 740.3018 4633.5098 c730.5762 4633.5098 722.8911 4641.2168 722.8911 4650.6377 c722.8911 4660.1885 730.5762 4668.0347 740.3018 4668.0347 c749.6816 4668.0347 757.6636 4660.1885 757.6636 4650.6377 cfUu0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk859.1992 3083.1011 m859.1992 3075.835 852.2637 3069.8813 843.9126 3069.8813 c636.6978 3069.8813 l628.3809 3069.8813 621.3599 3075.835 621.3599 3083.1011 c621.3599 3090.3716 628.3809 3096.3125 636.6978 3096.3125 c843.9126 3096.3125 l852.2637 3096.3125 859.1992 3090.3716 859.1992 3083.1011 cfUUu0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk4591.9668 353.9521 m4591.9668 313.0654 4558.5166 279.6191 4517.6357 279.6191 c2345.043 279.6191 l2304.166 279.6191 2270.7148 313.0654 2270.7148 353.9521 c2270.7148 1782.0713 l2270.7148 1822.9502 2304.166 1856.3965 2345.043 1856.3965 c4517.6357 1856.3965 l4558.5166 1856.3965 4591.9668 1822.9502 4591.9668 1782.0713 c4591.9668 353.9521 lf0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk4487.917 404.4873 m2374.7656 404.4873 L2374.7656 1745.4297 L4487.917 1745.4297 L4487.917 404.4873 Lf0 Ap0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk1907.749 336.5234 m1907.749 271.7695 L1920.3086 207.0186 2010.9141 207.0186 V3431.3398 207.0186 L4851.7598 207.0186 L4942.3711 207.0186 4954.9336 271.7695 Y4954.9336 336.5234 L1907.749 336.5234 Lf0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk3282.4482 304.1455 m3580.2344 304.1455 L3588.4082 304.1455 3595.1025 310.833 3595.1025 319.0107 C3595.1025 336.5234 L3267.5791 336.5234 L3267.5791 319.0107 L3267.5791 310.833 3274.2744 304.1455 3282.4482 304.1455 CfUu0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk1159.5542 1758.9053 m1126.1753 1758.9053 1063.1411 1760.4023 1033.8354 1763.6123 c967.0068 1770.9219 922.1079 1803.6191 922.1079 1844.998 C922.1079 2641.2534 L922.1079 2682.6182 967.0068 2715.3247 1033.8354 2722.6338 c1065.252 2726.0693 1138.0298 2727.0469 1167.8623 2727.3032 c1170.4653 2727.3203 1173.2847 2727.334 1176.2964 2727.334 c1209.6689 2727.334 1272.707 2725.8398 1302.0107 2722.6338 c1368.8394 2715.3247 1413.7378 2682.6182 1413.7378 2641.2534 C1413.7378 1844.998 L1413.7378 1803.627 1368.8394 1770.9219 1302.0107 1763.6123 c1270.5483 1760.1797 1197.8008 1759.1973 1167.9814 1758.9434 c1165.3813 1758.9131 1162.5615 1758.9053 1159.5542 1758.9053 C1159.5542 1758.9053 Lf1 Ap0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk945.3037 2578.9102 m1390.542 2578.9102 L1390.542 1902.584 L945.3037 1902.584 L945.3037 2578.9102 Lf1209.7813 2648.0649 m1209.7813 2645.2305 1207.2905 2642.9155 1204.2397 2642.9155 c1131.6055 2642.9155 l1128.5596 2642.9155 1126.0645 2645.2305 1126.0645 2648.0649 c1126.0645 2650.8906 1128.5596 2653.2061 1131.6055 2653.2061 c1204.2397 2653.2061 l1207.2905 2653.2061 1209.7813 2650.8906 1209.7813 2648.0649 cf1194.3677 1834.3037 m1194.3677 1819.7012 1182.5288 1807.8643 1167.9238 1807.8643 c1153.3169 1807.8643 1141.478 1819.7012 1141.478 1834.3037 c1141.478 1848.9121 1153.3169 1860.7588 1167.9238 1860.7588 c1182.5288 1860.7588 1194.3677 1848.9121 1194.3677 1834.3037 cfUu0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk136.6641 207.0186 m95.7842 207.0186 62.333 240.4688 62.333 281.3457 c62.333 1488.5801 l62.333 1529.4609 95.7842 1562.9004 136.6641 1562.9004 c1709.7354 1562.9004 l1750.6152 1562.9004 1784.0645 1529.4609 1784.0645 1488.5801 c1784.0645 281.3457 l1784.0645 240.4688 1750.6152 207.0186 1709.7354 207.0186 c136.6641 207.0186 lf0.047761 0.034302 0.034302 0.000031 0.937255 0.937255 0.937255 (R=239 G=239 B=239) 0 1 Xk207.0068 355.4043 m207.0068 1414.5215 L1639.3906 1414.5215 L1639.3906 355.4043 L207.0068 355.4043 Lfu951.1587 1477.625 m951.1587 1462.2207 938.7378 1449.667 923.2246 1449.667 c907.8037 1449.667 895.2388 1462.2207 895.2388 1477.625 c895.2388 1493.0273 907.8037 1505.5859 923.2246 1505.5859 c938.7378 1505.5859 951.1587 1493.0273 951.1587 1477.625 cf0.710841 0.650507 0.640253 0.693324 0.14902 0.14902 0.14902 (R=38 G=38 B=38) 0 1 Xk940.5835 1477.625 m940.5835 1468.2109 932.5991 1460.5039 923.2246 1460.5039 c913.4966 1460.5039 905.8105 1468.2109 905.8105 1477.625 c905.8105 1487.1777 913.4966 1495.0234 923.2246 1495.0234 c932.5991 1495.0234 940.5835 1487.1777 940.5835 1477.625 cfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF